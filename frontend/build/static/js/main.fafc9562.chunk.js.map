{"version":3,"sources":["pages/Auth/background.jpg","pages/Profile/background.jpg","utils/apollo-client.js","store/message.js","store/auth.js","store/store.js","theme.js","components/App/GlobalStyles.js","graphql/post.js","graphql/user.js","graphql/messages.js","graphql/notification.js","components/icons/UserIcon.js","components/icons/CloseIcon.js","components/icons/UploadImageIcon.js","components/icons/LikeIcon.js","components/icons/PostCommentIcon.js","components/icons/ExploreIcon.js","components/icons/NotificationIcon.js","components/icons/MenuIcon.js","components/icons/HomeIcon.js","components/icons/PeopleIcon.js","components/icons/SearchIcon.js","components/icons/DotsIcon.js","components/icons/InfoIcon.js","components/icons/WarningIcon.js","components/icons/ErrorIcon.js","components/icons/SuccessIcon.js","components/icons/EmptyIcon.js","components/icons/NotFoundIcon.js","components/icons/EnvelopeIcon.js","components/icons/EnvelopeOpenIcon.js","components/icons/SendIcon.js","components/icons/PencilIcon.js","components/Layout.js","components/Form.js","constants/MessageType.js","components/Message.js","components/Loading.js","components/Text.js","routes.js","pages/Auth/SignIn.js","pages/Auth/AuthHeader.js","components/Head.js","pages/Auth/SignUp.js","pages/Auth/ForgotPassword.js","pages/Auth/ResetPassword.js","pages/Auth/AuthLayout.js","components/Avatar.js","components/Search/SearchInput.js","components/Search/SearchResult.js","hooks/useClickOutside.js","components/Search/Search.js","hooks/useDebounce.js","components/App/SignOut.js","components/App/Header/HeaderUserDropDown.js","components/App/Notification.js","components/App/Header/HeaderNotificationDropDown.js","utils/date.js","components/App/Header/HeaderMessageDropdown.js","components/App/Header/HeaderDropDowns.js","components/App/Header/Header.js","constants/Layout.js","components/NotFound.js","components/App/Navigation.js","components/App/SideBar.js","components/App/UserSuggestions.js","graphql/comment.js","constants/NotificationType.js","hooks/useNotifications.js","components/CreateComment.js","graphql/follow.js","components/Follow.js","constants/DataLimit.js","components/PostPopup/PostPopupInfo.js","components/Comment.js","components/PostPopup/PostPopupComments.js","graphql/like.js","components/Like.js","components/PostPopup/PostPopupOptions.js","components/PostPopup/PostPopup.js","components/Confirm.js","components/Modal.js","components/PostCard/PostCardOption.js","components/PostCard/PostCard.js","components/InfiniteScroll.js","components/Skeleton.js","pages/Home/PostImageUpload.js","constants/ImageSize.js","hooks/useGlobalMessage.js","components/CreatePost.js","pages/Home/Home.js","pages/Profile/ProfileImageUpload.js","pages/Profile/ProfileCoverUpload.js","pages/Profile/ProfileInfo.js","components/Empty.js","pages/Profile/ProfilePosts.js","pages/Profile/Profile.js","pages/Explore/ExploreCard.js","pages/Explore/Explore.js","pages/People/PeopleCard.js","pages/People/People.js","pages/Notifications/Notifications.js","pages/Post/Post.js","pages/Messages/MessagesUsers.js","pages/Messages/MessagesChatConversation.js","pages/Messages/MessagesChatHeading.js","pages/Messages/MessagesChat.js","pages/Messages/Messages.js","components/App/AppLayout.js","hooks/useWindowSize.js","components/App/ScrollToTop.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","createAuthLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","then","oper","token","localStorage","getItem","setContext","headers","authorization","request","subscribe","next","bind","error","complete","catch","unsubscribe","messageInitialState","content","type","text","autoClose","messageReducer","state","action","Object","objectSpread2","payload","authInitialState","user","authReducer","StoreContext","createContext","store","message","auth","reducers","useStore","useContext","theme","font","family","weight","light","normal","bold","size","tiny","xxs","xs","sm","md","lg","xl","colors","black","white","success","body","primary","main","dark","contrastText","secondary","disabled","hint","border","warning","info","grey","50","100","200","300","400","500","600","700","800","900","shadows","screen","spacing","none","radius","zIndex","GlobalStyle","createGlobalStyle","_templateObject","postCommentsPayload","postAuthorPayload","postLikesPayload","CREATE_POST","gql","post_templateObject","GET_FOLLOWED_POSTS","_templateObject2","GET_POSTS","_templateObject3","GET_POST","_templateObject4","DELETE_POST","_templateObject5","userPayload","GET_USER","user_templateObject","GET_USER_POSTS","user_templateObject2","GET_AUTH_USER","user_templateObject3","GET_USERS","user_templateObject4","SEARCH_USERS","user_templateObject5","UPLOAD_PHOTO","_templateObject6","SIGN_UP","_templateObject7","SIGN_IN","_templateObject8","REQUEST_PASSWORD_RESET","_templateObject9","VERIFY_RESET_PASSWORD_TOKEN","_templateObject10","RESET_PASSWORD","_templateObject11","USER_SUGGESTIONS","_templateObject12","GET_CONVERSATIONS","_templateObject13","IS_USER_ONLINE_SUBSCRIPTION","_templateObject14","GET_MESSAGES","messages_templateObject","GET_MESSAGES_SUBSCRIPTION","messages_templateObject2","CREATE_MESSAGE","messages_templateObject3","GET_NEW_CONVERSATIONS_SUBSCRIPTION","messages_templateObject4","UPDATE_MESSAGE_SEEN","messages_templateObject5","notificationPayload","CREATE_NOTIFICATION","notification_templateObject","DELETE_NOTIFICATION","notification_templateObject2","GET_USER_NOTIFICATION","notification_templateObject3","UPDATE_NOTIFICATION_SEEN","notification_templateObject4","NOTIFICATION_CREATED_OR_DELETED","notification_templateObject5","UserIcon","width","color","DEFAULT_COLOR","react_default","a","createElement","xmlns","viewBox","d","fill","CloseIcon","UploadImageIcon","LikeIcon","get","PostCommentIcon","ExploreIcon","NotificationIcon","MenuIcon","HomeIcon","PeopleIcon","SearchIcon","DotsIcon","cx","cy","r","InfoIcon","WarningIcon","ErrorIcon","SuccessIcon","EmptyIcon","height","fillRule","transform","fillOpacity","rx","ry","NotFoundIcon","EnvelopeIcon","EnvelopeOpenIcon","SendIcon","PencilIcon","Container","styled","div","Layout_templateObject","marginTop","maxWidth","padding","concat","Content","Layout_templateObject2","Spacing","Layout_templateObject3","top","right","bottom","left","inline","hideOnSm","Overlay","Layout_templateObject4","transparency","Button","button","Form_templateObject","ghost","fullWidth","InputText","input","Form_templateObject2","borderColor","Textarea","textarea","Form_templateObject3","MessageType","form","Form_templateObject4","SUCCESS","INFO","WARNING","ERROR","keys","fade","keyframes","Message_templateObject","Root","Message_templateObject2","Close","Message_templateObject3","Message","children","_useStore","dispatch","slicedToArray","useEffect","timer","setTimeout","clearTimeout","_theme$colors","Colors","onClick","defaultProps","Load","Loading_templateObject","Round","Loading_templateObject2","Loading","Loading_templateObject3","LoadingDots","Loading_templateObject4","A","Link","Text_templateObject","Error","Text_templateObject2","getHeadingStyles","css","Text_templateObject3","H1","h1","Text_templateObject4","H2","h2","Text_templateObject5","H3","h3","Text_templateObject6","MESSAGES","POST","SignIn_templateObject","InputContainer","SignIn_templateObject2","ErrorMessage","SignIn_templateObject3","SignIn_templateObject4","withRouter","history","location","refetch","_useState","useState","emailOrUsername","password","_useState2","values","setValues","_useState3","_useState4","setError","pathname","handleChange","e","_e$target","target","name","value","[object Object]","handleSubmit","signin","preventDefault","_ref","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","setItem","push","stop","_x","apply","this","arguments","react_apollo_esm","mutation","variables","loading","apiError","onSubmit","SignIn_Root","errorMessage","graphQLErrors","renderErrors","autoFocus","onChange","placeholder","AuthHeader_templateObject","StyledContainer","AuthHeader_templateObject2","Logo","AuthHeader_templateObject3","SignInContainer","AuthHeader_templateObject4","AuthHeader","AuthHeader_Root","to","SiteInfo","Auth_SignIn","Head","title","Helmet","SignUp_templateObject","Welcome","SignUp_templateObject2","Heading","SignUp_templateObject3","Form","SignUp_templateObject4","fullName","username","email","signup","length","test","String","toLowerCase","SignUp_Root","components_Head","SignUp_Form","ForgotPassword_templateObject","ForgotPassword_templateObject2","Text","ForgotPassword_templateObject3","ForgotPassword","setEmail","_useState5","_useState6","setMessage","handleEmailChange","requestResetPassword","requestPasswordReset","ForgotPassword_Root","ForgotPassword_Container","map","key","ResetPassword_templateObject","ResetPassword_templateObject2","confirmPassword","resetPassword","err","url","URLSearchParams","search","ResetPassword_Root","ResetPassword_Container","query","Fragment","AuthLayout_templateObject","backgroundImage","AuthLayout_templateObject2","Pages","AuthLayout_templateObject3","AuthLayout","AuthLayout_Root","AuthLayout_Container","Auth_AuthHeader","react_router","exact","path","render","Auth_SignUp","component","Auth_ResetPassword","Avatar_templateObject","Image","img","Avatar_templateObject2","Avatar","image","Avatar_Root","Avatar_Image","src","SearchInput_templateObject","IconContainer","SearchInput_templateObject2","Input","SearchInput_templateObject3","hideIcon","backgroundColor","SearchInput","onFocus","inputRef","SearchInput_Root","ref","SearchResult_templateObject","StyledA","SearchResult_templateObject2","Item","SearchResult_templateObject3","Name","SearchResult_templateObject4","UserName","SearchResult_templateObject5","NoSearchResult","SearchResult_templateObject6","SearchResult","users","forMessage","SearchResult_Root","id","generatePath","Routes","userId","components_Avatar","useClickOutside","handler","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","StyledLoading","Search_templateObject","Search","others","objectWithoutProperties","client","useApolloClient","isOpenSearchResult","setIsOpenSearchResult","searchQuery","setSearchQuery","setUsers","_useState7","_useState8","setLoading","useRef","debounceSearchQuery","delay","debouncedValue","setDebouncedValue","useDebounce","_ref2","_yield$client$query","sent","searchUsers","handleInputChange","_ref3","_callee2","_context2","replace","Search_SearchInput","assign","Search_SearchResult","withApollo","removeItem","resetStore","HeaderUserDropDown_templateObject","CSS","HeaderUserDropDown_templateObject2","HeaderUserDropDown_templateObject3","HeaderUserDropDown_templateObject4","HeaderUserDropDown","userRef","HeaderUserDropDown_Root","HeaderUserDropDown_Item","App_SignOut","NotificationItem","Notification_templateObject","LeftSide","Notification_templateObject2","Notification_templateObject3","Action","Notification_templateObject4","PostImage","Notification_templateObject5","Notification_templateObject6","notification","close","React","mutate","refetchQueries","t0","updateNotificationSeen","newNotifications","follow","like","comment","author","Notification_Name","post","Notification_Image","HeaderNotificationDropDown_templateObject","Empty","HeaderNotificationDropDown_templateObject2","HeaderNotificationDropDown","notificationRef","dropdownData","closeDropDown","HeaderNotificationDropDown_Root","App_Notification","timeAgo","unixTimestamp","date","Date","parseInt","seconds","Math","floor","interval","HeaderMessageDropdown_templateObject","HeaderMessageDropdown_templateObject2","HeaderMessageDropdown_templateObject3","User","NavLink","HeaderMessageDropdown_templateObject4","Info","HeaderMessageDropdown_templateObject5","FullName","HeaderMessageDropdown_templateObject6","LastMessage","HeaderMessageDropdown_templateObject7","CreatedAt","HeaderMessageDropdown_templateObject8","HeaderMessageDropdown","messageRef","HeaderMessageDropdown_Root","HeaderMessageDropdown_Heading","HeaderMessageDropdown_Link","lastMessage","lastMessageCreatedAt","HeaderDropDowns","dropdownOpen","DropDowns","USER","Header_HeaderUserDropDown","NOTIFICATION","Header_HeaderNotificationDropDown","MESSAGE","Header_HeaderMessageDropdown","Header_templateObject","Wrapper","Header_templateObject2","Header_templateObject3","Hamburger","Header_templateObject4","Header_templateObject5","RightSide","Header_templateObject6","countCSS","Header_templateObject7","NotificationCount","span","Header_templateObject8","MessageCount","Header_templateObject9","toggleSideBar","setDropdownOpen","setDropdownData","closeOnClickOutside","handleIconClick","dropdownType","newConversations","Header_Root","Header_LeftSide","Header_Logo","Search_Search","Header_HeaderDropDowns","NotFound_templateObject","NotFound","NotFound_Root","Navigation_templateObject","List","ul","Navigation_templateObject2","ListItem","li","Navigation_templateObject3","Navigation_templateObject4","Navigation","Navigation_Link","activeClassName","Navigation_Name","SideBar_templateObject","HEADER_HEIGHT","isOpen","SideBar_templateObject2","SideBar_templateObject3","active","sideBarRef","isAuthUsersProfilePage","substring","SideBar_Root","SideBar_User","SideBar_FullName","App_Navigation","UserSuggestions_templateObject","UserSuggestions_templateObject2","UserSuggestions_templateObject3","UserSuggestions_templateObject4","UserSuggestions_templateObject5","UserSuggestions","matchPath","UserSuggestions_Root","suggestPeople","UserSuggestions_List","UserSuggestions_ListItem","UserSuggestions_FullName","UserSuggestions_UserName","CREATE_COMMENT","comment_templateObject","DELETE_COMMENT","comment_templateObject2","NotificationType","useNotifications","abrupt","console","_x2","create","postId","notificationType","notificationTypeId","authorId","remove","notificationId","toggle","hasDone","isNotified","notifications","find","n","options","delete","CreateComment_templateObject","focus","setComment","buttonEl","TextareaEl","createComment","_yield$createComment","onEnterPress","keyCode","click","authUserId","CreateComment_Form","onKeyDown","CREATE_FOLLOW","follow_templateObject","DELETE_FOLLOW","follow_templateObject2","Follow_templateObject","isFollowing","Follow","following","f","handleClickFollow","_yield$mutate","createFollow","followerId","skip","limit","Follow_Button","PostPopupInfo_templateObject","Author","PostPopupInfo_templateObject2","PostPopupInfo_templateObject3","PostPopupInfo","PostPopupInfo_Root","PostPopupInfo_UserName","components_Follow","DeleteButton","Comment_templateObject","Comment_templateObject2","Comment_templateObject3","CommentSection","Comment_templateObject4","Comment","postAuthor","handleDeleteComment","deleteComment","Comment_Root","Comment_UserName","PostPopupComments_templateObject","Comments","PostPopupComments_templateObject2","usedInModal","PostPopupComments","comments","PostPopupComments_Root","components_Comment","CREATE_LIKE","like_templateObject","DELETE_LIKE","like_templateObject2","StyledButton","Like_templateObject","Like","likes","withText","hasLiked","l","handleButtonClick","createLike","PostPopupOptions_templateObject","Icons","PostPopupOptions_templateObject2","Count","PostPopupOptions_templateObject3","PostPopupOptions","postLikes","PostPopupOptions_Root","components_Like","PostPopup_templateObject","PostPopup_templateObject2","Left","PostPopup_templateObject3","PostPopup_templateObject4","Right","PostPopup_templateObject5","CloseModal","PostPopup_templateObject6","Title","PostPopup_templateObject7","PostPopup","closeModal","components_NotFound","getPost","PostPopup_Root","PostPopup_Container","PostPopup_Image","PostPopup_PostPopupInfo","PostPopup_PostPopupComments","PostPopup_PostPopupOptions","components_CreateComment","Confirm_templateObject","ButtonContainer","Confirm_templateObject2","Confirm","onCancel","onOk","cancelText","okText","Confirm_Root","Modal_templateObject","Modal","open","onClose","otherProps","Modal_Root","components_Confirm","PostCardOption_templateObject","FollowItem","PostCardOption_templateObject2","PostCardOption_templateObject3","PostCardOption","closeOption","deletePost","PostCardOption_Root","PostCardOption_StyledButton","navigator","clipboard","writeText","process","PostCard_templateObject","TopRow","PostCard_templateObject2","PostCard_templateObject3","PostCard_templateObject4","PostCard_templateObject5","Poster","PostCard_templateObject6","BottomRow","PostCard_templateObject7","CountAndIcons","PostCard_templateObject8","PostCard_templateObject9","PostCard_templateObject10","PostCard_templateObject11","PostCard_templateObject12","CommentLine","PostCard_templateObject13","imagePublicId","createdAt","openModal","isCommentOpen","setIsCommentOpen","isOptionOpen","setIsOptionOpen","PostCard_Root","components_Modal","PostCard_PostCardOption","PostCard_Author","PostCard_Name","PostCard_CreatedAt","PostCard_Count","PostCard_StyledButton","PostCard_Icons","PostCard_Comments","InfiniteScroll","dataKey","fetchMore","count","handleScroll","useMemo","loadMore","windowHeight","scrollTop","offsetHeight","scrolled","updateQuery","fetchMoreResult","previousData","fetchMoreData","set","uniqBy","window","innerHeight","documentElement","propTypes","PropTypes","array","isRequired","string","number","func","object","Skeleton_templateObject","Skeleton","skeleton","i","Skeleton_Container","loopSkeleton","PostImageUpload_templateObject","Label","label","PostImageUpload_templateObject2","PostImageUpload","PostImageUpload_Input","accept","htmlFor","useGlobalMessage","dispatchAction","messageType","CreatePost_templateObject","CreatePost_templateObject2","CreatePost_templateObject3","ImagePreviewContainer","CreatePost_templateObject4","ImagePreview","CreatePost_templateObject5","Options","CreatePost_templateObject6","Buttons","CreatePost_templateObject7","CreatePost","setTitle","setImage","isFocused","setIsFocused","handleReset","handleOnFocus","handlePostImageUpload","file","files","MAX_POST_IMAGE_SIZE","handleTitleChange","createPost","isShareDisabled","CreatePost_Root","CreatePost_Wrapper","CreatePost_Textarea","Home_PostImageUpload","URL","createObjectURL","Home_templateObject","Home_templateObject2","Home","modalPostId","setModalPostId","pushState","components_CreatePost","notifyOnNetworkStatusChange","networkStatus","components_Skeleton","_data$getFollowedPost","getFollowedPosts","posts","components_InfiniteScroll","showNextLoading","react","PostPopup_PostPopup","PostCard_PostCard","Home_Empty","Home_StyledA","ProfileImageUpload_templateObject","ProfileImageUpload_templateObject2","ProfileImageUpload_templateObject3","authUser","ProfileImageUpload_templateObject4","handleImageChange","MAX_USER_PROFILE_IMAGE_SIZE","ProfileImageUpload_Input","ProfileImageUpload_Label","ProfileImageUpload_Overlay","ProfileImageUpload_Image","alt","ProfileCoverUpload_templateObject","defaultBackgroundImage","ProfileCoverUpload_templateObject2","ProfileCoverUpload_templateObject3","coverImagePublicId","coverImage","MAX_USER_COVER_IMAGE_SIZE","isCover","ProfileCoverUpload_Root","ProfileCoverUpload_Input","ProfileCoverUpload_Label","ProfileInfo_templateObject","ProfileImage","ProfileInfo_templateObject2","ProfileInfo_templateObject3","FollowAndMessage","ProfileInfo_templateObject4","ProfileInfo_templateObject5","Online","ProfileInfo_templateObject6","ProfileInfo_templateObject7","ProfileInfo_templateObject8","ProfileInfo","_useSubscription","useSubscription","isUserOnline","isOnline","ProfileInfo_Root","Profile_ProfileCoverUpload","Profile_ProfileImageUpload","ProfileInfo_FullName","ProfileInfo_Message","ProfileInfo_Info","ProfileInfo_List","followers","Empty_templateObject","Empty_Container","ProfilePosts","isPostPopupOpen","setIsPostPopupOpen","_data$getUserPosts","getUserPosts","components_Empty","Profile_templateObject","match","params","Profile_Root","getUser","Profile_ProfileInfo","Profile_ProfilePosts","ExploreCard_templateObject","ExploreCard_templateObject2","Photo","ExploreCard_templateObject3","ExploreCard","openPostPopup","countLikes","countComments","imageLoaded","setImageLoaded","onload","ExploreCard_Root","style","ExploreCard_Overlay","Explore_templateObject","PostsContainer","Explore_templateObject2","Explore","Explore_Root","_data$getPosts","getPosts","Explore_ExploreCard","PeopleCard_templateObject","ImageContainer","PeopleCard_templateObject2","PeopleCard_templateObject3","InitialLetters","PeopleCard_templateObject4","PeopleCard_templateObject5","PeopleCard_templateObject6","PeopleCard","setColor","randomColor","random","PeopleCard_Root","PeopleCard_Image","split","slice","join","charAt","PeopleCard_FullName","PeopleCard_UserName","People_templateObject","PeopleContainer","People_templateObject2","People","People_Root","_data$getUsers","getUsers","People_PeopleCard","Notifications_templateObject","Notifications_templateObject2","Notifications","Notifications_Root","_data$getUserNotifica","getUserNotifications","Notifications_List","MessagesUsers_templateObject","HeadingContainer","MessagesUsers_templateObject2","MessagesUsers_templateObject3","NewMessage","MessagesUsers_templateObject4","SearchContainer","MessagesUsers_templateObject5","UserContainer","MessagesUsers_templateObject6","MessagesUsers_templateObject7","seen","MessagesUsers_templateObject8","FullNameUnSeen","MessagesUsers_templateObject9","MessagesUsers_templateObject10","UnSeen","MessagesUsers_templateObject11","MessagesUsers_templateObject12","_useQuery","useQuery","subscribeToMore","subscriptionData","newConversation","oldConversations","getConversations","some","u","MessagesUsers_Root","MessagesUsers_Heading","unseen","lastMessageSender","MessagesUsers_User","MessagesUsers_Info","MessagesUsers_FullName","MessagesUsers_LastMessage","MessagesChatConversation_templateObject","Conversation","MessagesChatConversation_templateObject2","MessageDate","MessagesChatConversation_templateObject3","userMessage","MessageWrapper","MessagesChatConversation_templateObject4","MessagesChatConversation_templateObject5","MessagesChatConversation_templateObject6","StyledTextarea","MessagesChatConversation_templateObject7","SendButton","MessagesChatConversation_templateObject8","MessagesChatConversation","messages","chatUser","bottomRef","messageText","setMessageText","_useMutation","useMutation","createMessage","scrollIntoView","sendMessage","sender","receiver","isFirstMessage","MessagesChatConversation_Root","isAuthUserReceiver","MessagesChatConversation_Message","month","getMonth","day","getDay","year","getFullYear","time","toLocaleString","hour","minute","hour12","currentDate","MessagesChatConversation_Form","shiftKey","MessagesChatHeading_templateObject","MessagesChatHeading_templateObject2","To","MessagesChatHeading_templateObject3","MessagesChatHeading_templateObject4","MessagesChatHeading_templateObject5","MessagesChatHeading_templateObject6","MessagesChatHeading_templateObject7","MessagesChatHeading_Root","MessagesChatHeading_User","MessagesChatHeading_Info","MessagesChatHeading_FullName","MessagesChatHeading_Online","MessagesChatHeading_InputContainer","MessagesChat_templateObject","MessagesChat","_useQuery2","fetchPolicy","messagesLoading","updateMessageSeen","useCallback","newMessage","messageCreated","getMessages","MessagesChat_Root","Messages_MessagesChatHeading","Messages_MessagesChatConversation","Messages_templateObject","Messages","Messages_Root","Messages_MessagesUsers","Messages_MessagesChat","AppLayout_templateObject","_useStore2","isDesktop","isClient","getSize","innerWidth","undefined","windowSize","setWindowSize","handleResize","useWindowSize","isSideBarOpen","setIsSidebarOpen","Header_Header","AppLayout_Root","App_SideBar","Profile","Post","App_UserSuggestions","scrollTo","App","_updateQuery","oldNotifications","_subscriptionData$dat","index","getAuthUser","notificationCreatedOrDeleted","href","findIndex","splice","mergeConversations","react_router_dom","App_ScrollToTop","App_AppLayout","Auth_AuthLayout","components_Message","API_URL","apolloClient","apiUrl","websocketApiUrl","cache","InMemoryCache","errorLink","onError","networkError","log","authLink","uploadLink","createUploadLink","uri","authToken","wsLink","WebSocketLink","timeout","reconnect","connectionParams","subscriptionClient","maxConnectTimeGenerator","duration","max","terminatingLink","_getMainDefinition","getMainDefinition","kind","ApolloClient","link","from","createApolloClient","react_common_esm","styled_components_browser_esm","Provider","useReducer","App_App","getElementById"],"mappings":"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","file":"static/js/main.fafc9562.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.efdba046.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background.79b4d48d.jpg\";","import { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { onError } from 'apollo-link-error';\r\nimport { ApolloLink, Observable, split } from 'apollo-link';\r\nimport { createUploadLink } from 'apollo-upload-client';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\n\r\n/**\r\n * Creates a Apollo Link, that adds authentication token to request\r\n */\r\nconst createAuthLink = () => {\r\n  const request = operation => {\r\n    const token = localStorage.getItem('token');\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    });\r\n  };\r\n\r\n  return new ApolloLink(\r\n    (operation, forward) =>\r\n      new Observable(observer => {\r\n        let handle;\r\n        Promise.resolve(operation)\r\n          .then(oper => request(oper))\r\n          .then(() => {\r\n            handle = forward(operation).subscribe({\r\n              next: observer.next.bind(observer),\r\n              error: observer.error.bind(observer),\r\n              complete: observer.complete.bind(observer),\r\n            });\r\n          })\r\n          .catch(observer.error.bind(observer));\r\n\r\n        return () => {\r\n          if (handle) handle.unsubscribe();\r\n        };\r\n      })\r\n  );\r\n};\r\n\r\n/**\r\n * Helper functions that handles error cases\r\n */\r\nconst handleErrors = () => {\r\n  return onError(({ graphQLErrors, networkError }) => {\r\n    if (graphQLErrors) {\r\n      console.log('graphQLErrors', graphQLErrors);\r\n    }\r\n    if (networkError) {\r\n      console.log('networkError', networkError);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Creates a Apollo Client\r\n *\r\n * @param {string} apiUrl, GraphQL api url\r\n * @param {string} websocketApiUrl, GraphQL WebSocket api url\r\n */\r\nexport const createApolloClient = (apiUrl, websocketApiUrl) => {\r\n  const cache = new InMemoryCache();\r\n\r\n  const errorLink = handleErrors();\r\n  const authLink = createAuthLink();\r\n  const uploadLink = createUploadLink({ uri: apiUrl }); // Upload link also creates an HTTP link\r\n\r\n  // Create WebSocket link\r\n  const authToken = localStorage.getItem('token');\r\n  const wsLink = new WebSocketLink({\r\n    uri: websocketApiUrl,\r\n    options: {\r\n      timeout: 60000,\r\n      reconnect: true,\r\n      connectionParams: {\r\n        authorization: authToken,\r\n      },\r\n    },\r\n  });\r\n\r\n  // Temporary fix for early websocket closure resulting in websocket connections not being instantiated\r\n  // https://github.com/apollographql/subscriptions-transport-ws/issues/377\r\n  wsLink.subscriptionClient.maxConnectTimeGenerator.duration = () =>\r\n    wsLink.subscriptionClient.maxConnectTimeGenerator.max;\r\n\r\n  // Split links, so we can send data to each link\r\n  // depending on what kind of operation is being sent\r\n  const terminatingLink = split(\r\n    ({ query }) => {\r\n      const { kind, operation } = getMainDefinition(query);\r\n      return kind === 'OperationDefinition' && operation === 'subscription';\r\n    },\r\n    wsLink,\r\n    uploadLink\r\n  );\r\n\r\n  return new ApolloClient({\r\n    link: ApolloLink.from([errorLink, authLink, terminatingLink]),\r\n    cache,\r\n  });\r\n};\r\n","/**\r\n * Actions types\r\n */\r\nexport const SET_MESSAGE = 'SET_MESSAGE';\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\r\n\r\n/**\r\n * Initial State\r\n */\r\nexport const messageInitialState = {\r\n  content: {\r\n    type: '',\r\n    text: '',\r\n    autoClose: true,\r\n  },\r\n};\r\n\r\n/**\r\n * Message Reducer\r\n */\r\nexport const messageReducer = (state = messageInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        content: {\r\n          type: action.payload.type,\r\n          text: action.payload.text,\r\n          autoClose: action.payload.autoClose,\r\n        },\r\n      };\r\n    case CLEAR_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        ...messageInitialState,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/**\r\n * Actions types\r\n */\r\nexport const SET_AUTH_USER = 'SET_AUTH_USER';\r\nexport const CLEAR_AUTH_USER = 'CLEAR_AUTH_USER';\r\n\r\n/**\r\n * Initial State\r\n */\r\nexport const authInitialState = {\r\n  user: null,\r\n};\r\n\r\n/**\r\n * User Reducer\r\n */\r\nexport const authReducer = (state = authInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case CLEAR_AUTH_USER: {\r\n      return {\r\n        ...state,\r\n        ...authInitialState,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useContext, useReducer } from 'react';\r\nimport { messageReducer, messageInitialState } from './message';\r\nimport { authReducer, authInitialState } from './auth';\r\n\r\n/**\r\n * React context for store\r\n */\r\nconst StoreContext = createContext();\r\n\r\n/**\r\n * Combine initial states\r\n */\r\nconst store = {\r\n  message: messageInitialState,\r\n  auth: authInitialState,\r\n};\r\n\r\n/**\r\n * Combine reducers\r\n */\r\nconst reducers = (store, action) => ({\r\n  message: messageReducer(store.message, action),\r\n  auth: authReducer(store.auth, action),\r\n});\r\n\r\n/**\r\n * Store context provider\r\n */\r\nexport const StoreProvider = ({ children }) => (\r\n  <StoreContext.Provider value={useReducer(reducers, store)}>\r\n    {children}\r\n  </StoreContext.Provider>\r\n);\r\n\r\n/**\r\n * React hook for consuming store\r\n */\r\nexport const useStore = () => useContext(StoreContext);\r\n","/**\r\n * Theme for applying consistent styling to the app\r\n */\r\n\r\nexport default {\r\n  /**\r\n   * Font\r\n   */\r\n  font: {\r\n    family: \"'Open Sans', sans-serif\",\r\n    weight: {\r\n      light: '300',\r\n      normal: '400',\r\n      bold: '600',\r\n    },\r\n    size: {\r\n      tiny: '11px',\r\n      xxs: '13px',\r\n      xs: '14px',\r\n      sm: '16px',\r\n      md: '18px',\r\n      lg: '20px',\r\n      xl: '34px',\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Colors\r\n   */\r\n  colors: {\r\n    black: '#000000',\r\n    white: '#fff',\r\n    success: '#34a853',\r\n    body: '#fcfbfe',\r\n\r\n    primary: {\r\n      light: '#7986cb',\r\n      main: '#3f51b5',\r\n      dark: '#303f9f',\r\n      contrastText: '#fff',\r\n    },\r\n\r\n    secondary: {\r\n      light: '#ff4081',\r\n      main: '#f50057',\r\n      dark: '#c51162',\r\n      contrastText: '#fff',\r\n    },\r\n\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.54)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n\r\n    border: {\r\n      light: '#f5f5f5',\r\n      main: '#e0e0e0',\r\n      dark: '#bdbdbd',\r\n    },\r\n\r\n    error: {\r\n      light: '#e57373',\r\n      main: '#f44336',\r\n      dark: '#d32f2f',\r\n      contrastText: '#fff',\r\n    },\r\n\r\n    warning: '#FFB818',\r\n\r\n    info: '#4169E1',\r\n\r\n    grey: {\r\n      50: '#fafafa',\r\n      100: '#f5f5f5',\r\n      200: '#eeeeee',\r\n      300: '#e0e0e0',\r\n      400: '#bdbdbd',\r\n      500: '#9e9e9e',\r\n      600: '#757575',\r\n      700: '#616161',\r\n      800: '#424242',\r\n      900: '#212121',\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Shadows\r\n   */\r\n  shadows: {\r\n    sm: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\r\n    md: 'rgba(0, 0, 0, 0.3) 0px 1px 8px 0px',\r\n    lg: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n    xl: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)',\r\n  },\r\n\r\n  /**\r\n   * Breakpoints\r\n   */\r\n  screen: {\r\n    xs: '540px',\r\n    sm: '640px',\r\n    md: '1007px',\r\n    lg: '1100px',\r\n    xl: '1230px',\r\n  },\r\n\r\n  /**\r\n   * Spacing\r\n   */\r\n  spacing: {\r\n    none: 0,\r\n    xxs: '5px',\r\n    xs: '10px',\r\n    sm: '20px',\r\n    md: '30px',\r\n    lg: '40px',\r\n    xl: '60px',\r\n  },\r\n\r\n  /**\r\n   * Radius\r\n   */\r\n  radius: {\r\n    sm: '3px',\r\n    md: '6px',\r\n    lg: '12px',\r\n  },\r\n\r\n  /**\r\n   * zIndex\r\n   */\r\n  zIndex: {\r\n    xs: 10,\r\n    sm: 20,\r\n    md: 30,\r\n    lg: 40,\r\n    xl: 50,\r\n  },\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Global styles for the application\r\n */\r\nexport const GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Open+Sans:300,400,600');\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    font-family: open sans;\r\n    color: ${theme.colors.text.primary};\r\n    background-color: ${theme.colors.body};\r\n  }\r\n\r\n  #root {\r\n    position: relative;\r\n    min-height: 100vh;\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\n/**\r\n * Records to select from post comments\r\n */\r\nexport const postCommentsPayload = `\r\n  comments {\r\n    id\r\n    comment\r\n    author {\r\n      id\r\n      username\r\n      fullName\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Records to select from post author\r\n */\r\nexport const postAuthorPayload = `\r\n  author {\r\n    id\r\n    username\r\n    fullName\r\n    image\r\n    following {\r\n      id\r\n      user\r\n    }\r\n    followers {\r\n      id\r\n      user\r\n    }\r\n    notifications {\r\n      id\r\n      author {\r\n        id\r\n        username\r\n      }\r\n      follow {\r\n        id\r\n      }\r\n      like {\r\n        id\r\n      }\r\n      comment {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Records to select from post likes\r\n */\r\nexport const postLikesPayload = `\r\n  likes {\r\n    id\r\n    user\r\n    post\r\n  }\r\n`;\r\n\r\n/**\r\n * Creates a post\r\n */\r\nexport const CREATE_POST = gql`\r\n  mutation($input: CreatePostInput!) {\r\n    createPost(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets all posts from followed users\r\n */\r\nexport const GET_FOLLOWED_POSTS = gql`\r\n  query($userId: String!, $skip: Int, $limit: Int) {\r\n    getFollowedPosts(userId: $userId, skip: $skip, limit: $limit) {\r\n      count\r\n      posts {\r\n        id\r\n        title\r\n        image\r\n        imagePublicId\r\n        createdAt\r\n        ${postAuthorPayload}\r\n        ${postCommentsPayload}\r\n        ${postLikesPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets all available posts\r\n */\r\nexport const GET_POSTS = gql`\r\n  query($authUserId: ID!, $skip: Int, $limit: Int) {\r\n    getPosts(authUserId: $authUserId, skip: $skip, limit: $limit) {\r\n      count\r\n      posts {\r\n        id\r\n        title\r\n        image\r\n        ${postAuthorPayload}\r\n        ${postCommentsPayload}\r\n        ${postLikesPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets specific post by id\r\n */\r\nexport const GET_POST = gql`\r\n  query($id: ID!) {\r\n    getPost(id: $id) {\r\n      id\r\n      title\r\n      image\r\n      createdAt\r\n      ${postAuthorPayload}\r\n      ${postCommentsPayload}\r\n      ${postLikesPayload}\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a post\r\n */\r\nexport const DELETE_POST = gql`\r\n  mutation($input: DeletePostInput!) {\r\n    deletePost(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\nimport {\r\n  postCommentsPayload,\r\n  postAuthorPayload,\r\n  postLikesPayload,\r\n} from './post';\r\n\r\n/**\r\n * Records to select from user\r\n */\r\nconst userPayload = `\r\n  id\r\n  username\r\n  email\r\n  fullName\r\n  image\r\n  imagePublicId\r\n  coverImage\r\n  coverImagePublicId\r\n  createdAt\r\n`;\r\n\r\n/**\r\n * Gets specific user by username\r\n */\r\nexport const GET_USER = gql`\r\n  query($username: String, $id: ID) {\r\n    getUser(username: $username, id: $id) {\r\n      ${userPayload}\r\n      isOnline\r\n      posts {\r\n        id\r\n      }\r\n      following {\r\n        id\r\n      }\r\n      followers {\r\n        id\r\n      }\r\n      notifications {\r\n        id\r\n        author {\r\n          id\r\n          username\r\n        }\r\n        follow {\r\n          id\r\n        }\r\n        like {\r\n          id\r\n        }\r\n        comment {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets user posts\r\n */\r\nexport const GET_USER_POSTS = gql`\r\n  query($username: String!, $skip: Int, $limit: Int) {\r\n    getUserPosts(username: $username, skip: $skip, limit: $limit) {\r\n      count\r\n      posts {\r\n        id\r\n        title\r\n        image\r\n        imagePublicId\r\n        createdAt\r\n        ${postAuthorPayload}\r\n        ${postCommentsPayload}\r\n        ${postLikesPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets authenticated user\r\n */\r\nexport const GET_AUTH_USER = gql`\r\n  query {\r\n    getAuthUser {\r\n      ${userPayload}\r\n      newNotifications {\r\n        id\r\n        createdAt\r\n        author {\r\n          id\r\n          fullName\r\n          username\r\n          image\r\n        }\r\n        follow {\r\n          id\r\n        }\r\n        comment {\r\n          id\r\n          post {\r\n            id\r\n            image\r\n          }\r\n        }\r\n        like {\r\n          id\r\n          post {\r\n            id\r\n            image\r\n          }\r\n        }\r\n      }\r\n      newConversations {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        lastMessage\r\n        lastMessageCreatedAt\r\n      }\r\n      likes {\r\n        id\r\n        user\r\n        post\r\n      }\r\n      posts {\r\n        id\r\n      }\r\n      following {\r\n        id\r\n        user\r\n      }\r\n      followers {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets all available users\r\n */\r\nexport const GET_USERS = gql`\r\n  query($userId: String!, $skip: Int, $limit: Int) {\r\n    getUsers(userId: $userId, skip: $skip, limit: $limit) {\r\n      count\r\n      users {\r\n        id\r\n        fullName\r\n        username\r\n        image\r\n        following {\r\n          id\r\n          user\r\n        }\r\n        followers {\r\n          id\r\n        }\r\n        notifications {\r\n          id\r\n          author {\r\n            id\r\n            username\r\n          }\r\n          follow {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Searches users by username or fullName\r\n */\r\nexport const SEARCH_USERS = gql`\r\n  query($searchQuery: String!) {\r\n    searchUsers(searchQuery: $searchQuery) {\r\n      id\r\n      fullName\r\n      username\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Uploads user photo\r\n */\r\nexport const UPLOAD_PHOTO = gql`\r\n  mutation($input: UploadUserPhotoInput!) {\r\n    uploadUserPhoto(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Sign up user\r\n */\r\nexport const SIGN_UP = gql`\r\n  mutation($input: SignUpInput!) {\r\n    signup(input: $input) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Sign in user\r\n */\r\nexport const SIGN_IN = gql`\r\n  mutation($input: SignInInput!) {\r\n    signin(input: $input) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Request reset password\r\n */\r\nexport const REQUEST_PASSWORD_RESET = gql`\r\n  mutation($input: RequestPasswordResetInput!) {\r\n    requestPasswordReset(input: $input) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Verify reset password token\r\n */\r\nexport const VERIFY_RESET_PASSWORD_TOKEN = gql`\r\n  query($email: String!, $token: String!) {\r\n    verifyResetPasswordToken(email: $email, token: $token) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Reset password\r\n */\r\nexport const RESET_PASSWORD = gql`\r\n  mutation($input: ResetPasswordInput!) {\r\n    resetPassword(input: $input) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * People suggestions for auth user\r\n */\r\nexport const USER_SUGGESTIONS = gql`\r\n  query($userId: String!) {\r\n    suggestPeople(userId: $userId) {\r\n      id\r\n      fullName\r\n      username\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Get users with whom authUser had a conversation\r\n */\r\nexport const GET_CONVERSATIONS = gql`\r\n  query($authUserId: ID!) {\r\n    getConversations(authUserId: $authUserId) {\r\n      id\r\n      username\r\n      fullName\r\n      image\r\n      isOnline\r\n      seen\r\n      lastMessage\r\n      lastMessageSender\r\n      lastMessageCreatedAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Checks if user is online in real time\r\n */\r\nexport const IS_USER_ONLINE_SUBSCRIPTION = gql`\r\n  subscription($authUserId: ID!, $userId: ID!) {\r\n    isUserOnline(authUserId: $authUserId, userId: $userId) {\r\n      userId\r\n      isOnline\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\n/**\r\n * Gets user's specific conversation\r\n */\r\nexport const GET_MESSAGES = gql`\r\n  query($authUserId: ID!, $userId: ID!) {\r\n    getMessages(authUserId: $authUserId, userId: $userId) {\r\n      id\r\n      receiver {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      sender {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      message\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets user's specific conversation in real time\r\n */\r\nexport const GET_MESSAGES_SUBSCRIPTION = gql`\r\n  subscription($authUserId: ID!, $userId: ID!) {\r\n    messageCreated(authUserId: $authUserId, userId: $userId) {\r\n      id\r\n      receiver {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      sender {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      message\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Creates a message\r\n */\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation($input: CreateMessageInput!) {\r\n    createMessage(input: $input) {\r\n      id\r\n      isFirstMessage\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Get user's new conversation in real time\r\n */\r\nexport const GET_NEW_CONVERSATIONS_SUBSCRIPTION = gql`\r\n  subscription {\r\n    newConversation {\r\n      id\r\n      username\r\n      fullName\r\n      image\r\n      isOnline\r\n      seen\r\n      lastMessage\r\n      lastMessageSender\r\n      lastMessageCreatedAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Updates message seen property\r\n */\r\nexport const UPDATE_MESSAGE_SEEN = gql`\r\n  mutation($input: UpdateMessageSeenInput!) {\r\n    updateMessageSeen(input: $input)\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\n/**\r\n * Records to select from notifications\r\n */\r\nconst notificationPayload = `\r\n  id\r\n  createdAt\r\n  author {\r\n    id\r\n    fullName\r\n    username\r\n    image\r\n  }\r\n  follow {\r\n    id\r\n  }\r\n  comment {\r\n    id\r\n    post {\r\n      id\r\n      image\r\n    }\r\n  }\r\n  like {\r\n    id\r\n    post {\r\n      id\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Creates a notification for user\r\n */\r\nexport const CREATE_NOTIFICATION = gql`\r\n  mutation($input: CreateNotificationInput!) {\r\n    createNotification(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a notification\r\n */\r\nexport const DELETE_NOTIFICATION = gql`\r\n  mutation($input: DeleteNotificationInput!) {\r\n    deleteNotification(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets notifications for user\r\n */\r\nexport const GET_USER_NOTIFICATION = gql`\r\n  query($userId: ID!, $skip: Int, $limit: Int) {\r\n    getUserNotifications(userId: $userId, skip: $skip, limit: $limit) {\r\n      count\r\n      notifications {\r\n        ${notificationPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Updates notification seen property\r\n */\r\nexport const UPDATE_NOTIFICATION_SEEN = gql`\r\n  mutation($input: UpdateNotificationSeenInput!) {\r\n    updateNotificationSeen(input: $input)\r\n  }\r\n`;\r\n\r\n/**\r\n * Get user's notifications in real time\r\n */\r\nexport const NOTIFICATION_CREATED_OR_DELETED = gql`\r\n  subscription {\r\n    notificationCreatedOrDeleted {\r\n      operation\r\n      notification {\r\n        ${notificationPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * User icon, that uses theme color options\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const UserIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '24';\r\n  const DEFAULT_COLOR = theme.colors.grey[600];\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width || DEFAULT_WIDTH}\r\n      viewBox=\"0 0 53 53\"\r\n    >\r\n      <path\r\n        d=\"M18.613 41.552l-7.907 4.313a7.106 7.106 0 0 0-1.269.903A26.377 26.377 0 0 0 26.5 53c6.454 0 12.367-2.31 16.964-6.144a7.015 7.015 0 0 0-1.394-.934l-8.467-4.233a3.229 3.229 0 0 1-1.785-2.888v-3.322c.238-.271.51-.619.801-1.03a19.482 19.482 0 0 0 2.632-5.304c1.086-.335 1.886-1.338 1.886-2.53v-3.546c0-.78-.347-1.477-.886-1.965v-5.126s1.053-7.977-9.75-7.977-9.75 7.977-9.75 7.977v5.126a2.644 2.644 0 0 0-.886 1.965v3.546c0 .934.491 1.756 1.226 2.231.886 3.857 3.206 6.633 3.206 6.633v3.24a3.232 3.232 0 0 1-1.684 2.833z\"\r\n        fill=\"#e7eced\"\r\n      />\r\n      <path\r\n        d=\"M26.953.004C12.32-.246.254 11.414.004 26.047-.138 34.344 3.56 41.801 9.448 46.76a7.041 7.041 0 0 1 1.257-.894l7.907-4.313a3.23 3.23 0 0 0 1.683-2.835v-3.24s-2.321-2.776-3.206-6.633a2.66 2.66 0 0 1-1.226-2.231v-3.546c0-.78.347-1.477.886-1.965v-5.126S15.696 8 26.499 8s9.75 7.977 9.75 7.977v5.126c.54.488.886 1.185.886 1.965v3.546c0 1.192-.8 2.195-1.886 2.53a19.482 19.482 0 0 1-2.632 5.304c-.291.411-.563.759-.801 1.03V38.8c0 1.223.691 2.342 1.785 2.888l8.467 4.233a7.05 7.05 0 0 1 1.39.932c5.71-4.762 9.399-11.882 9.536-19.9C53.246 12.32 41.587.254 26.953.004z\"\r\n        fill={theme.colors[color] || DEFAULT_COLOR}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Close (X) icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const CloseIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '12';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 47.971 47.971\"\r\n    >\r\n      <path d=\"M28.228 23.986L47.092 5.122a2.998 2.998 0 0 0 0-4.242 2.998 2.998 0 0 0-4.242 0L23.986 19.744 5.121.88a2.998 2.998 0 0 0-4.242 0 2.998 2.998 0 0 0 0 4.242l18.865 18.864L.879 42.85a2.998 2.998 0 1 0 4.242 4.241l18.865-18.864L42.85 47.091c.586.586 1.354.879 2.121.879s1.535-.293 2.121-.879a2.998 2.998 0 0 0 0-4.242L28.228 23.986z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Upload image icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const UploadImageIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '20';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 100 100\"\r\n      width={width || DEFAULT_WIDTH}\r\n    >\r\n      <path\r\n        d=\"M50 40c-8.285 0-15 6.718-15 15 0 8.285 6.715 15 15 15 8.283 0 15-6.715 15-15 0-8.282-6.717-15-15-15zm40-15H78c-1.65 0-3.428-1.28-3.949-2.846l-3.102-9.309C70.426 11.28 68.65 10 67 10H33c-1.65 0-3.428 1.28-3.949 2.846l-3.102 9.309C25.426 23.72 23.65 25 22 25H10C4.5 25 0 29.5 0 35v45c0 5.5 4.5 10 10 10h80c5.5 0 10-4.5 10-10V35c0-5.5-4.5-10-10-10zM50 80c-13.807 0-25-11.193-25-25 0-13.806 11.193-25 25-25 13.805 0 25 11.194 25 25 0 13.807-11.195 25-25 25zm36.5-38.007a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7z\"\r\n        fill={theme.colors[color] || DEFAULT_COLOR}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\nimport { get } from 'lodash';\r\n\r\n/**\r\n * Post like icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const LikeIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '18';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={get(theme.colors, color) || DEFAULT_COLOR}\r\n      viewBox=\"0 0 511.999 511.999\"\r\n    >\r\n      <path d=\"M83.578 167.256H16.716C7.524 167.256 0 174.742 0 183.971v300.881c0 9.225 7.491 16.713 16.716 16.713h66.862c9.225 0 16.716-7.489 16.716-16.713V183.971c0-9.229-7.525-16.715-16.716-16.715zM470.266 167.256c-2.692-.456-128.739 0-128.739 0l17.606-48.032c12.148-33.174 4.283-83.827-29.424-101.835-10.975-5.864-26.309-8.809-38.672-5.697-7.09 1.784-13.321 6.478-17.035 12.767-4.271 7.233-3.83 15.676-5.351 23.696-3.857 20.342-13.469 39.683-28.354 54.2-25.952 25.311-106.571 98.331-106.571 98.331v267.45h278.593c37.592.022 62.228-41.958 43.687-74.749 22.101-14.155 29.66-43.97 16.716-66.862 22.102-14.155 29.66-43.97 16.716-66.862 38.134-24.423 25.385-84.871-19.172-92.407z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Post comment icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const PostCommentIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '18';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 58 58\"\r\n      width={width || DEFAULT_WIDTH}\r\n    >\r\n      <path\r\n        d=\"M29 1.5c-16.016 0-29 11.641-29 26 0 5.292 1.768 10.211 4.796 14.318C4.398 46.563 3.254 53.246 0 56.5c0 0 9.943-1.395 16.677-5.462l.022.009c2.764-1.801 5.532-3.656 6.105-4.126.3-.421.879-.548 1.33-.277.296.178.483.503.489.848.01.622-.005.784-5.585 4.421A31.914 31.914 0 0 0 29 53.5c16.016 0 29-11.641 29-26s-12.984-26-29-26z\"\r\n        fill={theme.colors[color] || DEFAULT_COLOR}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Explore page icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const ExploreIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '28';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 487.601 487.601\"\r\n    >\r\n      <path d=\"M379 229.65c-25.6 0-46.3 20.8-46.3 46.3 0 6.1 5 11.1 11.1 11.1s11.1-5 11.1-11.1c0-13.3 10.9-24.2 24.2-24.2 6.1 0 11.1-5 11.1-11.1-.1-6.1-5.1-11-11.2-11z\" />\r\n      <path d=\"M454.5 197.75c-2.7-2.6-5.6-5.1-8.6-7.5l-41-34.8c-15.8-11.2-34.6-18.3-55-19.7l2.2 2.2-24.9-25h-.2c-6.9-6.3-16.2-10.2-26.3-10.2-17.4 0-32.1 11.3-37.1 27-5-3.2-10.8-5.1-17.1-5.5-1-.1-2.1-.1-3.1-.1-7.1 0-13.7 2.1-19.3 5.6-5.1-15.6-19.8-26.9-37.1-26.9-10.1 0-19.3 3.8-26.3 10.2h-.2l-24.9 25 2.2-2.2c-20.4 1.4-39.3 8.6-55 19.7l-41 34.8c-3 2.3-5.9 4.8-8.6 7.5-20.5 19.8-33.2 47.5-33.2 78.2 0 60 48.8 108.8 108.8 108.8 55.4 0 101.3-41.7 107.9-95.4 8 4.6 17.3 7.2 27.1 7.2 9.9 0 19.1-2.6 27.1-7.2 6.7 53.6 52.5 95.3 107.9 95.3 60 0 108.8-48.8 108.8-108.8.1-30.7-12.6-58.4-33.1-78.2zm-345.7 152.5c-41 0-74.2-33.2-74.2-74.2s33.2-74.2 74.2-74.2 74.2 33.2 74.2 74.2c.1 40.9-33.2 74.2-74.2 74.2zm135.1-84.4c-13.3 0-24.1-10.8-24.1-24.1s10.8-24.1 24.1-24.1 24.1 10.8 24.1 24.1-10.8 24.1-24.1 24.1zm135.1 84.4c-41 0-74.2-33.2-74.2-74.2s33.2-74.2 74.2-74.2 74.2 33.2 74.2 74.2c0 40.9-33.2 74.2-74.2 74.2z\" />\r\n      <path d=\"M108.8 229.65c-25.6 0-46.3 20.8-46.3 46.3 0 6.1 5 11.1 11.1 11.1s11.1-5 11.1-11.1c0-13.3 10.9-24.2 24.2-24.2 6.1 0 11.1-5 11.1-11.1-.1-6.1-5.1-11-11.2-11z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Notifications icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const NotificationIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '23';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 611.999 611.999\"\r\n    >\r\n      <path d=\"M570.107 500.254c-65.037-29.371-67.511-155.441-67.559-158.622v-84.578c0-81.402-49.742-151.399-120.427-181.203C381.969 34 347.883 0 306.001 0c-41.883 0-75.968 34.002-76.121 75.849-70.682 29.804-120.425 99.801-120.425 181.203v84.578c-.046 3.181-2.522 129.251-67.561 158.622a17.257 17.257 0 0 0 7.103 32.986h164.88c3.38 18.594 12.172 35.892 25.619 49.903 17.86 18.608 41.479 28.856 66.502 28.856 25.025 0 48.644-10.248 66.502-28.856 13.449-14.012 22.241-31.311 25.619-49.903h164.88a17.26 17.26 0 0 0 16.872-13.626 17.25 17.25 0 0 0-9.764-19.358zm-85.673-60.395c6.837 20.728 16.518 41.544 30.246 58.866H97.32c13.726-17.32 23.407-38.135 30.244-58.866h356.87zM306.001 34.515c18.945 0 34.963 12.73 39.975 30.082-12.912-2.678-26.282-4.09-39.975-4.09s-27.063 1.411-39.975 4.09c5.013-17.351 21.031-30.082 39.975-30.082zM143.97 341.736v-84.685c0-89.343 72.686-162.029 162.031-162.029s162.031 72.686 162.031 162.029v84.826c.023 2.596.427 29.879 7.303 63.465H136.663c6.88-33.618 7.286-60.949 7.307-63.606zm162.031 235.749c-26.341 0-49.33-18.992-56.709-44.246h113.416c-7.379 25.254-30.364 44.246-56.707 44.246z\" />\r\n      <path d=\"M306.001 119.235c-74.25 0-134.657 60.405-134.657 134.654 0 9.531 7.727 17.258 17.258 17.258 9.531 0 17.258-7.727 17.258-17.258 0-55.217 44.923-100.139 100.142-100.139 9.531 0 17.258-7.727 17.258-17.258-.001-9.532-7.728-17.257-17.259-17.257z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Menu icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const MenuIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '18';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path d=\"M491.318 235.318H20.682C9.26 235.318 0 244.577 0 256s9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.259 20.682-20.682 0-11.422-9.259-20.682-20.682-20.682zM491.318 78.439H20.682C9.26 78.439 0 87.699 0 99.121c0 11.422 9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.26 20.682-20.682 0-11.422-9.259-20.682-20.682-20.682zM491.318 392.197H20.682C9.26 392.197 0 401.456 0 412.879s9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.259 20.682-20.682s-9.259-20.682-20.682-20.682z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Home icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const HomeIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '18';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path d=\"M506.555 208.064L263.859 30.367a13.3 13.3 0 0 0-15.716 0L5.445 208.064c-5.928 4.341-7.216 12.665-2.875 18.593s12.666 7.214 18.593 2.875L256 57.588l234.837 171.943a13.236 13.236 0 0 0 7.848 2.57c4.096 0 8.138-1.885 10.744-5.445 4.342-5.927 3.054-14.251-2.874-18.592z\" />\r\n      <path d=\"M442.246 232.543c-7.346 0-13.303 5.956-13.303 13.303v211.749H322.521V342.009c0-36.68-29.842-66.52-66.52-66.52s-66.52 29.842-66.52 66.52v115.587H83.058V245.847c0-7.347-5.957-13.303-13.303-13.303s-13.303 5.956-13.303 13.303V470.9c0 7.347 5.957 13.303 13.303 13.303h133.029c6.996 0 12.721-5.405 13.251-12.267.032-.311.052-.651.052-1.036V342.01c0-22.009 17.905-39.914 39.914-39.914s39.914 17.906 39.914 39.914V470.9c0 .383.02.717.052 1.024.524 6.867 6.251 12.279 13.251 12.279h133.029c7.347 0 13.303-5.956 13.303-13.303V245.847c-.001-7.348-5.957-13.304-13.304-13.304z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * People icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const PeopleIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '20';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 505.4 505.4\"\r\n    >\r\n      <path d=\"M437.1 233.45c14.8-10.4 24.6-27.7 24.6-47.2 0-31.9-25.8-57.7-57.7-57.7-31.9 0-57.7 25.8-57.7 57.7 0 19.5 9.7 36.8 24.6 47.2-12.7 4.4-24.3 11.2-34.1 20-13.5-11.5-29.4-20.3-46.8-25.5 21.1-12.8 35.3-36.1 35.3-62.6 0-40.4-32.7-73.1-73.1-73.1-40.4 0-73.1 32.8-73.1 73.1 0 26.5 14.1 49.8 35.3 62.6-17.2 5.2-32.9 13.9-46.3 25.2-9.8-8.6-21.2-15.3-33.7-19.6 14.8-10.4 24.6-27.7 24.6-47.2 0-31.9-25.8-57.7-57.7-57.7s-57.7 25.8-57.7 57.7c0 19.5 9.7 36.8 24.6 47.2-39.7 13.7-68.2 51.4-68.2 95.7v6.6c0 .2.2.4.4.4h122.3c-.7 5.5-1.1 11.2-1.1 16.9v6.8c0 29.4 23.8 53.2 53.2 53.2h155c29.4 0 53.2-23.8 53.2-53.2v-6.8c0-5.7-.4-11.4-1.1-16.9H505c.2 0 .4-.2.4-.4v-6.6c-.2-44.4-28.6-82.1-68.3-95.8zm-74.8-47.3c0-23 18.7-41.7 41.7-41.7s41.7 18.7 41.7 41.7c0 22.7-18.3 41.2-40.9 41.7h-1.6c-22.7-.4-40.9-18.9-40.9-41.7zm-167.4-20.8c0-31.5 25.6-57.1 57.1-57.1s57.1 25.6 57.1 57.1c0 30.4-23.9 55.3-53.8 57h-6.6c-29.9-1.7-53.8-26.6-53.8-57zm-135.6 20.8c0-23 18.7-41.7 41.7-41.7s41.7 18.7 41.7 41.7c0 22.7-18.3 41.2-40.9 41.7h-1.6c-22.6-.4-40.9-18.9-40.9-41.7zm66.2 134H16.2c4.5-42.6 40.5-76 84.2-76.3h1.2c20.8.1 39.8 7.8 54.5 20.3-14.4 15.6-25.1 34.8-30.6 56zm241.3 39.8c0 20.5-16.7 37.2-37.2 37.2h-155c-20.5 0-37.2-16.7-37.2-37.2v-6.8c0-62.1 49.6-112.9 111.3-114.7 1.1.1 2.3.1 3.4.1s2.3 0 3.4-.1c61.7 1.8 111.3 52.6 111.3 114.7v6.8zm11.9-39.8c-5.5-21.1-16-40-30.3-55.6 14.8-12.8 34-20.5 55-20.7h1.2c43.7.3 79.7 33.7 84.2 76.3H378.7z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Search icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const SearchIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '16';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 56.966 56.966\"\r\n    >\r\n      <path d=\"M55.146 51.887L41.588 37.786A22.926 22.926 0 0 0 46.984 23c0-12.682-10.318-23-23-23s-23 10.318-23 23 10.318 23 23 23c4.761 0 9.298-1.436 13.177-4.162l13.661 14.208c.571.593 1.339.92 2.162.92.779 0 1.518-.297 2.079-.837a3.004 3.004 0 0 0 .083-4.242zM23.984 6c9.374 0 17 7.626 17 17s-7.626 17-17 17-17-7.626-17-17 7.626-17 17-17z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Dots icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const DotsIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '17';\r\n  const DEFAULT_COLOR = theme.colors.text.primary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 0 612 612\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle cx=\"69.545\" cy=\"306\" r=\"69.545\" />\r\n      <circle cx=\"306\" cy=\"306\" r=\"69.545\" />\r\n      <circle cx=\"542.455\" cy=\"306\" r=\"69.545\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Post like icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const InfoIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '22';\r\n  const DEFAULT_COLOR = theme.colors.white;\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 0 330 330\"\r\n    >\r\n      <path d=\"M165 0C74.019 0 0 74.02 0 165.001 0 255.982 74.019 330 165 330s165-74.018 165-164.999S255.981 0 165 0zm0 300c-74.44 0-135-60.56-135-134.999S90.56 30 165 30s135 60.562 135 135.001C300 239.44 239.439 300 165 300z\" />\r\n      <path d=\"M164.998 70c-11.026 0-19.996 8.976-19.996 20.009 0 11.023 8.97 19.991 19.996 19.991 11.026 0 19.996-8.968 19.996-19.991 0-11.033-8.97-20.009-19.996-20.009zM165 140c-8.284 0-15 6.716-15 15v90c0 8.284 6.716 15 15 15 8.284 0 15-6.716 15-15v-90c0-8.284-6.716-15-15-15z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Post like icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const WarningIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '22';\r\n  const DEFAULT_COLOR = theme.colors.white;\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path d=\"M256 0C114.497 0 0 114.507 0 256c0 141.503 114.507 256 256 256 141.503 0 256-114.507 256-256C512 114.497 397.493 0 256 0zm0 472c-119.393 0-216-96.615-216-216 0-119.393 96.615-216 216-216 119.393 0 216 96.615 216 216 0 119.393-96.615 216-216 216z\" />\r\n      <path d=\"M256 128.877c-11.046 0-20 8.954-20 20V277.67c0 11.046 8.954 20 20 20s20-8.954 20-20V148.877c0-11.046-8.954-20-20-20z\" />\r\n      <circle cx=\"256\" cy=\"349.16\" r=\"27\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Post like icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const ErrorIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '22';\r\n  const DEFAULT_COLOR = theme.colors.white;\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 486.463 486.463\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n    >\r\n      <path d=\"M243.225 333.382c-13.6 0-25 11.4-25 25s11.4 25 25 25c13.1 0 25-11.4 24.4-24.4.6-14.3-10.7-25.6-24.4-25.6z\" />\r\n      <path d=\"M474.625 421.982c15.7-27.1 15.8-59.4.2-86.4l-156.6-271.2c-15.5-27.3-43.5-43.5-74.9-43.5s-59.4 16.3-74.9 43.4l-156.8 271.5c-15.6 27.3-15.5 59.8.3 86.9 15.6 26.8 43.5 42.9 74.7 42.9h312.8c31.3 0 59.4-16.3 75.2-43.6zm-34-19.6c-8.7 15-24.1 23.9-41.3 23.9h-312.8c-17 0-32.3-8.7-40.8-23.4-8.6-14.9-8.7-32.7-.1-47.7l156.8-271.4c8.5-14.9 23.7-23.7 40.9-23.7 17.1 0 32.4 8.9 40.9 23.8l156.7 271.4c8.4 14.6 8.3 32.2-.3 47.1z\" />\r\n      <path d=\"M237.025 157.882c-11.9 3.4-19.3 14.2-19.3 27.3.6 7.9 1.1 15.9 1.7 23.8 1.7 30.1 3.4 59.6 5.1 89.7.6 10.2 8.5 17.6 18.7 17.6s18.2-7.9 18.7-18.2c0-6.2 0-11.9.6-18.2 1.1-19.3 2.3-38.6 3.4-57.9.6-12.5 1.7-25 2.3-37.5 0-4.5-.6-8.5-2.3-12.5-5.1-11.2-17-16.9-28.9-14.1z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Post like icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const SuccessIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '22';\r\n  const DEFAULT_COLOR = theme.colors.white;\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path d=\"M468.907 214.604c-11.423 0-20.682 9.26-20.682 20.682v20.831c-.031 54.338-21.221 105.412-59.666 143.812-38.417 38.372-89.467 59.5-143.761 59.5h-.12C132.506 459.365 41.3 368.056 41.364 255.883c.031-54.337 21.221-105.411 59.667-143.813 38.417-38.372 89.468-59.5 143.761-59.5h.12c28.672.016 56.49 5.942 82.68 17.611 10.436 4.65 22.659-.041 27.309-10.474 4.648-10.433-.04-22.659-10.474-27.309-31.516-14.043-64.989-21.173-99.492-21.192h-.144c-65.329 0-126.767 25.428-172.993 71.6C25.536 129.014.038 190.473 0 255.861c-.037 65.386 25.389 126.874 71.599 173.136 46.21 46.262 107.668 71.76 173.055 71.798h.144c65.329 0 126.767-25.427 172.993-71.6 46.262-46.209 71.76-107.668 71.798-173.066v-20.842c0-11.423-9.259-20.683-20.682-20.683z\" />\r\n      <path d=\"M505.942 39.803c-8.077-8.076-21.172-8.076-29.249 0L244.794 271.701l-52.609-52.609c-8.076-8.077-21.172-8.077-29.248 0-8.077 8.077-8.077 21.172 0 29.249l67.234 67.234a20.616 20.616 0 0 0 14.625 6.058 20.618 20.618 0 0 0 14.625-6.058L505.942 69.052c8.077-8.077 8.077-21.172 0-29.249z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\n/**\r\n * Delete (trash) icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const EmptyIcon = () => {\r\n  return (\r\n    <svg\r\n      width=\"100\"\r\n      height=\"100\"\r\n      viewBox=\"0 0 184 152\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g fill=\"none\" fillRule=\"evenodd\">\r\n        <g transform=\"translate(24 31.67)\">\r\n          <ellipse\r\n            fillOpacity=\".8\"\r\n            fill=\"#f5f5f7\"\r\n            cx=\"67.797\"\r\n            cy=\"106.89\"\r\n            rx=\"67.797\"\r\n            ry=\"12.668\"\r\n          />\r\n          <path\r\n            d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\r\n            fill=\"#aeb8c2\"\r\n          />\r\n          <path\r\n            d=\"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z\"\r\n            fill=\"url(&quot;#linearGradient-1&quot;)\"\r\n            transform=\"translate(13.56)\"\r\n          />\r\n          <path\r\n            d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\r\n            fill=\"#f5f5f7\"\r\n          />\r\n          <path\r\n            d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zm.262 39.814h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zm0 11.763h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zm78.873 43.502c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569a7.33 7.33 0 0 1-.221 1.789z\"\r\n            fill=\"#dce0e6\"\r\n          />\r\n        </g>\r\n        <path\r\n          d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\r\n          fill=\"#dce0e6\"\r\n        />\r\n        <g transform=\"translate(149.65 15.383)\" fill=\"#fff\">\r\n          <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\r\n          <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const NotFoundIcon = () => {\r\n  return (\r\n    <svg\r\n      width=\"100\"\r\n      height=\"130\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path\r\n        d=\"M86.071 441.452a18.896 18.896 0 0 1 4.213 15.326l-6.891 41.43a8.091 8.091 0 0 1-9.304 6.659c-4.404-.736-7.379-4.91-6.645-9.323l6.891-41.431a2.673 2.673 0 0 0-.601-2.189 2.66 2.66 0 0 0-2.057-.955H32.452a2.66 2.66 0 0 0-2.057.955 2.675 2.675 0 0 0-.603 2.189l6.891 41.431c.734 4.414-2.241 8.587-6.645 9.323-4.401.734-8.569-2.246-9.303-6.659l-6.891-41.431a18.9 18.9 0 0 1 4.215-15.327 18.814 18.814 0 0 1 14.393-6.684H45.81v-83.172c0-4.474 3.62-8.101 8.084-8.101h118.568c4.465 0 8.084 3.627 8.084 8.101s-3.62 8.101-8.084 8.101H61.979v75.071h9.699a18.811 18.811 0 0 1 14.393 6.686zm245.382 39.221H180.547c-4.465 0-8.084 3.627-8.084 8.101 0 4.474 3.62 8.101 8.084 8.101h150.905c4.465 0 8.084-3.627 8.084-8.101.001-4.474-3.619-8.101-8.083-8.101z\"\r\n        fill=\"#84a7b7\"\r\n      />\r\n      <path\r\n        d=\"M378.65 300.935l-28.255 113.257c-4.799 19.234-22.044 32.727-41.829 32.727H203.431c-19.785 0-37.03-13.493-41.829-32.727l-28.255-113.257c-3.402-13.635 6.889-26.843 20.914-26.843h203.473c14.028 0 24.318 13.209 20.916 26.843z\"\r\n        fill=\"#547d87\"\r\n      />\r\n      <path\r\n        d=\"M481.302 356.408a8.081 8.081 0 0 1-7.028 4.097H319.97c-10.419 25.812-35.553 43.206-63.97 43.206-31.674 0-59.284-21.602-66.966-52.395l-5.872-23.538c-6.804-27.27 13.779-53.686 41.829-53.686h117.242l-17.516 70.211h135.338L385.263 218.39a42.827 42.827 0 0 1-21.473 5.746H148.212c-23.812 0-43.116-19.344-43.116-43.206v-21.603c0-83.519 67.562-151.223 150.905-151.223s150.905 67.705 150.905 151.223v21.603a43.069 43.069 0 0 1-9.224 26.691l83.539 140.642a8.116 8.116 0 0 1 .081 8.145z\"\r\n        fill=\"#6b95a0\"\r\n      />\r\n      <path\r\n        d=\"M503.916 328.1c0 17.896-14.477 32.405-32.337 32.405-17.86 0-32.337-14.508-32.337-32.405 0-17.896 14.477-32.405 32.337-32.405 17.86 0 32.337 14.509 32.337 32.405zM40.421 295.695c-17.86 0-32.337 14.508-32.337 32.405s14.477 32.405 32.337 32.405 32.337-14.508 32.337-32.405c0-17.896-14.477-32.405-32.337-32.405z\"\r\n        fill=\"#547d87\"\r\n      />\r\n      <path\r\n        d=\"M51.2 328.1c0 5.966-4.826 10.802-10.779 10.802s-10.779-4.835-10.779-10.802 4.826-10.802 10.779-10.802S51.2 322.135 51.2 328.1zm420.379-10.801c-5.953 0-10.779 4.835-10.779 10.802s4.826 10.802 10.779 10.802 10.779-4.835 10.779-10.802c0-5.966-4.826-10.802-10.779-10.802z\"\r\n        fill=\"#6b95a0\"\r\n      />\r\n      <path\r\n        d=\"M199.411 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.464 0 8.084 3.627 8.084 8.101z\"\r\n        fill=\"#fc8059\"\r\n      />\r\n      <path\r\n        d=\"M231.747 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.465 0 8.084 3.627 8.084 8.101z\"\r\n        fill=\"#ffd880\"\r\n      />\r\n      <path\r\n        d=\"M317.979 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.464 0 8.084 3.627 8.084 8.101z\"\r\n        fill=\"#b5e5bc\"\r\n      />\r\n      <path\r\n        d=\"M212.884 349.703h-21.558c-5.953 0-10.779-4.826-10.779-10.779v-21.648c0-5.953 4.826-10.779 10.779-10.779h21.558c5.953 0 10.779 4.826 10.779 10.779v21.648c0 5.954-4.826 10.779-10.779 10.779z\"\r\n        fill=\"#cfdfe2\"\r\n      />\r\n      <path\r\n        d=\"M158.989 121.519c0-29.827 24.13-54.008 53.895-54.008s53.895 24.18 53.895 54.008-24.13 54.008-53.895 54.008-53.895-24.18-53.895-54.008z\"\r\n        fill=\"#547d87\"\r\n      />\r\n      <path\r\n        d=\"M180.547 121.519c0-17.896 14.477-32.405 32.337-32.405s32.337 14.508 32.337 32.405-14.477 32.405-32.337 32.405-32.337-14.508-32.337-32.405z\"\r\n        fill=\"#cfdfe2\"\r\n      />\r\n      <path\r\n        d=\"M212.884 121.519c0-8.949 7.239-16.203 16.168-16.203s16.168 7.254 16.168 16.203-7.239 16.203-16.168 16.203-16.168-7.254-16.168-16.203z\"\r\n        fill=\"#fff\"\r\n      />\r\n      <path\r\n        d=\"M427.65 41.321c44.199 44.292 44.199 116.104 0 160.396s-115.86 44.292-160.059 0-44.199-116.104 0-160.396 115.86-44.292 160.059 0z\"\r\n        fill=\"#84a7b7\"\r\n      />\r\n      <path\r\n        d=\"M423.074 121.519c0 41.759-33.781 75.611-75.453 75.611s-75.453-33.852-75.453-75.611 33.781-75.611 75.453-75.611 75.453 33.853 75.453 75.611z\"\r\n        fill=\"#c3e4ed\"\r\n      />\r\n      <path\r\n        d=\"M392.807 60.962a75.77 75.77 0 0 1 25.89 35.159l-96.422 96.625c-14.102-5.04-26.274-14.155-35.084-25.945L392.807 60.962zm-116.262 85.956a75.226 75.226 0 0 0 4.534 10.256L383.201 54.836a74.936 74.936 0 0 0-10.235-4.542l-96.421 96.624z\"\r\n        fill=\"#dcf3f9\"\r\n      />\r\n      <path\r\n        d=\"M347.957 64.98c11.906 0 21.558 9.672 21.558 21.603s-9.651 21.603-21.558 21.603c-11.906 0-21.558-9.672-21.558-21.603s9.653-21.603 21.558-21.603z\"\r\n        fill=\"#fff\"\r\n      />\r\n      <path\r\n        d=\"M339.537 500.928c0 4.474-3.618 8.101-8.084 8.101H180.547c-4.466 0-8.084-3.627-8.084-8.101 0-4.474 3.618-8.101 8.084-8.101h150.905c4.466-.001 8.085 3.626 8.085 8.101zM512 328.101c0 22.335-18.132 40.506-40.421 40.506-15.48 0-28.955-8.765-35.743-21.603H369.36a10.21 10.21 0 0 1-.35 0h-91.452c-4.466 0-8.084-3.626-8.084-8.101s3.618-8.101 8.084-8.101h85.31l7.94-31.831a13.442 13.442 0 0 0-2.45-11.583 13.38 13.38 0 0 0-10.62-5.193H154.263a13.38 13.38 0 0 0-10.62 5.193 13.436 13.436 0 0 0-2.45 11.583l28.255 113.255c3.905 15.658 17.881 26.592 33.985 26.592h105.135c16.104 0 30.08-10.934 33.985-26.592l13.394-53.686a8.09 8.09 0 0 1 9.805-5.895c4.332 1.085 6.965 5.484 5.882 9.825l-13.394 53.686c-5.709 22.882-26.134 38.863-49.672 38.863H203.432c-23.538 0-43.963-15.982-49.672-38.865l-16.51-66.182H76.164c-5.574 10.541-15.659 18.338-27.659 20.79v71.024h11.528a18.815 18.815 0 0 1 14.393 6.685 18.894 18.894 0 0 1 4.215 15.324l-6.892 41.432a8.09 8.09 0 0 1-7.965 6.77c-.441 0-.888-.036-1.339-.112-4.403-.735-7.379-4.909-6.645-9.323l6.891-41.431a2.673 2.673 0 0 0-.601-2.189 2.66 2.66 0 0 0-2.057-.955H20.809a2.66 2.66 0 0 0-2.057.955 2.673 2.673 0 0 0-.601 2.19l6.891 41.43c.734 4.414-2.242 8.588-6.645 9.323-4.42.739-8.569-2.245-9.303-6.658l-6.892-41.431a18.895 18.895 0 0 1 4.215-15.326 18.812 18.812 0 0 1 14.393-6.685h11.528v-71.023C13.909 366.999 0 350.632 0 331.072c0-22.335 18.132-40.506 40.421-40.506s40.421 18.17 40.421 40.506c0 .909-.029 1.807-.088 2.7h52.455l-7.703-30.871c-2.229-8.936-.264-18.225 5.393-25.485 5.657-7.26 14.172-11.424 23.364-11.424h203.474c9.191 0 17.708 4.165 23.364 11.424 5.657 7.261 7.622 16.55 5.393 25.485l-6.961 27.9h51.714a40.969 40.969 0 0 1-.088-2.7c0-13.215 6.348-24.973 16.148-32.37l-40.478-68.148c-33.636 18.839-74.394 20.393-109.202 4.653H148.211c-28.231 0-51.2-23.016-51.2-51.308v-21.603C97.011 71.473 168.333.001 256 .001c16.758 0 33.244 2.602 49.054 7.738 43.144-16.134 93.68-6.852 128.314 27.853 47.28 47.381 47.28 124.473 0 171.854a121.792 121.792 0 0 1-12.977 11.291l41.585 70.013a40.22 40.22 0 0 1 9.603-1.155c22.289 0 40.421 18.171 40.421 40.506zM271.391 216.034a122.731 122.731 0 0 1-9.517-8.588c-15.088-15.122-25.712-33.525-31.204-53.605a40.302 40.302 0 0 1-17.786 4.134c-22.289 0-40.421-18.171-40.421-40.506s18.132-40.506 40.421-40.506a40.408 40.408 0 0 1 19.918 5.276c5.901-17.371 15.745-33.29 29.073-46.647a121.31 121.31 0 0 1 21.024-16.852A143.114 143.114 0 0 0 256 16.203c-78.752 0-142.821 64.205-142.821 143.122v21.603c0 19.358 15.715 35.105 35.032 35.105h123.18v.001zm-45.033-94.515c0-7.695.709-15.282 2.097-22.684-4.351-3.676-9.779-5.67-15.57-5.67-13.372 0-24.253 10.903-24.253 24.303s10.88 24.303 24.253 24.303a24.175 24.175 0 0 0 14.441-4.784 123.37 123.37 0 0 1-.968-15.468zm195.575 74.47c19.851-19.891 30.783-46.339 30.783-74.47s-10.932-54.578-30.783-74.47c-19.849-19.893-46.241-30.847-74.312-30.847-13.492 0-26.594 2.531-38.769 7.367-.401.202-.818.37-1.247.504-12.676 5.227-24.313 12.97-34.296 22.975-19.85 19.891-30.783 46.339-30.783 74.47s10.932 54.578 30.783 74.47c40.974 41.063 107.65 41.063 148.624.001zM64.674 331.072c0-13.4-10.88-24.303-24.253-24.303s-24.253 10.902-24.253 24.303c0 13.4 10.88 24.303 24.253 24.303s24.253-10.903 24.253-24.303zm431.158-2.971c0-13.4-10.88-24.303-24.253-24.303a24.078 24.078 0 0 0-10.018 2.17c-8.388 3.828-14.235 12.308-14.235 22.132a24.293 24.293 0 0 0 1.434 8.24c3.376 9.357 12.33 16.064 22.818 16.064 13.373.001 24.254-10.902 24.254-24.303zm-64.674-206.582c0 22.361-8.69 43.383-24.467 59.194-15.778 15.812-36.756 24.519-59.07 24.519s-43.291-8.708-59.07-24.519c-15.777-15.811-24.467-36.833-24.467-59.194s8.69-43.383 24.467-59.194 36.756-24.519 59.07-24.519 43.291 8.708 59.07 24.519 24.467 36.834 24.467 59.194zm-16.169 0c0-18.032-7.007-34.986-19.733-47.736-12.722-12.753-29.641-19.775-47.635-19.775s-34.913 7.022-47.635 19.774c-12.726 12.75-19.733 29.704-19.733 47.737s7.007 34.986 19.733 47.736c12.723 12.753 29.641 19.774 47.635 19.774s34.913-7.022 47.635-19.774c12.726-12.749 19.733-29.703 19.733-47.736zM212.884 298.397c10.401 0 18.863 8.48 18.863 18.903v21.603c0 10.423-8.463 18.903-18.863 18.903h-21.558c-10.401 0-18.863-8.48-18.863-18.903V317.3c0-10.423 8.463-18.903 18.863-18.903h21.558zm0 16.201h-21.558a2.7 2.7 0 0 0-2.695 2.7v21.603a2.7 2.7 0 0 0 2.695 2.7h21.558a2.7 2.7 0 0 0 2.695-2.7v-21.603a2.7 2.7 0 0 0-2.695-2.7z\"\r\n        fill=\"#4c4c4c\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Envelope (message) icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const EnvelopeIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '18';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512.001 512.001\"\r\n    >\r\n      <path d=\"M511.646 126.634c-.021-14.449-11.782-26.189-26.227-26.189h-.034l-459.195.631c-7.005.009-13.588 2.746-18.535 7.706C2.709 113.743-.009 120.334 0 127.337l.355 258.029c.009 7.005 2.746 13.588 7.706 18.535 4.951 4.938 11.526 7.655 18.519 7.655h.035l459.194-.631c14.458-.02 26.207-11.799 26.19-26.261l-.353-258.03zm-55.035.076L256.02 266.154 55.04 127.262l401.571-.552zM340.846 292.471l118.971 92.265-407.972.56 119.696-92.825c5.722-4.439 6.764-12.675 2.326-18.399-4.439-5.722-12.675-6.764-18.399-2.326L26.561 371.715l-.32-232.475 222.344 153.657a13.093 13.093 0 0 0 7.455 2.325c2.617 0 5.236-.783 7.485-2.346l221.912-154.264.336 233.066-128.856-99.931c-5.719-4.437-13.959-3.396-18.397 2.326-4.439 5.722-3.398 13.96 2.326 18.398z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Envelope open (message) icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const EnvelopeOpenIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '23';\r\n  const DEFAULT_COLOR = theme.colors.text.secondary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 512 512\"\r\n    >\r\n      <path d=\"M494.2 488V187c0-3.1-3.9-7-7.7-9.9L407.8 120V56.9c0-6.2-5.2-10.4-10.4-10.4h-89.7L262 13.2c-3.1-2.1-8.3-2.1-11.5 0l-45.7 33.3h-89.7c-6.2 0-10.4 5.2-10.4 10.4v62.4L25 177.2c-4.7 2.9-7.7 6.7-7.7 9.9v303c0 5.9 4.7 10 9.6 10.4h456.8c6.7-.1 10.5-5.3 10.5-12.5zm-19.8-282.3v263.6L302.3 331.5l172.1-125.8zm-7.7-18.3l-58.9 42.9v-86.2l58.9 43.3zM255.8 32.9l18.3 13.5h-36.7l18.4-13.5zM387 67.3v178.2l-131.2 95.6-131.2-95.6V67.3H387zM37.2 205.7l172.1 125.8L37.2 470.1V205.7zm67.6 25.4l-60.4-44 60.4-43.9v87.9zM55.9 480.6L226 343.7l23.5 17.2c4.5 3.4 7.9 3.4 12.5 0l23.5-17.2 171.1 136.9H55.9z\" />\r\n      <path d=\"M186.1 118.3h140.5v19.8H186.1zM186.1 181.8h140.5v19.8H186.1zM186.1 245.3h140.5v19.8H186.1z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Close (X) icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const SendIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '12';\r\n  const DEFAULT_COLOR = theme.colors.primary.main;\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 0 448.011 448.011\"\r\n    >\r\n      <path d=\"M438.731 209.463l-416-192c-6.624-3.008-14.528-1.216-19.136 4.48a15.911 15.911 0 00-.384 19.648l136.8 182.4-136.8 182.4c-4.416 5.856-4.256 13.984.352 19.648 3.104 3.872 7.744 5.952 12.448 5.952 2.272 0 4.544-.48 6.688-1.472l416-192c5.696-2.624 9.312-8.288 9.312-14.528s-3.616-11.904-9.28-14.528z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport theme from 'theme';\r\n\r\n/**\r\n * Pencil icon\r\n *\r\n * @param {string} width\r\n * @param {string} color\r\n */\r\nexport const PencilIcon = ({ width, color }) => {\r\n  const DEFAULT_WIDTH = '20';\r\n  const DEFAULT_COLOR = theme.colors.text.primary;\r\n\r\n  return (\r\n    <svg\r\n      width={width || DEFAULT_WIDTH}\r\n      fill={theme.colors[color] || DEFAULT_COLOR}\r\n      viewBox=\"0 -1 401.523 401\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M370.59 250.973c-5.524 0-10 4.476-10 10v88.789c-.02 16.562-13.438 29.984-30 30H50c-16.563-.016-29.98-13.438-30-30V89.172c.02-16.559 13.438-29.98 30-30h88.79c5.523 0 10-4.477 10-10 0-5.52-4.477-10-10-10H50c-27.602.031-49.969 22.398-50 50v260.594c.031 27.601 22.398 49.968 50 50h280.59c27.601-.032 49.969-22.399 50-50v-88.793c0-5.524-4.477-10-10-10zm0 0\" />\r\n      <path d=\"M376.629 13.441c-17.574-17.574-46.067-17.574-63.64 0L134.581 191.848a9.997 9.997 0 00-2.566 4.402l-23.461 84.7a9.997 9.997 0 0012.304 12.308l84.7-23.465a9.997 9.997 0 004.402-2.566l178.402-178.41c17.547-17.587 17.547-46.055 0-63.641zM156.37 198.348L302.383 52.332l47.09 47.09-146.016 146.016zm-9.406 18.875l37.62 37.625-52.038 14.418zM374.223 74.676L363.617 85.28l-47.094-47.094 10.61-10.605c9.762-9.762 25.59-9.762 35.351 0l11.739 11.734c9.746 9.774 9.746 25.59 0 35.36zm0 0\" />\r\n    </svg>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\n// prettier-ignore\r\n\r\n/**\r\n * Container div for holding UI, using theme screen options\r\n *\r\n * @param {string} maxWidth\r\n * @param {string} padding\r\n * @param {boolean} bordered\r\n * @param {boolean} color\r\n */\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  margin-top: ${p => p.marginTop ? p.theme.spacing[p.marginTop] : 0};\r\n  width: 100%;\r\n  max-width: ${p => (p.maxWidth && p.theme.screen[p.maxWidth])};\r\n  padding: ${p => p.padding ? `0 ${p.theme.spacing[p.padding]}` : `0 ${p.theme.spacing.sm}`};\r\n  z-index: ${p => p.zIndex && p.theme.zIndex[p.zIndex]};\r\n  background-color: ${p => p.color && p.theme.colors[p.color]};\r\n  border-radius: ${p => p.radius && p.theme.radius[p.radius]};\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  z-index: ${p => p.zIndex && p.theme.zIndex[p.zIndex]};\r\n  min-height: 500px;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    width: ${p => p.theme.screen.xs};\r\n  }\r\n\r\n  @media (min-width: ${p => p.theme.screen.lg}) {\r\n    width: ${p => p.theme.screen.sm};\r\n  }\r\n`;\r\n\r\n/**\r\n * Adds margins to UI, using theme spacing options\r\n *\r\n * @param {string} top\r\n * @param {string} right\r\n * @param {string} bottom\r\n * @param {string} left\r\n * @param {boolean} inline, converts block element to inline block\r\n */\r\nexport const Spacing = styled.div`\r\n  ${p => p.top && `margin-top: ${p.theme.spacing[p.top]}`};\r\n  ${p => p.right && `margin-right: ${p.theme.spacing[p.right]}`};\r\n  ${p => p.bottom && `margin-bottom: ${p.theme.spacing[p.bottom]}`};\r\n  ${p => p.left && `margin-left: ${p.theme.spacing[p.left]}`};\r\n  ${p => p.inline && `display: inline-block;`}\r\n\r\n  @media (max-width: ${p => p.theme.screen.sm}) {\r\n    ${p =>\r\n      p.hideOnSm &&\r\n      `\r\n      display: none;\r\n    `}\r\n  }\r\n`;\r\n\r\n/**\r\n * Overlay, on top of the whole UI\r\n */\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: ${p => p.theme.zIndex.md};\r\n  background-color: rgba(\r\n    0,\r\n    0,\r\n    0,\r\n    ${p => (p.transparency ? p.transparency : '0.8')}\r\n  );\r\n`;\r\n","import styled from 'styled-components';\r\nimport { get } from 'lodash';\r\n\r\n// prettier-ignore\r\n\r\n/**\r\n * Button\r\n *\r\n * @param {string} size\r\n * @param {string} color\r\n * @param {boolean} disabled\r\n * @param {boolean} text, style button as a text\r\n */\r\nexport const Button = styled.button`\r\n  letter-spacing: 0.5px;\r\n  outline: 0;\r\n  transition: opacity 0.1s;\r\n  border: 0;\r\n  color: ${p => p.theme.colors.white};\r\n  font-size: ${p => p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.sm};\r\n  background-color: ${p => p.color ? p.theme.colors[p.color] : p.theme.colors.primary.main};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: ${p => (p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal)};\r\n  white-space: nowrap;\r\n  align-self: flex-start;\r\n\r\n  ${p => p.disabled && `\r\n    background-color: ${p.theme.colors.grey[500]};\r\n    cursor: not-allowed;\r\n  `};\r\n\r\n  ${p => !p.disabled && `\r\n    &:hover {\r\n      opacity .9;\r\n      cursor: pointer;\r\n    }\r\n  `};\r\n\r\n  ${p => p.text && `\r\n    color: ${p.color ? get(p.theme.colors, p.color) : p.theme.colors.text.secondary};\r\n    border-radius: 0;\r\n    background-color: transparent;\r\n  `};\r\n\r\n${p => p.ghost && `\r\n    color: ${p.color ? get(p.theme.colors[p.color]) : p.theme.colors.text.secondary};\r\n    border-radius: 0;\r\n    background-color: transparent;\r\n    padding: 0;\r\n    text-align: left;\r\n  `};\r\n\r\n  ${p => p.fullWidth && `\r\n    width: 100%;\r\n  `}\r\n`;\r\n\r\n/**\r\n * Input type text\r\n */\r\nexport const InputText = styled.input`\r\n  outline: 0;\r\n  height: 36px;\r\n  width: 100%;\r\n  transition: border 0.1s;\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  padding-left: ${p => p.theme.spacing.xs};\r\n  border: 1px solid\r\n    ${p =>\r\n      p.borderColor\r\n        ? p.theme.colors[p.borderColor]\r\n        : p.theme.colors.border.main};\r\n  color: ${p => p.theme.colors.text.secondary};\r\n\r\n  &:focus {\r\n    border-color: ${p => p.theme.colors.border.main};\r\n  }\r\n`;\r\n\r\n/**\r\n * Textarea\r\n */\r\nexport const Textarea = styled.textarea`\r\n  outline: 0;\r\n  height: 50px;\r\n  width: 100%;\r\n  resize: none;\r\n  border: 0;\r\n  padding-left: ${p => p.theme.spacing.sm};\r\n  padding-top: ${p => p.theme.spacing.xs};\r\n  color: ${p => p.theme.colors.text.main};\r\n  font-size: ${p => p.theme.font.size.xs};\r\n\r\n  &::placeholder {\r\n    color: ${p => p.theme.colors.text.secondary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Form component\r\n */\r\nexport const Form = styled.form`\r\n  display: block;\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  padding: ${p => p.theme.spacing.lg} ${p => p.theme.spacing.sm};\r\n  background-color: ${p => p.theme.colors.white};\r\n  border: 1px solid ${p => p.theme.colors.border.main};\r\n`;\r\n","/**\r\n * Available Message types\r\n */\r\n\r\nexport const MessageType = {\r\n  SUCCESS: 'SUCCESS',\r\n  INFO: 'INFO',\r\n  WARNING: 'WARNING',\r\n  ERROR: 'ERROR',\r\n};\r\n\r\nexport const allMessageTypes = Object.keys(MessageType);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nimport {\r\n  SuccessIcon,\r\n  InfoIcon,\r\n  WarningIcon,\r\n  ErrorIcon,\r\n  CloseIcon,\r\n} from 'components/icons';\r\nimport { Spacing } from './Layout';\r\nimport { Button } from 'components/Form';\r\n\r\nimport theme from 'theme';\r\n\r\nimport { allMessageTypes } from 'constants/MessageType';\r\n\r\nimport { useStore } from 'store';\r\nimport { CLEAR_MESSAGE } from 'store/message';\r\n\r\nconst fade = keyframes`\r\n  from {\r\n    bottom: -60px;\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    bottom: 0;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\n/**\r\n * Default styles for message\r\n */\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  box-shadow: ${p => p.theme.shadows.md};\r\n  padding: ${p => p.theme.spacing.sm};\r\n  z-index: ${p => p.theme.zIndex.xl};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${p => p.color && p.color};\r\n  animation: ${fade} 0.3s ease-out forwards;\r\n  color: ${p => p.theme.colors.white};\r\n`;\r\n\r\nconst Close = styled(Button)`\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 24px;\r\n`;\r\n\r\n/**\r\n * Displays global message as feedback in response to user operations\r\n */\r\nconst Message = ({ children, type, autoClose }) => {\r\n  const [, dispatch] = useStore();\r\n\r\n  useEffect(\r\n    () => {\r\n      if (autoClose) {\r\n        const timer = setTimeout(() => {\r\n          dispatch({ type: CLEAR_MESSAGE });\r\n        }, 5000);\r\n\r\n        return () => {\r\n          clearTimeout(timer);\r\n        };\r\n      }\r\n    },\r\n    [dispatch, autoClose]\r\n  );\r\n\r\n  const { success, info, warning, error } = theme.colors;\r\n\r\n  const Colors = {\r\n    SUCCESS: success,\r\n    INFO: info,\r\n    WARNING: warning,\r\n    ERROR: error.main,\r\n  };\r\n\r\n  const MessageType = type => {\r\n    const icons = {\r\n      SUCCESS: <SuccessIcon />,\r\n      INFO: <InfoIcon />,\r\n      WARNING: <WarningIcon />,\r\n      ERROR: <ErrorIcon />,\r\n    };\r\n\r\n    return icons[type];\r\n  };\r\n\r\n  return (\r\n    <Root color={Colors[type]}>\r\n      {MessageType(type)}\r\n      <Spacing left={type && 'xs'}>{children}</Spacing>\r\n      <Close ghost onClick={() => dispatch({ type: CLEAR_MESSAGE })}>\r\n        <CloseIcon color=\"white\" />\r\n      </Close>\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  autoClose: true,\r\n};\r\n\r\nMessage.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n  type: PropTypes.oneOf(allMessageTypes),\r\n  autoClose: PropTypes.bool,\r\n};\r\n\r\nexport default Message;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\n// prettier-ignore\r\n\r\nconst Load = keyframes`\r\n  0% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n  5%,\r\n  95% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n  10%,\r\n  59% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\r\n  }\r\n  20% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\r\n  }\r\n  38% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\r\n  }\r\n  100% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n`;\r\n\r\nconst Round = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n/**\r\n * Displays loading spinner\r\n */\r\nexport const Loading = styled.div`\r\n  text-indent: -9999em;\r\n  overflow: hidden;\r\n  width: 1em;\r\n  height: 1em;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  transform: translateZ(0);\r\n  animation: ${Load} 1.7s infinite ease, ${Round} 1.7s infinite ease;\r\n  margin: 0 auto;\r\n  margin-top: ${p => p.top && p.theme.spacing[p.top]};\r\n  margin-bottom: ${p => p.bottom && p.theme.spacing[p.bottom]};\r\n  color: ${p =>\r\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\r\n  font-size: ${p =>\r\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm};\r\n`;\r\n\r\n/**\r\n * Displays loading dots\r\n */\r\nexport const LoadingDots = styled.div`\r\n  &::after {\r\n    display: block;\r\n    animation: ellipsis 1s infinite;\r\n    content: '.';\r\n    text-align: center;\r\n    color: ${p =>\r\n      p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\r\n    font-size: ${p => p.theme.font.size.xl};\r\n  }\r\n\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * Wrapper around React Router's Link component, that uses theme styling\r\n *\r\n * @param {string} color\r\n * @param {string} weight\r\n * @param {string} size\r\n */\r\nexport const A = styled(Link)`\r\n  text-decoration: none;\r\n  transition: color 0.1s;\r\n  display: inline-block;\r\n  color: ${p =>\r\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary};\r\n  font-weight: ${p =>\r\n    p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal};\r\n  font-size: ${p =>\r\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\r\n\r\n  &:hover {\r\n    color: ${p => p.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Component for wrapping error messages\r\n */\r\nexport const Error = styled.div`\r\n  color: ${p =>\r\n    p.color ? p.theme.colors[p.color] : p.theme.colors.error.main};\r\n  font-size: ${p =>\r\n    p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm};\r\n`;\r\n\r\n/**\r\n * Helper function for adding styles to Heading components\r\n *\r\n * @param {string} size, size of text\r\n */\r\nconst getHeadingStyles = size => css`\r\n  margin: 0;\r\n  font-size: ${size};\r\n  font-weight: ${p => p.theme.font.weight.normal};\r\n  color: ${p =>\r\n    p.color ? p.theme.colors[p.color] : p.theme.colors.text.primary};\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  ${getHeadingStyles(p => p.theme.font.size.xl)};\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  ${getHeadingStyles(p => p.theme.font.size.lg)};\r\n`;\r\n\r\nexport const H3 = styled.h3`\r\n  ${getHeadingStyles(p => p.theme.font.size.xs)};\r\n`;\r\n","/**\r\n * All available routes for the app\r\n */\r\n\r\nexport const HOME = '/';\r\n\r\nexport const FORGOT_PASSWORD = '/forgot-password';\r\n\r\nexport const RESET_PASSWORD = '/reset-password';\r\n\r\nexport const USER_PROFILE = '/:username';\r\n\r\nexport const EXPLORE = '/explore';\r\n\r\nexport const PEOPLE = '/people';\r\n\r\nexport const NOTIFICATIONS = '/notifications';\r\n\r\nexport const MESSAGES = '/messages/:userId';\r\n\r\nexport const POST = '/post/:id';\r\n\r\n/**\r\n * Value that's used in place of id when creating something new.\r\n */\r\nexport const NEW_ID_VALUE = 'new';\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Mutation } from 'react-apollo';\r\nimport styled from 'styled-components';\r\n\r\nimport { A } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport { Error } from 'components/Text';\r\nimport { InputText, Button } from 'components/Form';\r\n\r\nimport { SIGN_IN } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: space-between;\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n  margin-top: ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst InputContainer = styled(Spacing)`\r\n  width: 100%;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  position: absolute;\r\n  top: 1px;\r\n`;\r\n\r\nconst ForgotPassword = styled.div`\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n  margin-top: ${p => p.theme.spacing.xxs};\r\n  color: ${p => p.theme.colors.white};\r\n`;\r\n\r\n/**\r\n * Sign In page\r\n */\r\nconst SignIn = ({ history, location, refetch }) => {\r\n  const [values, setValues] = useState({ emailOrUsername: '', password: '' });\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    setError('');\r\n  }, [location.pathname]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e, signin) => {\r\n    e.preventDefault();\r\n\r\n    if (!emailOrUsername || !password) {\r\n      setError('Tous les champs sont requis');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    signin().then(async ({ data }) => {\r\n      localStorage.setItem('token', data.signin.token);\r\n      await refetch();\r\n      history.push(Routes.HOME);\r\n    });\r\n  };\r\n\r\n  const renderErrors = apiError => {\r\n    let errorMessage;\r\n\r\n    if (error) {\r\n      errorMessage = error;\r\n    } else if (apiError) {\r\n      errorMessage = apiError.graphQLErrors[0].message;\r\n    }\r\n\r\n    if (errorMessage) {\r\n      return (\r\n        <ErrorMessage>\r\n          <Error size=\"xxs\" color=\"white\">\r\n            {errorMessage}\r\n          </Error>\r\n        </ErrorMessage>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const { emailOrUsername, password } = values;\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={SIGN_IN}\r\n      variables={{ input: { emailOrUsername, password } }}\r\n    >\r\n      {(signin, { loading, error: apiError }) => (\r\n        <form onSubmit={e => handleSubmit(e, signin)}>\r\n          <Root>\r\n            <InputContainer>\r\n              {renderErrors(apiError)}\r\n\r\n              <InputText\r\n                autoFocus\r\n                type=\"text\"\r\n                name=\"emailOrUsername\"\r\n                values={emailOrUsername}\r\n                onChange={handleChange}\r\n                placeholder=\"Email ou Nom d'utilisateur\"\r\n                borderColor=\"white\"\r\n              />\r\n            </InputContainer>\r\n\r\n            <InputContainer left=\"xs\" right=\"xs\">\r\n              <InputText\r\n                type=\"password\"\r\n                name=\"password\"\r\n                values={password}\r\n                onChange={handleChange}\r\n                placeholder=\"Mot de Passe\"\r\n                borderColor=\"white\"\r\n              />\r\n             {/*<A to={Routes.FORGOT_PASSWORD}>\r\n                <ForgotPassword>Mot de passe oublié?</ForgotPassword>\r\n              </A>*/} \r\n            </InputContainer>\r\n\r\n            <Button disabled={loading}>Connexion</Button>\r\n          </Root>\r\n        </form>\r\n      )}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(SignIn);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { A } from 'components/Text';\r\nimport { Container } from 'components/Layout';\r\nimport SignIn from './SignIn';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport SiteInfo from 'constants/SiteInfo.json';\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 80px;\r\n  background-color: transparent;\r\n`;\r\n\r\nconst StyledContainer = styled(Container)`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 ${p => p.theme.spacing.sm};\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst Logo = styled(A)`\r\n  display: none;\r\n  color: ${p => p.theme.colors.white};\r\n  font-size: ${p => p.theme.font.size.sm};\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n\r\n  &:hover {\r\n    color: ${p => p.theme.colors.white};\r\n  }\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst SignInContainer = styled.div`\r\n  width: 500px;\r\n`;\r\n\r\n/**\r\n * Header of the App when user isn't authenticated\r\n */\r\nconst AuthHeader = ({ refetch }) => {\r\n  return (\r\n    <Root>\r\n      <StyledContainer maxWidth=\"lg\">\r\n        <Logo to={Routes.HOME}>{SiteInfo.name}</Logo>\r\n\r\n        <SignInContainer>\r\n          <SignIn refetch={refetch} />\r\n        </SignInContainer>\r\n      </StyledContainer>\r\n    </Root>\r\n  );\r\n};\r\n\r\nAuthHeader.propTypes = {\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AuthHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport SiteInfo from 'constants/SiteInfo.json';\r\n\r\n/**\r\n * Component that manages changes to document head\r\n * currently we are editing only title, but you can add meta description, image ...\r\n */\r\nconst Head = ({ title }) => (\r\n  <Helmet>\r\n    <title>{title}</title>\r\n  </Helmet>\r\n);\r\n\r\nHead.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nHead.defaultProps = {\r\n  title: SiteInfo.name,\r\n};\r\n\r\nexport default Head;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Mutation } from 'react-apollo';\r\n\r\nimport { Spacing, Container } from 'components/Layout';\r\nimport { H1, Error } from 'components/Text';\r\nimport { InputText, Button } from 'components/Form';\r\nimport Head from 'components/Head';\r\n\r\nimport { SIGN_UP } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled(Container)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 60px;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    justify-content: space-between;\r\n    margin-top: 120px;\r\n  }\r\n`;\r\n\r\nconst Welcome = styled.div`\r\n  display: none;\r\n  flex-direction: column;\r\n  color: ${p => p.theme.colors.white};\r\n  max-width: ${p => p.theme.screen.xs};\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst Heading = styled(H1)`\r\n  margin-bottom: ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Form = styled.div`\r\n  padding: ${p => p.theme.spacing.md};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  width: 100%;\r\n\r\n  @media (min-width: ${p => p.theme.screen.sm}) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\n/**\r\n * Sign Up page\r\n */\r\nconst SignUp = ({ history, refetch }) => {\r\n  const [error, setError] = useState('');\r\n  const [values, setValues] = useState({\r\n    fullName: '',\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const validate = () => {\r\n    if (!fullName || !email || !username || !password) {\r\n      return 'All fields are required';\r\n    }\r\n\r\n    if (fullName.length > 50) {\r\n      return 'Full name no more than 50 characters';\r\n    }\r\n\r\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!emailRegex.test(String(email).toLowerCase())) {\r\n      return 'Enter a valid email address.';\r\n    }\r\n\r\n    const usernameRegex = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\r\n    if (!usernameRegex.test(username)) {\r\n      return 'Usernames can only use letters, numbers, underscores and periods';\r\n    } else if (username.length > 20) {\r\n      return 'Username no more than 50 characters';\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      return 'Password min 6 characters';\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleSubmit = (e, signup) => {\r\n    e.preventDefault();\r\n\r\n    const error = validate();\r\n    if (error) {\r\n      setError(error);\r\n      return false;\r\n    }\r\n\r\n    signup().then(async ({ data }) => {\r\n      localStorage.setItem('token', data.signup.token);\r\n      await refetch();\r\n      history.push(Routes.HOME);\r\n    });\r\n  };\r\n\r\n  const renderErrors = apiError => {\r\n    let errorMessage;\r\n\r\n    if (error) {\r\n      errorMessage = error;\r\n    } else if (apiError) {\r\n      errorMessage = apiError.graphQLErrors[0].message;\r\n    }\r\n\r\n    if (errorMessage) {\r\n      return (\r\n        <Spacing bottom=\"sm\" top=\"sm\">\r\n          <Error>{errorMessage}</Error>\r\n        </Spacing>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const { fullName, email, password, username } = values;\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={SIGN_UP}\r\n      variables={{ input: { fullName, email, password, username } }}\r\n    >\r\n      {(signup, { loading, error: apiError }) => {\r\n        return (\r\n          <Root maxWidth=\"lg\">\r\n            <Head />\r\n\r\n            <Welcome>\r\n              <div>\r\n                <Heading color=\"white\">\r\n                Connectez-vous avec vos amis et Sauver les animaux du monde qui vous entoure.\r\n                </Heading>\r\n              </div>\r\n\r\n              <p>Voir les photos et les mises à jour de vos amis.</p>\r\n              <p>Suivez vos intérêts.</p>\r\n              <p>Écoutez ce dont les gens parlent..</p>\r\n            </Welcome>\r\n\r\n            <Form>\r\n              <Spacing bottom=\"md\">\r\n                <H1>Creation d'un Compte</H1>\r\n              </Spacing>\r\n\r\n              <form onSubmit={e => handleSubmit(e, signup)}>\r\n                <InputText\r\n                  type=\"text\"\r\n                  name=\"fullName\"\r\n                  values={fullName}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Nom complet\"\r\n                  borderColor=\"white\"\r\n                />\r\n                <Spacing top=\"xs\" bottom=\"xs\">\r\n                  <InputText\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    values={email}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Email\"\r\n                    borderColor=\"white\"\r\n                  />\r\n                </Spacing>\r\n                <InputText\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  values={username}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Nom d'utilisateur\"\r\n                  borderColor=\"white\"\r\n                />\r\n                <Spacing top=\"xs\" bottom=\"xs\">\r\n                  <InputText\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    values={password}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Mot de Passe Password\"\r\n                    borderColor=\"white\"\r\n                  />\r\n                </Spacing>\r\n\r\n                {renderErrors(apiError)}\r\n\r\n                <Spacing top=\"sm\" />\r\n                <Button size=\"large\" disabled={loading}>\r\n                  S'inscrire\r\n                </Button>\r\n              </form>\r\n            </Form>\r\n          </Root>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nSignUp.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Mutation } from 'react-apollo';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport { H1, A, Error } from 'components/Text';\r\nimport { InputText, Button } from 'components/Form';\r\nimport Head from 'components/Head';\r\n\r\nimport { REQUEST_PASSWORD_RESET } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  padding: 0 ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 450px;\r\n  margin: 0 auto;\r\n  background-color: ${p => p.theme.colors.white};\r\n  padding: ${p => p.theme.spacing.md};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  width: 100%;\r\n  margin-top: 80px;\r\n\r\n  @media (min-width: ${p => p.theme.screen.sm}) {\r\n    width: 450px;\r\n  }\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    margin-top: auto;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: ${p => p.theme.font.size.xs};\r\n  line-height: 22px;\r\n`;\r\n\r\n/**\r\n * Forgot password page\r\n */\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleEmailChange = e => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e, requestResetPassword) => {\r\n    e.preventDefault();\r\n\r\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!emailRegex.test(String(email).toLowerCase())) {\r\n      setError('Enter a valid email address.');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    setEmail('');\r\n    requestResetPassword().then(async ({ data }) => {\r\n      setMessage(data.requestPasswordReset.message);\r\n    });\r\n  };\r\n\r\n  if (message) {\r\n    return (\r\n      <Root>\r\n        <Container>\r\n          <Spacing bottom=\"sm\">\r\n            <H1>{message}</H1>\r\n          </Spacing>\r\n        </Container>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={REQUEST_PASSWORD_RESET}\r\n      variables={{ input: { email } }}\r\n    >\r\n      {(requestResetPassword, { data, loading, error: apiError }) => (\r\n        <Root>\r\n          <Head title=\"Forgot Password\" />\r\n\r\n          <Container>\r\n            <Spacing bottom=\"sm\">\r\n              <H1>réinitialiser le mot de passe</H1>\r\n              <Text>\r\n              Saisissez l'adresse e-mail associée à votre compte et nous vous enverrons un lien pour réinitialiser votre mot de passe.\r\n              </Text>\r\n            </Spacing>\r\n\r\n            <form onSubmit={e => handleSubmit(e, requestResetPassword)}>\r\n              <InputText\r\n                type=\"text\"\r\n                name=\"email\"\r\n                values={email}\r\n                onChange={handleEmailChange}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              {error && (\r\n                <Spacing bottom=\"sm\" top=\"sm\">\r\n                  <Error>{error}</Error>\r\n                </Spacing>\r\n              )}\r\n\r\n              {apiError && (\r\n                <Spacing bottom=\"sm\" top=\"sm\">\r\n                  <Error>\r\n                    {apiError.graphQLErrors.map(e => (\r\n                      <div key={e.message}>{e.message}</div>\r\n                    ))}\r\n                  </Error>\r\n                </Spacing>\r\n              )}\r\n\r\n              <Spacing top=\"xs\" />\r\n\r\n              <Button disabled={loading}>Envoyer le lien de réinitialisation</Button>\r\n\r\n              <Spacing top=\"sm\">\r\n                <A to={Routes.HOME}>&larr; Retour à l'inscription</A>\r\n              </Spacing>\r\n            </form>\r\n          </Container>\r\n        </Root>\r\n      )}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nForgotPassword.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Query, Mutation } from 'react-apollo';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport { H1, Error } from 'components/Text';\r\nimport { Loading } from 'components/Loading';\r\nimport { InputText, Button } from 'components/Form';\r\nimport Head from 'components/Head';\r\n\r\nimport { VERIFY_RESET_PASSWORD_TOKEN, RESET_PASSWORD } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  padding: 0 ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  background-color: ${p => p.theme.colors.white};\r\n  padding: ${p => p.theme.spacing.md};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  margin-top: 80px;\r\n\r\n  @media (min-width: ${p => p.theme.screen.sm}) {\r\n    width: 450px;\r\n  }\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    margin-top: auto;\r\n  }\r\n`;\r\n\r\n/**\r\n * Reset password page\r\n */\r\nconst ResetPassword = ({ history, location, refetch }) => {\r\n  const [values, setValues] = useState({ password: '', confirmPassword: '' });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e, resetPassword) => {\r\n    e.preventDefault();\r\n\r\n    if (!password || !confirmPassword) {\r\n      setError('Enter password and Confirm password.');\r\n      return;\r\n    } else if (password.length < 6) {\r\n      setError('Password min 6 characters');\r\n      return;\r\n    } else if (password !== confirmPassword) {\r\n      setError(\"Passwords don't match.\");\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    resetPassword()\r\n      .then(async ({ data }) => {\r\n        localStorage.setItem('token', data.resetPassword.token);\r\n        await refetch();\r\n        history.push(Routes.HOME);\r\n      })\r\n      .catch(err => {\r\n        setError(err);\r\n      });\r\n  };\r\n\r\n  const { password, confirmPassword } = values;\r\n\r\n  const url = new URLSearchParams(location.search);\r\n  const email = url.get('email');\r\n  const token = url.get('token');\r\n\r\n  return (\r\n    <Root>\r\n      <Head title=\"Reset Password\" />\r\n\r\n      <Container>\r\n        <Query query={VERIFY_RESET_PASSWORD_TOKEN} variables={{ email, token }}>\r\n          {({ loading, error: apiError }) => {\r\n            if (loading) return <Loading top=\"lg\" />;\r\n            if (apiError)\r\n              return <H1>Ce jeton est invalide ou expiré!</H1>;\r\n\r\n            return (\r\n              <Mutation\r\n                mutation={RESET_PASSWORD}\r\n                variables={{ input: { email, password, token } }}\r\n              >\r\n                {(resetPassword, { loading, error: apiError }) => {\r\n                  if (apiError) return <H1>{apiError}</H1>;\r\n\r\n                  return (\r\n                    <>\r\n                      <Spacing bottom=\"md\">\r\n                        <H1>Password Reset</H1>\r\n                      </Spacing>\r\n\r\n                      <form onSubmit={e => handleSubmit(e, resetPassword)}>\r\n                        <InputText\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          values={password}\r\n                          onChange={handleChange}\r\n                          placeholder=\"Password\"\r\n                        />\r\n\r\n                        <Spacing top=\"xs\" bottom=\"sm\">\r\n                          <InputText\r\n                            type=\"password\"\r\n                            name=\"confirmPassword\"\r\n                            values={confirmPassword}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Confirm Password\"\r\n                          />\r\n                        </Spacing>\r\n\r\n                        {error && (\r\n                          <Spacing bottom=\"sm\" top=\"sm\">\r\n                            <Error>{error}</Error>\r\n                          </Spacing>\r\n                        )}\r\n\r\n                        <Button disabled={loading}>Reset Password</Button>\r\n                      </form>\r\n                    </>\r\n                  );\r\n                }}\r\n              </Mutation>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Container>\r\n    </Root>\r\n  );\r\n};\r\n\r\nResetPassword.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(ResetPassword);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Overlay } from 'components/Layout';\r\nimport { AuthHeader, SignUp, ForgotPassword, ResetPassword } from 'pages/Auth';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport backgroundImage from './background.jpg';\r\n\r\nconst Root = styled.div`\r\n  background: url(${backgroundImage}) no-repeat top / cover;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: ${p => p.theme.zIndex.lg};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Pages = styled.div`\r\n  margin-top: 80px;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    margin-top: -120px;\r\n  }\r\n`;\r\n\r\n/**\r\n * Main Layout for the app, when user isn't authenticated\r\n */\r\nconst AuthLayout = ({ refetch }) => {\r\n  return (\r\n    <Root>\r\n      <Overlay transparency=\"0.5\" />\r\n\r\n      <Container>\r\n        <AuthHeader refetch={refetch} />\r\n\r\n        <Pages>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={Routes.HOME}\r\n              render={() => <SignUp refetch={refetch} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path={Routes.FORGOT_PASSWORD}\r\n              component={ForgotPassword}\r\n            />\r\n            <Route\r\n              exact\r\n              path={Routes.RESET_PASSWORD}\r\n              render={() => <ResetPassword refetch={refetch} />}\r\n            />\r\n            <Redirect to={Routes.HOME} />\r\n          </Switch>\r\n        </Pages>\r\n      </Container>\r\n    </Root>\r\n  );\r\n};\r\n\r\nAuthLayout.propTypes = {\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AuthLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { UserIcon } from './icons';\r\n\r\nconst Root = styled.div`\r\n  width: ${p => (p.size ? `${p.size}px` : '30px')};\r\n  height: ${p => (p.size ? `${p.size}px` : '30px')};\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\n/**\r\n * Component for rendering user's image\r\n */\r\nconst Avatar = ({ size, image }) => (\r\n  <Root size={size}>\r\n    {image ? (\r\n      <Image src={image} />\r\n    ) : (\r\n      <UserIcon width={size ? `${size}px` : 30} />\r\n    )}\r\n  </Root>\r\n);\r\n\r\nAvatar.propTypes = {\r\n  size: PropTypes.number,\r\n  image: PropTypes.string,\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { SearchIcon } from 'components/icons';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: ${p => p.theme.zIndex.xl};\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  position: absolute;\r\n  top: 12px;\r\n  left: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  outline: 0;\r\n  height: 40px;\r\n  width: 100%;\r\n  border: 0;\r\n  border-radius: ${p => p.theme.radius.md};\r\n  padding-left: ${p => (p.hideIcon ? p.theme.spacing.xs : p.theme.spacing.lg)};\r\n  padding-right: ${p => p.theme.spacing.lg};\r\n  color: ${p => p.theme.colors.text.main};\r\n  font-size: ${p => p.theme.font.size.xs};\r\n  background-color: ${p =>\r\n    p.backgroundColor\r\n      ? p.theme.colors[p.backgroundColor]\r\n      : p.theme.colors.grey[200]};\r\n  transition: border-color 0.1s;\r\n\r\n  &:focus {\r\n    &::placeholder {\r\n      color: ${p => p.theme.colors.grey[500]};\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Component for rendering search input\r\n */\r\nconst SearchInput = ({\r\n  onChange,\r\n  onFocus,\r\n  value,\r\n  inputRef,\r\n  backgroundColor,\r\n  placeholder,\r\n  hideIcon,\r\n  children,\r\n  autoFocus,\r\n}) => {\r\n  return (\r\n    <Root>\r\n      {!hideIcon && (\r\n        <IconContainer>\r\n          <SearchIcon />\r\n        </IconContainer>\r\n      )}\r\n\r\n      <Input\r\n        onChange={onChange}\r\n        onFocus={onFocus}\r\n        value={value}\r\n        ref={inputRef}\r\n        backgroundColor={backgroundColor}\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        hideIcon={hideIcon}\r\n        autoFocus={autoFocus}\r\n      />\r\n\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  onFocus: PropTypes.func,\r\n  value: PropTypes.string.isRequired,\r\n  ref: PropTypes.object,\r\n  backgroundColor: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  hideIcon: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  autoFocus: PropTypes.bool,\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport { A } from 'components/Text';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  max-height: 350px;\r\n  min-height: 40px;\r\n  overflow: auto;\r\n  position: absolute;\r\n  top: 50px;\r\n  font-size: ${p => p.theme.font.size.xs};\r\n  box-shadow: ${p => p.theme.shadows.sm};\r\n  background-color: ${p => p.theme.colors.white};\r\n`;\r\n\r\nconst StyledA = styled(A)`\r\n  display: block;\r\n\r\n  &:hover {\r\n    background-color: ${p => p.theme.colors.grey[100]};\r\n  }\r\n`;\r\n\r\nconst Item = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: ${p => p.theme.spacing.xs};\r\n`;\r\n\r\nconst Name = styled.div`\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n`;\r\n\r\nconst NoSearchResult = styled.div`\r\n  text-align: center;\r\n  padding: ${p => p.theme.spacing.xs};\r\n  color: ${p => p.theme.colors.text.main};\r\n`;\r\n\r\n/**\r\n * Displays search result, meant to be used in Search component\r\n */\r\nconst SearchResult = ({ users, forMessage }) => {\r\n  if (users.length < 1) {\r\n    return (\r\n      <Root>\r\n        <NoSearchResult>No search results.</NoSearchResult>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      {users.map(user => (\r\n        <StyledA\r\n          key={user.id}\r\n          to={\r\n            forMessage\r\n              ? generatePath(Routes.MESSAGES, { userId: user.id })\r\n              : generatePath(Routes.USER_PROFILE, { username: user.username })\r\n          }\r\n        >\r\n          <Item>\r\n            <Avatar image={user.image} size={34} />\r\n\r\n            <Spacing left=\"xs\">\r\n              <Name>{user.fullName}</Name>\r\n              <UserName>@{user.username}</UserName>\r\n            </Spacing>\r\n          </Item>\r\n        </StyledA>\r\n      ))}\r\n    </Root>\r\n  );\r\n};\r\n\r\nSearchResult.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  forMessage: PropTypes.bool,\r\n};\r\n\r\nexport default SearchResult;\r\n","import { useEffect } from 'react';\r\n\r\n/**\r\n * React hook that detects click outside an element\r\n *\r\n * @param {node} ref, element to detect click outside\r\n * @param {func} handler, function for invoking when click outside element is detected\r\n */\r\nexport const useClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside, false);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside, false);\r\n    };\r\n  });\r\n\r\n  const handleClickOutside = event => {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      handler();\r\n    }\r\n  };\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useApolloClient } from '@apollo/react-hooks';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Loading } from 'components/Loading';\r\nimport SearchInput from './SearchInput';\r\nimport SearchResult from './SearchResult';\r\n\r\nimport { useClickOutside } from 'hooks/useClickOutside';\r\nimport { useDebounce } from 'hooks/useDebounce';\r\n\r\nimport { SEARCH_USERS } from 'graphql/user';\r\n\r\nconst StyledLoading = styled(Loading)`\r\n  position: absolute;\r\n  top: 14px;\r\n  right: 16px;\r\n`;\r\n\r\n/**\r\n * Renders search input\r\n */\r\nconst Search = ({\r\n  location,\r\n  hideIcon,\r\n  forMessage,\r\n  backgroundColor,\r\n  placeholder,\r\n  autoFocus,\r\n  ...others\r\n}) => {\r\n  const client = useApolloClient();\r\n\r\n  const [isOpenSearchResult, setIsOpenSearchResult] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Close search result on click outside\r\n  const inputRef = useRef(null);\r\n  useClickOutside(inputRef, () => setIsOpenSearchResult(false));\r\n\r\n  // Debounce search query value\r\n  const debounceSearchQuery = useDebounce(searchQuery, 500);\r\n\r\n  useEffect(() => {\r\n    // Clear search input value, after location change\r\n    setSearchQuery('');\r\n  }, [location.pathname]);\r\n\r\n  useEffect(() => {\r\n    const search = async () => {\r\n      const { data } = await client.query({\r\n        query: SEARCH_USERS,\r\n        variables: { searchQuery: debounceSearchQuery },\r\n      });\r\n\r\n      setUsers(data.searchUsers);\r\n      setLoading(false);\r\n\r\n      const openSearchResult = debounceSearchQuery !== '';\r\n      setIsOpenSearchResult(openSearchResult);\r\n    };\r\n\r\n    debounceSearchQuery ? search() : setIsOpenSearchResult(false);\r\n\r\n    return () => setLoading(false);\r\n  }, [debounceSearchQuery, client]);\r\n\r\n  const handleInputChange = async e => {\r\n    // Trim white space only from beginning\r\n    const value = e.target.value.replace(/^\\s+/g, '');\r\n    setSearchQuery(value);\r\n    if (value) {\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleInputFocus = () => searchQuery && setIsOpenSearchResult(true);\r\n\r\n  return (\r\n    <SearchInput\r\n      onChange={handleInputChange}\r\n      onFocus={handleInputFocus}\r\n      value={searchQuery}\r\n      inputRef={inputRef}\r\n      placeholder={placeholder}\r\n      hideIcon={hideIcon}\r\n      backgroundColor={backgroundColor}\r\n      autoFocus={autoFocus}\r\n      {...others}\r\n    >\r\n      {loading && <StyledLoading size=\"xxs\" />}\r\n\r\n      {isOpenSearchResult && (\r\n        <SearchResult users={users} forMessage={forMessage} />\r\n      )}\r\n    </SearchInput>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  hideIcon: PropTypes.bool,\r\n  forMessage: PropTypes.bool,\r\n  backgroundColor: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  autoFocus: PropTypes.bool,\r\n};\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from 'react';\r\n\r\n/**\r\n * React hook for debouncing\r\n */\r\nexport const useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    [value, delay]\r\n  );\r\n\r\n  return debouncedValue;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withApollo } from 'react-apollo';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Button } from 'components/Form';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport { useStore } from 'store';\r\nimport { CLEAR_AUTH_USER } from 'store/auth';\r\n\r\n/**\r\n * Component that signs out the user\r\n */\r\nconst SignOut = ({ client, history }) => {\r\n  const [, dispatch] = useStore();\r\n\r\n  const handleSignOut = () => {\r\n    dispatch({ type: CLEAR_AUTH_USER });\r\n    localStorage.removeItem('token');\r\n    client.resetStore();\r\n    history.push(Routes.HOME);\r\n  };\r\n\r\n  return (\r\n    <Button text onClick={handleSignOut}>\r\n      Déconnexion\r\n    </Button>\r\n  );\r\n};\r\n\r\nSignOut.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withApollo(SignOut));\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SignOut from 'components/App/SignOut';\r\nimport { A } from 'components/Text';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Root = styled.div`\r\n  text-align: center;\r\n  position: absolute;\r\n  background-color: white;\r\n  line-height: ${p => p.theme.spacing.md};\r\n  right: 0;\r\n  top: 60px;\r\n  z-index: ${p => p.theme.zIndex.xl};\r\n  box-shadow: ${p => p.theme.shadows.sm};\r\n`;\r\n\r\nconst CSS = css`\r\n  transition: background-color 0.1s;\r\n  display: block;\r\n  padding: ${p => p.theme.spacing.sm} ${p => p.theme.spacing.xl};\r\n\r\n  &:hover {\r\n    background-color: ${p => p.theme.colors.grey[100]};\r\n    color: ${p => p.theme.colors.text.secondary};\r\n  }\r\n`;\r\n\r\nconst Link = styled(A)`\r\n  ${CSS};\r\n`;\r\n\r\nconst Item = styled.div`\r\n  ${CSS};\r\n`;\r\n\r\n/**\r\n * Component that renders Header User's dropdown\r\n */\r\nconst HeaderUserDropDown = ({ userRef }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  return (\r\n    <Root ref={userRef}>\r\n      <Link\r\n        to={generatePath(Routes.USER_PROFILE, {\r\n          username: auth.user.username,\r\n        })}\r\n      >\r\n        Mon Profile\r\n      </Link>\r\n\r\n      <Item>\r\n        <SignOut />\r\n      </Item>\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeaderUserDropDown.propTypes = {\r\n  userRef: PropTypes.object,\r\n};\r\n\r\nexport default HeaderUserDropDown;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { generatePath } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { withApollo } from 'react-apollo';\r\n\r\nimport { A } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport { useClickOutside } from 'hooks/useClickOutside';\r\n\r\nimport { GET_AUTH_USER } from 'graphql/user';\r\nimport { UPDATE_NOTIFICATION_SEEN } from 'graphql/notification';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst NotificationItem = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: ${p => p.theme.spacing.xs};\r\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n  background-color: ${p => p.theme.colors.white};\r\n\r\n  &:last-child {\r\n    border-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst LeftSide = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst Action = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex: 1;\r\n  margin-left: ${p => p.theme.spacing.xs};\r\n`;\r\n\r\nconst PostImage = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  display: block;\r\n`;\r\n\r\n/**\r\n * Renders user notifications\r\n */\r\nconst Notification = ({ notification, close, client }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const ref = React.useRef(null);\r\n\r\n  useClickOutside(ref, close);\r\n\r\n  useEffect(() => {\r\n    const updateNotificationSeen = async () => {\r\n      try {\r\n        await client.mutate({\r\n          mutation: UPDATE_NOTIFICATION_SEEN,\r\n          variables: {\r\n            input: {\r\n              userId: auth.user.id,\r\n            },\r\n          },\r\n          refetchQueries: () => [{ query: GET_AUTH_USER }],\r\n        });\r\n      } catch (err) {}\r\n    };\r\n\r\n    updateNotificationSeen();\r\n  }, [auth.user.id, auth.user.newNotifications.length, client]);\r\n\r\n  if (!notification.follow && !notification.like && !notification.comment) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NotificationItem ref={ref}>\r\n      <A\r\n        to={generatePath(Routes.USER_PROFILE, {\r\n          username: notification.author.username,\r\n        })}\r\n      >\r\n        <LeftSide>\r\n          <Avatar image={notification.author.image} size={34} />\r\n\r\n          <Spacing left=\"xs\" />\r\n\r\n          <Name>{notification.author.fullName}</Name>\r\n        </LeftSide>\r\n      </A>\r\n\r\n      {notification.follow && <Action>commencé à te suivre</Action>}\r\n\r\n      {notification.like && (\r\n        <Action>\r\n          aime ta photo\r\n          <A to={generatePath(Routes.POST, { id: notification.like.post.id })}>\r\n            <PostImage>\r\n              <Image src={notification.like.post.image} />\r\n            </PostImage>\r\n          </A>\r\n        </Action>\r\n      )}\r\n\r\n      {notification.comment && (\r\n        <Action>\r\n          a commenté votre photo          <A\r\n            to={generatePath(Routes.POST, { id: notification.comment.post.id })}\r\n          >\r\n            <PostImage>\r\n              <Image src={notification.comment.post.image} />\r\n            </PostImage>\r\n          </A>\r\n        </Action>\r\n      )}\r\n    </NotificationItem>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  close: PropTypes.func,\r\n};\r\n\r\nexport default withApollo(Notification);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Notification from '../Notification';\r\n\r\nconst Root = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  max-height: 350px;\r\n  overflow-y: auto;\r\n  background-color: white;\r\n  right: 0;\r\n  top: 60px;\r\n  z-index: ${p => p.theme.zIndex.xl};\r\n  box-shadow: ${p => p.theme.shadows.sm};\r\n\r\n  @media (min-width: ${p => p.theme.screen.sm}) {\r\n    width: 500px;\r\n    right: ${p => p.theme.spacing.lg};\r\n  }\r\n`;\r\n\r\nconst Empty = styled.div`\r\n  padding: ${p => p.theme.spacing.xs};\r\n`;\r\n\r\n/**\r\n * Component that renders Header Notification's dropdown\r\n */\r\nconst HeaderNotificationDropDown = ({\r\n  notificationRef,\r\n  dropdownData,\r\n  closeDropDown,\r\n}) => {\r\n  return (\r\n    <Root ref={notificationRef}>\r\n      {!dropdownData.length ? (\r\n        <Empty>Pas de nouvelles notifications.</Empty>\r\n      ) : (\r\n        dropdownData.map(notification => (\r\n          <Notification\r\n            key={notification.id}\r\n            notification={notification}\r\n            close={closeDropDown}\r\n          />\r\n        ))\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeaderNotificationDropDown.propTypes = {\r\n  notificationRef: PropTypes.object,\r\n  dropdownData: PropTypes.array,\r\n  closeDropDown: PropTypes.func,\r\n};\r\n\r\nexport default HeaderNotificationDropDown;\r\n","/**\r\n * Converts unix timestamp into a time ago string like 2 hours ago\r\n *\r\n * @param {string} date unix timestamp\r\n */\r\nexport const timeAgo = unixTimestamp => {\r\n  const date = new Date(parseInt(unixTimestamp));\r\n\r\n  const seconds = Math.floor((new Date() - date) / 1000);\r\n  let interval = Math.floor(seconds / 31536000);\r\n\r\n  if (interval > 1) {\r\n    return interval + ' years';\r\n  }\r\n\r\n  interval = Math.floor(seconds / 2592000);\r\n  if (interval > 1) {\r\n    return interval + ' months';\r\n  }\r\n\r\n  interval = Math.floor(seconds / 86400);\r\n  if (interval > 1) {\r\n    return interval + ' days';\r\n  }\r\n\r\n  interval = Math.floor(seconds / 3600);\r\n  if (interval > 1) {\r\n    return interval + ' hours';\r\n  }\r\n\r\n  interval = Math.floor(seconds / 60);\r\n  if (interval > 1) {\r\n    return interval + ' mins';\r\n  }\r\n\r\n  return Math.floor(seconds) + ' seconds';\r\n};\r\n\r\n/**\r\n * Converts unix timestamp to current date\r\n *\r\n * @param {string} date unix timestamp\r\n */\r\nexport const currentDate = unixTimestamp => {\r\n  const date = new Date(parseInt(unixTimestamp));\r\n  const months = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec',\r\n  ];\r\n\r\n  const month = months[date.getMonth() + 1];\r\n  const day = date.getDay();\r\n  const year = date.getFullYear();\r\n  const time = date.toLocaleString('en-US', {\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    hour12: true,\r\n  });\r\n\r\n  return `${month} ${day}, ${year} ${time}`;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { NavLink, generatePath } from 'react-router-dom';\r\n\r\nimport Avatar from 'components/Avatar';\r\nimport { A } from 'components/Text';\r\n\r\nimport { timeAgo } from 'utils/date';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  max-height: 350px;\r\n  overflow-y: auto;\r\n  background-color: white;\r\n  right: 0;\r\n  top: 60px;\r\n  z-index: ${p => p.theme.zIndex.xl};\r\n  box-shadow: ${p => p.theme.shadows.sm};\r\n\r\n  @media (min-width: ${p => p.theme.screen.sm}) {\r\n    width: 500px;\r\n    right: 90px;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.xs};\r\n`;\r\n\r\nconst Link = styled(A)`\r\n  color: ${p => p.theme.colors.primary.main};\r\n  font-size: ${p => p.theme.font.size.xs};\r\n\r\n  &:hover {\r\n    color: ${p => p.theme.colors.primary.main};\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst User = styled(NavLink)`\r\n  width: 100%;\r\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.xxs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: ${p => p.theme.colors.text.primary};\r\n  border-top: 1px solid ${p => p.theme.colors.border.main};\r\n\r\n  &:hover {\r\n    background-color: ${p => p.theme.colors.grey[100]};\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  width: 100%;\r\n  padding: 0 ${p => p.theme.spacing.xs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  text-overflow: ellipsis;\r\n  width: 100%;\r\n`;\r\n\r\nconst LastMessage = styled.div`\r\n  margin-top: ${p => p.theme.spacing.xxs};\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n  color: ${p => p.theme.colors.grey[500]};\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst CreatedAt = styled.div`\r\n  font-size: ${p => p.theme.font.size.tiny};\r\n  color: ${p => p.theme.colors.text.secondary};\r\n`;\r\n\r\n/**\r\n * Component that renders Header Message's dropdown\r\n */\r\nconst HeaderMessageDropdown = ({ messageRef, dropdownData }) => {\r\n  return (\r\n    <Root ref={messageRef}>\r\n      <Heading>\r\n        <Link\r\n          to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\r\n        >\r\n          Nouveau Message\r\n        </Link>\r\n      </Heading>\r\n\r\n      {dropdownData.map(user => (\r\n        <User\r\n          key={user.id}\r\n          to={generatePath(Routes.MESSAGES, { userId: user.id })}\r\n        >\r\n          <span>\r\n            <Avatar image={user.image} size={50} />\r\n          </span>\r\n\r\n          <Info>\r\n            <div>\r\n              <FullName>{user.fullName}</FullName>\r\n\r\n              <LastMessage>{user.lastMessage}</LastMessage>\r\n            </div>\r\n\r\n            <CreatedAt>{timeAgo(user.lastMessageCreatedAt)}</CreatedAt>\r\n          </Info>\r\n        </User>\r\n      ))}\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeaderMessageDropdown.propTypes = {\r\n  messageRef: PropTypes.object,\r\n  dropdownData: PropTypes.array,\r\n};\r\n\r\nexport default HeaderMessageDropdown;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport HeaderUserDropDown from './HeaderUserDropDown';\r\nimport HeaderNotificationDropDown from './HeaderNotificationDropDown';\r\nimport HeaderMessageDropdown from './HeaderMessageDropdown';\r\n\r\n/**\r\n * Component that renders DropDown's of Header\r\n */\r\nconst HeaderDropDowns = ({\r\n  messageRef,\r\n  notificationRef,\r\n  userRef,\r\n  dropdownOpen,\r\n  dropdownData,\r\n  closeDropDown,\r\n}) => {\r\n  const DropDowns = {\r\n    USER: <HeaderUserDropDown userRef={userRef} />,\r\n    NOTIFICATION: (\r\n      <HeaderNotificationDropDown\r\n        notificationRef={notificationRef}\r\n        dropdownData={dropdownData}\r\n        closeDropDown={closeDropDown}\r\n      />\r\n    ),\r\n    MESSAGE: (\r\n      <HeaderMessageDropdown\r\n        messageRef={messageRef}\r\n        dropdownData={dropdownData}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return dropdownOpen ? DropDowns[dropdownOpen] : null;\r\n};\r\n\r\nHeaderDropDowns.propTypes = {\r\n  messageRef: PropTypes.object,\r\n  notificationRef: PropTypes.object,\r\n  userRef: PropTypes.object,\r\n  dropdownOpen: PropTypes.string,\r\n  dropdownData: PropTypes.array,\r\n  closeDropDown: PropTypes.func,\r\n};\r\n\r\nexport default HeaderDropDowns;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css } from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { NotificationIcon, MenuIcon, EnvelopeOpenIcon } from 'components/icons';\r\nimport { Container, Spacing } from 'components/Layout';\r\nimport { A } from 'components/Text';\r\nimport { Button } from 'components/Form';\r\nimport Avatar from 'components/Avatar';\r\nimport Search from 'components/Search';\r\nimport HeaderDropDowns from './HeaderDropDowns';\r\n\r\nimport { useClickOutside } from 'hooks/useClickOutside';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { HEADER_HEIGHT } from 'constants/Layout';\r\nimport SiteInfo from 'constants/SiteInfo.json';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled(Container)`\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: ${p => p.theme.colors.white};\r\n  z-index: ${p => p.theme.zIndex.md};\r\n  height: ${HEADER_HEIGHT}px;\r\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    z-index: ${p => p.theme.zIndex.md};\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: ${HEADER_HEIGHT}px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n\r\n  @media (min-width: ${p => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\r\n    width: ${p => p.theme.screen.lg};\r\n  }\r\n`;\r\n\r\nconst LeftSide = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Hamburger = styled.div`\r\n  cursor: pointer;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Logo = styled(A)`\r\n  display: none;\r\n  color: ${p => p.theme.colors.primary.main};\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n  font-size: ${p => p.theme.font.size.sm};\r\n\r\n  &:hover {\r\n    color: ${p => p.theme.colors.primary.main};\r\n  }\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst RightSide = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst countCSS = css`\r\n  top: -6px;\r\n  position: absolute;\r\n  height: 22px;\r\n  width: 22px;\r\n  padding: 2px;\r\n  letter-spacing: -1px;\r\n  border-radius: 50%;\r\n  color: ${p => p.theme.colors.white};\r\n  background-color: ${p => p.theme.colors.error.main};\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst NotificationCount = styled.span`\r\n  ${countCSS};\r\n  right: 54px;\r\n`;\r\n\r\nconst MessageCount = styled.span`\r\n  ${countCSS};\r\n  right: 100px;\r\n`;\r\n\r\n/**\r\n * Header of the App when user is authenticated\r\n */\r\nconst Header = ({ location, toggleSideBar }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(null);\r\n  const [dropdownData, setDropdownData] = useState([]);\r\n\r\n  const messageRef = useRef(null);\r\n  const notificationRef = useRef(null);\r\n  const userRef = useRef(null);\r\n\r\n  const closeOnClickOutside = () => {\r\n    if (dropdownOpen) {\r\n      closeDropDown();\r\n    }\r\n  };\r\n\r\n  useClickOutside(messageRef, closeOnClickOutside);\r\n  useClickOutside(notificationRef, closeOnClickOutside);\r\n  useClickOutside(userRef, closeOnClickOutside);\r\n\r\n  const closeDropDown = () => {\r\n    setDropdownOpen(null);\r\n    setDropdownData([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => closeDropDown();\r\n  }, [location.pathname]);\r\n\r\n  const handleIconClick = dropdownType => {\r\n    if (dropdownOpen) {\r\n      closeDropDown();\r\n    } else {\r\n      if (dropdownType === 'NOTIFICATION') {\r\n        setDropdownData(auth.user.newNotifications);\r\n      } else if (dropdownType === 'MESSAGE') {\r\n        setDropdownData(auth.user.newConversations);\r\n      }\r\n\r\n      setDropdownOpen(dropdownType);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <Wrapper>\r\n        <LeftSide>\r\n          <Hamburger onClick={toggleSideBar}>\r\n            <MenuIcon />\r\n          </Hamburger>\r\n\r\n          <Logo to={Routes.HOME}>{SiteInfo.name}</Logo>\r\n\r\n          <Spacing left=\"sm\" right=\"md\">\r\n            <Search location={location} placeholder=\"Recherche\" />\r\n          </Spacing>\r\n        </LeftSide>\r\n\r\n        <RightSide>\r\n          <Spacing right=\"md\">\r\n            <Button ghost onClick={() => handleIconClick('MESSAGE')}>\r\n              {auth.user.newConversations.length > 0 && (\r\n                <MessageCount>{auth.user.newConversations.length}</MessageCount>\r\n              )}\r\n\r\n              <EnvelopeOpenIcon />\r\n            </Button>\r\n          </Spacing>\r\n\r\n          <Spacing right=\"md\">\r\n            <Button ghost onClick={() => handleIconClick('NOTIFICATION')}>\r\n              {auth.user.newNotifications.length > 0 && (\r\n                <NotificationCount>\r\n                  {auth.user.newNotifications.length}\r\n                </NotificationCount>\r\n              )}\r\n              <NotificationIcon />\r\n            </Button>\r\n          </Spacing>\r\n\r\n          <Button ghost onClick={() => handleIconClick('USER')}>\r\n            <Avatar image={auth.user.image} />\r\n          </Button>\r\n        </RightSide>\r\n\r\n        <HeaderDropDowns\r\n          messageRef={messageRef}\r\n          notificationRef={notificationRef}\r\n          userRef={userRef}\r\n          dropdownOpen={dropdownOpen}\r\n          dropdownData={dropdownData}\r\n          closeDropDown={closeDropDown}\r\n        />\r\n      </Wrapper>\r\n    </Root>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  toggleSideBar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(Header);\r\n","/**\r\n * Layout size constants\r\n */\r\n\r\nexport const SIDEBAR_DESKTOP_WIDTH = 180;\r\n\r\nexport const SIDEBAR_MOBILE_WIDTH = 240;\r\n\r\nexport const USER_SUGGESTIONS_WIDTH = 240;\r\n\r\nexport const HEADER_HEIGHT = 60;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { A, H1, H2 } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport { NotFoundIcon } from 'components/icons';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: ${p => p.theme.spacing.lg};\r\n  padding: 0 ${p => p.theme.spacing.sm};\r\n  text-align: center;\r\n`;\r\n\r\n/**\r\n * Component for displaying when we couldn't find the page\r\n */\r\nconst NotFound = () => (\r\n  <Root>\r\n    <H1>Oops!</H1>\r\n\r\n    <Spacing top=\"sm\" bottom=\"md\">\r\n      <H2>We can't seem to find the page you're looking for.</H2>\r\n    </Spacing>\r\n\r\n    <NotFoundIcon width=\"100\" />\r\n\r\n    <Spacing bottom=\"md\" />\r\n\r\n    <A to={Routes.HOME}>Go back to Home Page</A>\r\n  </Root>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { NavLink, generatePath } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport {\r\n  ExploreIcon,\r\n  NotificationIcon,\r\n  HomeIcon,\r\n  PeopleIcon,\r\n  EnvelopeIcon,\r\n} from 'components/icons';\r\n\r\nconst Link = styled(NavLink)`\r\n  text-decoration: none;\r\n  transition: color 0.1s;\r\n  color: ${p => p.theme.colors.text.primary};\r\n  display: block;\r\n  padding-left: ${p => p.theme.spacing.xs};\r\n\r\n  &:hover,\r\n  &.selected {\r\n    color: ${p => p.theme.colors.primary.main};\r\n    background-color: ${p => p.theme.colors.grey[100]};\r\n\r\n    svg path {\r\n      fill: ${p => p.theme.colors.primary.main};\r\n    }\r\n\r\n    @media (min-width: ${p => p.theme.screen.md}) {\r\n      background-color: ${p => p.theme.colors.white};\r\n    }\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  line-height: 40px;\r\n  font-size: ${p => p.theme.font.size.xs};\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  margin-left: ${p => p.theme.spacing.sm};\r\n`;\r\n\r\n/**\r\n * Navigation component used in SideBar\r\n */\r\nconst Navigation = () => {\r\n  return (\r\n    <List>\r\n      <Link exact activeClassName=\"selected\" to={Routes.HOME}>\r\n        <ListItem>\r\n          <HomeIcon />\r\n          <Name>Acceuil</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link exact activeClassName=\"selected\" to={Routes.EXPLORE}>\r\n        <ListItem>\r\n          <ExploreIcon width={20} />\r\n          <Name>Explore</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link exact activeClassName=\"selected\" to={Routes.PEOPLE}>\r\n        <ListItem>\r\n          <PeopleIcon />\r\n          <Name>People</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link exact activeClassName=\"selected\" to={Routes.NOTIFICATIONS}>\r\n        <ListItem>\r\n          <NotificationIcon width={18} />\r\n          <Name>Notifications</Name>\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link\r\n        exact\r\n        activeClassName=\"selected\"\r\n        to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\r\n      >\r\n        <ListItem>\r\n          <EnvelopeIcon width={18} />\r\n          <Name>Messages</Name>\r\n        </ListItem>\r\n      </Link>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { generatePath, withRouter, NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport Navigation from './Navigation';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport {\r\n  SIDEBAR_DESKTOP_WIDTH,\r\n  SIDEBAR_MOBILE_WIDTH,\r\n  HEADER_HEIGHT,\r\n} from 'constants/Layout';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  padding-top: ${HEADER_HEIGHT + 40}px;\r\n  height: 100%;\r\n  width: ${SIDEBAR_MOBILE_WIDTH}px;\r\n  transition: margin-left 0.2s ease-in-out;\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n  z-index: ${p => p.theme.zIndex.sm};\r\n  background-color: ${p => p.theme.colors.white};\r\n  border-right: 1px solid ${p => p.theme.colors.border.main};\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    padding-top: 0;\r\n    position: sticky;\r\n    top: 100px;\r\n    margin-left: ${p => (p.isOpen ? 0 : `-${SIDEBAR_DESKTOP_WIDTH}px`)};\r\n    flex-basis: ${SIDEBAR_DESKTOP_WIDTH}px;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n    border: 0;\r\n    background-color: transparent;\r\n  }\r\n\r\n  @media (max-width: ${p => p.theme.screen.md}) {\r\n    margin-left: ${p => (p.isOpen ? 0 : `-${SIDEBAR_MOBILE_WIDTH}px`)};\r\n  }\r\n`;\r\n\r\nconst User = styled(NavLink)`\r\n  text-decoration: none;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: ${p => p.theme.spacing.xs};\r\n  border: 1px solid transparent;\r\n\r\n  &:hover,\r\n  &.selected {\r\n    background-color: ${p => p.theme.colors.grey[100]};\r\n\r\n    @media (min-width: ${p => p.theme.screen.md}) {\r\n      background-color: ${p => p.theme.colors.white};\r\n    }\r\n  }\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n  color: ${p =>\r\n    p.active ? p.theme.colors.primary.main : p.theme.colors.text.primary};\r\n`;\r\n\r\n/**\r\n * Displays left side bar\r\n */\r\nconst SideBar = ({ location, isOpen, sideBarRef }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const isAuthUsersProfilePage =\r\n    auth.user.username === location.pathname.substring(1);\r\n\r\n  return (\r\n    <Root isOpen={isOpen} ref={sideBarRef}>\r\n      <User\r\n        exact\r\n        to={generatePath(Routes.USER_PROFILE, { username: auth.user.username })}\r\n        activeClassName=\"selected\"\r\n      >\r\n        <Avatar image={auth.user.image} size={20} />\r\n\r\n        <Spacing left=\"xxs\">\r\n          <FullName active={isAuthUsersProfilePage}>\r\n            {auth.user.fullName}\r\n          </FullName>\r\n        </Spacing>\r\n      </User>\r\n\r\n      <Spacing top=\"sm\" />\r\n\r\n      <Navigation />\r\n    </Root>\r\n  );\r\n};\r\n\r\nSideBar.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withRouter(SideBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { matchPath } from 'react-router';\r\nimport { generatePath } from 'react-router-dom';\r\nimport { Query } from 'react-apollo';\r\n\r\nimport { Loading } from 'components/Loading';\r\nimport { H3, A } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { USER_SUGGESTIONS } from 'graphql/user';\r\n\r\nimport { USER_SUGGESTIONS_WIDTH, HEADER_HEIGHT } from 'constants/Layout';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  display: none;\r\n  background-color: ${p => p.theme.colors.white};\r\n  border: 1px solid ${p => p.theme.colors.border.main};\r\n  position: sticky;\r\n  top: ${HEADER_HEIGHT + 40}px;\r\n  right: 0;\r\n  height: 100%;\r\n  width: ${USER_SUGGESTIONS_WIDTH}px;\r\n  padding: ${p => p.theme.spacing.sm};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  padding: 0;\r\n  padding-top: ${p => p.theme.spacing.xs};\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  list-style-type: none;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: ${p => p.theme.spacing.sm};\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n  color: ${p =>\r\n    p.active ? p.theme.colors.primary.main : p.theme.colors.text.primary};\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  color: ${p => p.theme.colors.text.hint};\r\n`;\r\n\r\n/**\r\n * Displays user suggestions\r\n */\r\nconst UserSuggestions = ({ pathname }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const hideUserSuggestions = matchPath(pathname, {\r\n    path: [Routes.MESSAGES, Routes.PEOPLE, Routes.EXPLORE, Routes.USER_PROFILE],\r\n  });\r\n\r\n  if (hideUserSuggestions) return null;\r\n\r\n  return (\r\n    <Query query={USER_SUGGESTIONS} variables={{ userId: auth.user.id }}>\r\n      {({ data, loading }) => {\r\n        if (loading)\r\n          return (\r\n            <Root>\r\n              <Loading />\r\n            </Root>\r\n          );\r\n\r\n        if (!data.suggestPeople.length > 0) {\r\n          return null;\r\n        }\r\n\r\n        return (\r\n          <Root>\r\n            <H3>Des suggestions pour vous</H3>\r\n\r\n            <List>\r\n              {data.suggestPeople.map(user => (\r\n                <ListItem key={user.id}>\r\n                  <A\r\n                    to={generatePath(Routes.USER_PROFILE, {\r\n                      username: user.username,\r\n                    })}\r\n                  >\r\n                    <Avatar image={user.image} />\r\n                  </A>\r\n\r\n                  <Spacing left=\"xs\">\r\n                    <A\r\n                      to={generatePath(Routes.USER_PROFILE, {\r\n                        username: user.username,\r\n                      })}\r\n                    >\r\n                      <FullName>{user.fullName}</FullName>\r\n                      <UserName>@{user.username}</UserName>\r\n                    </A>\r\n                  </Spacing>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Root>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nUserSuggestions.propTypes = {\r\n  pathname: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default UserSuggestions;\r\n","import gql from 'graphql-tag';\r\n\r\n/**\r\n * Creates a comment\r\n */\r\nexport const CREATE_COMMENT = gql`\r\n  mutation($input: CreateCommentInput!) {\r\n    createComment(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a comment\r\n */\r\nexport const DELETE_COMMENT = gql`\r\n  mutation($input: DeleteCommentInput!) {\r\n    deleteComment(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","/**\r\n * Available Notification types\r\n */\r\n\r\nexport const NotificationType = {\r\n  LIKE: 'LIKE',\r\n  FOLLOW: 'FOLLOW',\r\n  COMMENT: 'COMMENT',\r\n};\r\n","import { useApolloClient } from '@apollo/react-hooks';\r\nimport { CREATE_NOTIFICATION, DELETE_NOTIFICATION } from 'graphql/notification';\r\nimport { useStore } from 'store';\r\n\r\n/**\r\n * React hook that Creates or Deletes a notification after like, follow or comment\r\n */\r\nexport const useNotifications = () => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const client = useApolloClient();\r\n\r\n  /**\r\n   * Helper function for mutation\r\n   */\r\n  const mutate = async (mutation, variables) => {\r\n    try {\r\n      return await client.mutate({\r\n        mutation,\r\n        variables: { input: { ...variables } },\r\n      });\r\n    } catch (error) {\r\n      console.error('Error while mutating a notification', error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates a notification\r\n   */\r\n  const create = ({ user, postId, notificationType, notificationTypeId }) => {\r\n    return mutate(CREATE_NOTIFICATION, {\r\n      authorId: auth.user.id,\r\n      userId: user.id,\r\n      postId,\r\n      notificationType,\r\n      notificationTypeId,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Removes a notification\r\n   */\r\n  const remove = ({ notificationId }) =>\r\n    mutate(DELETE_NOTIFICATION, { id: notificationId });\r\n\r\n  /**\r\n   * Checks if user has already a notification and based on that Creates or Deletes a notification\r\n   */\r\n  const toggle = ({\r\n    user,\r\n    postId,\r\n    notificationType,\r\n    notificationTypeId,\r\n    hasDone,\r\n  }) => {\r\n    const type = notificationType.toLowerCase();\r\n    const isNotified = user.notifications.find(\r\n      n => n[type] && hasDone && n[type].id === hasDone.id\r\n    );\r\n    const notificationId = isNotified ? isNotified.id : null;\r\n    const operation = notificationId ? 'delete' : 'create';\r\n    const options = {\r\n      create: {\r\n        mutation: CREATE_NOTIFICATION,\r\n        variables: {\r\n          authorId: auth.user.id,\r\n          userId: user.id,\r\n          postId,\r\n          notificationType,\r\n          notificationTypeId,\r\n        },\r\n      },\r\n      delete: {\r\n        mutation: DELETE_NOTIFICATION,\r\n        variables: { id: notificationId },\r\n      },\r\n    };\r\n\r\n    return mutate(options[operation].mutation, options[operation].variables);\r\n  };\r\n\r\n  return { create, remove, toggle };\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Mutation, withApollo } from 'react-apollo';\r\n\r\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\r\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from 'graphql/post';\r\nimport { CREATE_COMMENT } from 'graphql/comment';\r\n\r\nimport { Textarea, Button } from './Form';\r\n\r\nimport { NotificationType } from 'constants/NotificationType';\r\n\r\nimport { useNotifications } from 'hooks/useNotifications';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n`;\r\n\r\n/**\r\n * Creates a comment for a post\r\n */\r\nconst CreateComment = ({ post, focus }) => {\r\n  const [{ auth }] = useStore();\r\n  const notification = useNotifications();\r\n  const [comment, setComment] = useState('');\r\n  const buttonEl = useRef(null);\r\n  const TextareaEl = useRef(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      focus && TextareaEl.current.focus();\r\n    },\r\n    [focus]\r\n  );\r\n\r\n  const handleSubmit = async (e, createComment) => {\r\n    e.preventDefault();\r\n    const { data } = await createComment();\r\n    setComment('');\r\n\r\n    // Create notification on comment\r\n    if (auth.user.id !== post.author.id) {\r\n      notification.create({\r\n        user: post.author,\r\n        postId: post.id,\r\n        notificationType: NotificationType.COMMENT,\r\n        notificationTypeId: data.createComment.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onEnterPress = e => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      buttonEl.current.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={CREATE_COMMENT}\r\n      variables={{ input: { comment, author: auth.user.id, postId: post.id } }}\r\n      refetchQueries={() => [\r\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n        { query: GET_USER, variables: { username: auth.user.username } },\r\n        { query: GET_AUTH_USER },\r\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n        { query: GET_POST, variables: { id: post.id } },\r\n      ]}\r\n    >\r\n      {(createComment, { loading }) => (\r\n        <Form onSubmit={e => handleSubmit(e, createComment)}>\r\n          <Textarea\r\n            onChange={e => setComment(e.target.value)}\r\n            value={comment}\r\n            placeholder=\"Ajouter un commentaire...\"\r\n            onKeyDown={onEnterPress}\r\n            ref={TextareaEl}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color={comment ? 'primary.main' : 'grey[500]'}\r\n            weight=\"bold\"\r\n            text\r\n            ref={buttonEl}\r\n            disabled={!comment || loading}\r\n          >\r\n            Post\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nCreateComment.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  focus: PropTypes.bool,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withApollo(CreateComment);\r\n","import gql from 'graphql-tag';\r\n\r\n/**\r\n * Creates a following between two users\r\n */\r\nexport const CREATE_FOLLOW = gql`\r\n  mutation($input: CreateFollowInput!) {\r\n    createFollow(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * deletes a following\r\n */\r\nexport const DELETE_FOLLOW = gql`\r\n  mutation($input: DeleteFollowInput!) {\r\n    deleteFollow(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Mutation } from 'react-apollo';\r\nimport styled from 'styled-components';\r\n\r\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\r\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\r\nimport { CREATE_FOLLOW, DELETE_FOLLOW } from 'graphql/follow';\r\n\r\nimport { NotificationType } from 'constants/NotificationType';\r\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { useNotifications } from 'hooks/useNotifications';\r\n\r\nconst Button = styled.button`\r\n  height: 27px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n  transition: background-color 0.2s, border-color 0.1s;\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  color: ${p => !p.isFollowing && p.theme.colors.white};\r\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xs};\r\n  border: ${p =>\r\n    p.isFollowing ? `1px solid ${p.theme.colors.border.main}` : '0'};\r\n  background-color: ${p =>\r\n    p.isFollowing ? 'transparent' : p.theme.colors.primary.main};\r\n\r\n  &:hover {\r\n    border-color: ${p => p.theme.colors.border.dark};\r\n  }\r\n`;\r\n\r\n/**\r\n * Component for rendering follow button\r\n */\r\nconst Follow = ({ user }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [{ auth }] = useStore();\r\n  const notification = useNotifications();\r\n  const isFollowing = auth.user.following.find(f => f.user === user.id);\r\n\r\n  const handleClickFollow = async mutate => {\r\n    setLoading(true);\r\n    const { data } = await mutate();\r\n\r\n    // Create or Delete mutation for follow\r\n    if (auth.user.id === user.id) return setLoading(false);\r\n    await notification.toggle({\r\n      user,\r\n      hasDone: isFollowing,\r\n      notificationType: NotificationType.FOLLOW,\r\n      notificationTypeId: data.createFollow ? data.createFollow.id : null,\r\n    });\r\n    setLoading(false);\r\n  };\r\n\r\n  // Detect which mutation to use\r\n  const operation = isFollowing ? 'delete' : 'create';\r\n  const options = {\r\n    create: {\r\n      mutation: CREATE_FOLLOW,\r\n      variables: { userId: user.id, followerId: auth.user.id },\r\n    },\r\n    delete: {\r\n      mutation: DELETE_FOLLOW,\r\n      variables: { id: isFollowing ? isFollowing.id : null },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={options[operation].mutation}\r\n      variables={{ input: { ...options[operation].variables } }}\r\n      refetchQueries={() => [\r\n        { query: GET_AUTH_USER },\r\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n        {\r\n          query: GET_FOLLOWED_POSTS,\r\n          variables: {\r\n            userId: auth.user.id,\r\n            skip: 0,\r\n            limit: HOME_PAGE_POSTS_LIMIT,\r\n          },\r\n        },\r\n        { query: GET_USER, variables: { username: user.username } },\r\n      ]}\r\n    >\r\n      {mutate => {\r\n        return (\r\n          <Button\r\n            onClick={() => handleClickFollow(mutate)}\r\n            disabled={loading}\r\n            isFollowing={isFollowing}\r\n          >\r\n            {isFollowing ? 'Following' : 'Follow'}\r\n          </Button>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nFollow.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Follow;\r\n","/**\r\n * Data limit constants for infinite scroll\r\n */\r\n\r\nexport const HOME_PAGE_POSTS_LIMIT = 6;\r\n\r\nexport const EXPLORE_PAGE_POSTS_LIMIT = 15;\r\n\r\nexport const PEOPLE_PAGE_USERS_LIMIT = 15;\r\n\r\nexport const NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT = 50;\r\n\r\nexport const PROFILE_PAGE_POSTS_LIMIT = 6;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\n\r\nimport { A } from 'components/Text';\r\nimport Follow from 'components/Follow';\r\nimport { Spacing } from 'components/Layout';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\r\n  padding: ${p => p.theme.spacing.xs};\r\n  margin-bottom: ${p => p.theme.spacing.xxs};\r\n`;\r\n\r\nconst Author = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-right: ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  max-width: 100%;\r\n  font-size: ${p => p.theme.font.size.xs};\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n`;\r\n\r\n/**\r\n * Author info for PostPopup component\r\n */\r\nconst PostPopupInfo = ({ author }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  return (\r\n    <Root>\r\n      <Author>\r\n        <A\r\n          to={generatePath(Routes.USER_PROFILE, { username: author.username })}\r\n        >\r\n          <Avatar image={author.image} />\r\n        </A>\r\n\r\n        <Spacing left=\"xs\" inline>\r\n          <A\r\n            to={generatePath(Routes.USER_PROFILE, {\r\n              username: author.username,\r\n            })}\r\n          >\r\n            <UserName>{author.fullName}</UserName>\r\n          </A>\r\n        </Spacing>\r\n      </Author>\r\n\r\n      {auth.user.id !== author.id && <Follow user={author} />}\r\n    </Root>\r\n  );\r\n};\r\n\r\nPostPopupInfo.propTypes = {\r\n  author: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostPopupInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\nimport { Mutation } from 'react-apollo';\r\n\r\nimport { CloseIcon } from 'components/icons';\r\nimport { A } from './Text';\r\nimport { Spacing } from './Layout';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\r\nimport { DELETE_COMMENT } from 'graphql/comment';\r\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from 'graphql/post';\r\n\r\nimport { useNotifications } from '../hooks/useNotifications';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst DeleteButton = styled.button`\r\n  cursor: pointer;\r\n  display: none;\r\n  background-color: transparent;\r\n  border: 0;\r\n  outline: 0;\r\n  position: absolute;\r\n  right: 7px;\r\n  top: 6px;\r\n`;\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: ${p => p.theme.spacing.xxs} 0;\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n\r\n  &:hover ${DeleteButton} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  color: ${p => p.theme.colors.primary.main};\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst CommentSection = styled.div`\r\n  position: relative;\r\n  word-wrap: break-word;\r\n  overflow: hidden;\r\n  padding: 0 ${p => p.theme.spacing.lg} ${p => p.theme.spacing.xxs}\r\n    ${p => p.theme.spacing.xs};\r\n  background-color: ${p => p.theme.colors.grey[100]};\r\n  border-radius: ${p => p.theme.radius.lg};\r\n  margin-left: ${p => p.theme.spacing.xxs};\r\n  color: ${p => p.theme.colors.text.main};\r\n`;\r\n\r\n/**\r\n * Renders comments UI\r\n */\r\nconst Comment = ({ comment, postId, postAuthor }) => {\r\n  const [{ auth }] = useStore();\r\n  const notification = useNotifications();\r\n\r\n  const handleDeleteComment = async deleteComment => {\r\n    await deleteComment();\r\n\r\n    // Delete notification after comment deletion\r\n    if (auth.user.id !== postAuthor.id) {\r\n      const isNotified = postAuthor.notifications.find(\r\n        n => n.comment && n.comment.id === comment.id\r\n      );\r\n      notification.remove({\r\n        notificationId: isNotified.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={DELETE_COMMENT}\r\n      variables={{ input: { id: comment.id } }}\r\n      refetchQueries={() => [\r\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n        { query: GET_USER, variables: { username: comment.author.username } },\r\n        { query: GET_AUTH_USER },\r\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n        { query: GET_POST, variables: { id: postId } },\r\n      ]}\r\n    >\r\n      {deleteComment => {\r\n        return (\r\n          <Root>\r\n            <A\r\n              to={generatePath(Routes.USER_PROFILE, {\r\n                username: comment.author.username,\r\n              })}\r\n            >\r\n              <Avatar image={comment.author.image} />\r\n            </A>\r\n\r\n            <CommentSection>\r\n              {comment.author.id === auth.user.id && (\r\n                <DeleteButton\r\n                  onClick={() => handleDeleteComment(deleteComment)}\r\n                >\r\n                  <CloseIcon width=\"10\" />\r\n                </DeleteButton>\r\n              )}\r\n\r\n              <Spacing top=\"xxs\" />\r\n\r\n              <Spacing inline right=\"xxs\">\r\n                <A\r\n                  to={generatePath(Routes.USER_PROFILE, {\r\n                    username: comment.author.username,\r\n                  })}\r\n                >\r\n                  <UserName>{comment.author.fullName}</UserName>\r\n                </A>\r\n              </Spacing>\r\n\r\n              {comment.comment}\r\n            </CommentSection>\r\n          </Root>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.object.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  postAuthor: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport Comment from 'components/Comment';\r\nimport { Spacing } from 'components/Layout';\r\n\r\nconst Root = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  padding-bottom: ${p => p.theme.spacing.sm};\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    max-height: 400px;\r\n  }\r\n`;\r\n\r\nconst Comments = styled.div`\r\n  max-height: ${p => (p.usedInModal ? '100%' : '350px')};\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n  box-sizing: content-box;\r\n  padding: 0 ${p => p.theme.spacing.xs};\r\n`;\r\n\r\n/**\r\n * Comments for PostPopup component\r\n */\r\nconst PostPopupComments = ({ comments, postId, postAuthor, usedInModal }) => (\r\n  <Root usedInModal={usedInModal}>\r\n    <Spacing top=\"xs\" />\r\n\r\n    <Comments usedInModal={usedInModal}>\r\n      {comments.map(comment => (\r\n        <Comment\r\n          key={comment.id}\r\n          comment={comment}\r\n          postId={postId}\r\n          postAuthor={postAuthor}\r\n        />\r\n      ))}\r\n    </Comments>\r\n  </Root>\r\n);\r\n\r\nPostPopupComments.propTypes = {\r\n  comments: PropTypes.array.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  postAuthor: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostPopupComments;\r\n","import gql from 'graphql-tag';\r\n\r\n/**\r\n * Creates a like\r\n */\r\nexport const CREATE_LIKE = gql`\r\n  mutation($input: CreateLikeInput!) {\r\n    createLike(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a like\r\n */\r\nexport const DELETE_LIKE = gql`\r\n  mutation($input: DeleteLikeInput!) {\r\n    deleteLike(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Mutation } from 'react-apollo';\r\n\r\nimport { LikeIcon } from 'components/icons';\r\nimport { Spacing } from './Layout';\r\nimport { Button } from './Form';\r\n\r\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\r\nimport { GET_AUTH_USER } from 'graphql/user';\r\nimport { CREATE_LIKE, DELETE_LIKE } from 'graphql/like';\r\n\r\nimport { NotificationType } from 'constants/NotificationType';\r\n\r\nimport { useNotifications } from 'hooks/useNotifications';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: ${p => p.theme.spacing.xs} 0;\r\n`;\r\n\r\n/**\r\n * Component for rendering Like button\r\n */\r\nconst Like = ({ postId, user, likes, withText, fullWidth }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [{ auth }] = useStore();\r\n\r\n  const notification = useNotifications();\r\n\r\n  const hasLiked = likes.find(\r\n    l => l.user === auth.user.id && l.post === postId\r\n  );\r\n\r\n  const handleButtonClick = async mutate => {\r\n    setLoading(true);\r\n    const { data } = await mutate();\r\n\r\n    // Create or delete notification for like\r\n    if (auth.user.id === user.id) return setLoading(false);\r\n    await notification.toggle({\r\n      user,\r\n      postId,\r\n      hasDone: hasLiked,\r\n      notificationType: NotificationType.LIKE,\r\n      notificationTypeId: data.createLike ? data.createLike.id : null,\r\n    });\r\n    setLoading(false);\r\n  };\r\n\r\n  // Detect which mutation to use\r\n  const operation = hasLiked ? 'delete' : 'create';\r\n  const options = {\r\n    create: {\r\n      mutation: CREATE_LIKE,\r\n      variables: { postId, userId: auth.user.id },\r\n    },\r\n    delete: {\r\n      mutation: DELETE_LIKE,\r\n      variables: { id: hasLiked ? hasLiked.id : null },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={options[operation].mutation}\r\n      variables={{ input: { ...options[operation].variables } }}\r\n      refetchQueries={() => [\r\n        { query: GET_AUTH_USER },\r\n        { query: GET_POSTS, variables: { authUserId: auth.user.id } },\r\n        { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n      ]}\r\n    >\r\n      {mutate => {\r\n        return (\r\n          <StyledButton\r\n            fullWidth={fullWidth && fullWidth}\r\n            disabled={loading}\r\n            text\r\n            onClick={() => handleButtonClick(mutate)}\r\n            color={hasLiked && 'primary.main'}\r\n          >\r\n            <LikeIcon color={hasLiked && 'primary.main'} />\r\n            <Spacing inline left=\"xxs\" />\r\n            {withText && <b>Like</b>}\r\n          </StyledButton>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nLike.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  likes: PropTypes.array,\r\n  withText: PropTypes.bool,\r\n  fullWidth: PropTypes.bool,\r\n};\r\n\r\nexport default Like;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport Like from 'components/Like';\r\nimport { PostCommentIcon } from 'components/icons';\r\n\r\nconst Root = styled.div`\r\n  border-top: 1px solid ${p => p.theme.colors.border.main};\r\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\r\n  padding-bottom: ${p => p.theme.spacing.xs};\r\n`;\r\n\r\nconst Icons = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-left: ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Count = styled.div`\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n  padding-left: ${p => p.theme.spacing.sm};\r\n`;\r\n\r\n/**\r\n * Options for PostPopup component\r\n */\r\nconst PostPopupOptions = ({ postId, postAuthor, postLikes }) => {\r\n  return (\r\n    <Root>\r\n      <Icons>\r\n        <Like postId={postId} user={postAuthor} likes={postLikes} />\r\n        <Spacing right=\"sm\" />\r\n        <PostCommentIcon />\r\n      </Icons>\r\n\r\n      <Count>{postLikes.length} likes</Count>\r\n    </Root>\r\n  );\r\n};\r\n\r\nPostPopupOptions.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  postAuthor: PropTypes.object.isRequired,\r\n  postLikes: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PostPopupOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Query } from 'react-apollo';\r\n\r\nimport { Loading } from 'components/Loading';\r\nimport { CloseIcon } from 'components/icons';\r\nimport CreateComment from 'components/CreateComment';\r\nimport { Spacing } from 'components/Layout';\r\nimport NotFound from 'components/NotFound';\r\nimport Head from 'components/Head';\r\nimport PostPopupInfo from './PostPopupInfo';\r\nimport PostPopupComments from './PostPopupComments';\r\nimport PostPopupOptions from './PostPopupOptions';\r\n\r\nimport { GET_POST } from 'graphql/post';\r\n\r\nconst Root = styled.div`\r\n  margin: 0 auto;\r\n  margin: ${p => !p.usedInModal && p.theme.spacing.lg} 0;\r\n  box-shadow: ${p => p.theme.shadows.sm};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  z-index: ${p => (p.usedInModal ? p.theme.zIndex.xl : 'inherit')};\r\n  overflow: hidden;\r\n  width: 100%;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  max-height: ${p => (p.usedInModal ? '600px' : 'auto')};\r\n  overflow-y: ${p => (p.usedInModal ? 'auto' : 'inherit')};\r\n  max-width: 1300px;\r\n  background-color: ${p => p.theme.colors.white};\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    flex-direction: ${p => (p.usedInModal ? 'row' : 'column')};\r\n    max-height: ${p => (p.usedInModal ? '600px' : 'auto')};\r\n    overflow-y: inherit;\r\n  }\r\n`;\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: ${p => (p.usedInModal ? 'center' : 'flex-start')};\r\n  justify-content: center;\r\n  background-color: ${p => p.theme.colors.black};\r\n  width: 100%;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    max-width: 1000px;\r\n    min-width: 500px;\r\n    height: ${p => (p.usedInModal ? '600px' : 'auto')};\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  max-width: 100%;\r\n  width: ${p => !p.usedInModal && '100%'};\r\n  max-height: ${p => (p.usedInModal ? '600px' : '100%')};\r\n`;\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  width: 100%;\r\n  background-color: ${p => p.theme.colors.white};\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    width: ${p => (p.usedInModal ? '360px' : '100%')};\r\n    min-width: 360px;\r\n  }\r\n`;\r\n\r\nconst CloseModal = styled.div`\r\n  display: block;\r\n  position: fixed;\r\n  right: 20px;\r\n  top: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: ${p => p.theme.font.size.xs};\r\n  border-bottom: 1px solid ${p => p.theme.colors.border.light};\r\n  padding: ${p => p.theme.spacing.xs};\r\n`;\r\n\r\n/**\r\n * Displays post with comments and options\r\n * Meant to be used in Modal or Page component\r\n */\r\nconst PostPopup = ({ id, closeModal, usedInModal }) => {\r\n  return (\r\n    <Query query={GET_POST} variables={{ id }}>\r\n      {({ data, loading, error }) => {\r\n        if (loading) return <Loading top=\"lg\" />;\r\n        if (error) return <NotFound />;\r\n\r\n        const post = data.getPost;\r\n\r\n        return (\r\n          <Root usedInModal={usedInModal}>\r\n            <Head\r\n              title={post.title ? post.title : `${post.author.username}'s post`}\r\n            />\r\n\r\n            {closeModal && (\r\n              <CloseModal onClick={closeModal}>\r\n                <CloseIcon width=\"16\" color=\"white\" />\r\n              </CloseModal>\r\n            )}\r\n\r\n            <Container usedInModal={usedInModal}>\r\n              <Left usedInModal={usedInModal}>\r\n                <Image src={post.image} usedInModal={usedInModal} />\r\n              </Left>\r\n\r\n              <Right usedInModal={usedInModal}>\r\n                <Spacing>\r\n                  <PostPopupInfo author={post.author} />\r\n\r\n                  {post.title && <Title>{post.title}</Title>}\r\n\r\n                  <PostPopupComments\r\n                    usedInModal={usedInModal}\r\n                    comments={post.comments}\r\n                    postId={post.id}\r\n                    postAuthor={post.author}\r\n                  />\r\n                </Spacing>\r\n\r\n                <Spacing>\r\n                  <PostPopupOptions\r\n                    postId={post.id}\r\n                    postAuthor={post.author}\r\n                    postLikes={post.likes}\r\n                  />\r\n\r\n                  <CreateComment post={post} />\r\n                </Spacing>\r\n              </Right>\r\n            </Container>\r\n          </Root>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nPostPopup.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  closeModal: PropTypes.func,\r\n  usedInModal: PropTypes.bool.isRequired,\r\n};\r\n\r\nPostPopup.defaultProps = {\r\n  usedInModal: true,\r\n};\r\n\r\nexport default withRouter(PostPopup);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Button } from './Form';\r\nimport { Spacing } from './Layout';\r\n\r\nconst Root = styled.div`\r\n  margin: auto;\r\n  background-color: ${p => p.theme.colors.white};\r\n  padding: ${p => p.theme.spacing.sm};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  z-index: ${p => p.theme.zIndex.sm};\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n`;\r\n\r\n/**\r\n * Confirmation component, meant to be rendered inside Modal component\r\n */\r\nconst Confirm = ({ title, onCancel, onOk, cancelText, okText }) => (\r\n  <Root>\r\n    <div>{title}</div>\r\n\r\n    <Spacing top=\"md\" />\r\n\r\n    <ButtonContainer>\r\n      <Button onClick={onCancel}>{cancelText}</Button>\r\n\r\n      <Spacing left=\"xs\">\r\n        <Button color=\"red\" onClick={onOk}>\r\n          {okText}\r\n        </Button>\r\n      </Spacing>\r\n    </ButtonContainer>\r\n  </Root>\r\n);\r\n\r\nConfirm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n  onOk: PropTypes.func.isRequired,\r\n  cancelText: PropTypes.string.isRequired,\r\n  okText: PropTypes.string.isRequired,\r\n};\r\n\r\nConfirm.defaultProps = {\r\n  title: 'Voulez-vous vraiment supprimer cet article?',\r\n  cancelText: 'Annuler',\r\n  okText: 'Supprimer',\r\n};\r\n\r\nexport default Confirm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Confirm from './Confirm';\r\nimport { Overlay } from './Layout';\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: ${p => p.theme.spacing.sm};\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: ${p => p.theme.zIndex.lg};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    align-items: center;\r\n    top: 0;\r\n  }\r\n`;\r\n\r\n/**\r\n * Main component for rendering Modals\r\n */\r\nconst Modal = ({ children, open, onClose, type, ...otherProps }) => {\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <Root>\r\n      <Overlay onClick={onClose} />\r\n\r\n      {type === 'confirm' ? <Confirm {...otherProps} /> : children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  type: PropTypes.oneOf(['', 'confirm']),\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { generatePath } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Button } from 'components/Form';\r\nimport Follow from 'components/Follow';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n  background-color: ${p => p.theme.colors.white};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  z-index: ${p => p.theme.zIndex.lg};\r\n  box-shadow: ${p => p.theme.shadows.xl};\r\n`;\r\n\r\nconst FollowItem = styled.div`\r\n  padding: ${p => p.theme.spacing.sm} 0;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: ${p => p.theme.spacing.sm} 0;\r\n  text-align: center;\r\n  border-top: 1px solid ${p => p.theme.colors.border.main} !important;\r\n\r\n  &:first-child {\r\n    border-top: 0 !important ;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${p => p.theme.colors.grey[100]};\r\n    color: ${p => p.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\n/**\r\n * Post Card options, meant to be used in PostCard components Modal\r\n */\r\nconst PostCardOption = ({ postId, author, closeOption, deletePost }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const copyToClipboard = () => {\r\n    try {\r\n      navigator.clipboard.writeText(\r\n        `${process.env.REACT_APP_FRONTEND_URL}${generatePath(Routes.POST, {\r\n          id: postId,\r\n        })}`\r\n      );\r\n    } catch (error) {\r\n      console.error('Failed to read clipboard contents: ', error);\r\n    }\r\n\r\n    closeOption();\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      {auth.user.id !== author.id && (\r\n        <FollowItem>\r\n          <Follow user={author} />\r\n        </FollowItem>\r\n      )}\r\n\r\n      <StyledButton fullWidth text onClick={copyToClipboard}>\r\n        Copy link\r\n      </StyledButton>\r\n\r\n      {auth.user.id === author.id && (\r\n        <StyledButton fullWidth text onClick={deletePost}>\r\n          Delete post\r\n        </StyledButton>\r\n      )}\r\n\r\n      <StyledButton fullWidth onClick={closeOption} text>\r\n        Annuler\r\n      </StyledButton>\r\n    </Root>\r\n  );\r\n};\r\n\r\nPostCardOption.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  author: PropTypes.object.isRequired,\r\n  closeOption: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostCardOption;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { generatePath } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { withApollo } from 'react-apollo';\r\n\r\nimport Comment from 'components/Comment';\r\nimport CreateComment from 'components/CreateComment';\r\nimport Like from 'components/Like';\r\nimport { DotsIcon, PostCommentIcon } from 'components/icons';\r\nimport { Spacing } from 'components/Layout';\r\nimport { A, H3 } from 'components/Text';\r\nimport { Button } from 'components/Form';\r\nimport PostCardOption from 'components/PostCard/PostCardOption';\r\nimport Modal from 'components/Modal';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport { GET_FOLLOWED_POSTS, DELETE_POST } from 'graphql/post';\r\nimport { GET_AUTH_USER } from 'graphql/user';\r\nimport { GET_USER_POSTS } from 'graphql/user';\r\n\r\nimport {\r\n  HOME_PAGE_POSTS_LIMIT,\r\n  PROFILE_PAGE_POSTS_LIMIT,\r\n} from 'constants/DataLimit';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport { timeAgo } from 'utils/date';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  padding-bottom: ${p => p.theme.spacing.xs};\r\n  background-color: ${p => p.theme.colors.white};\r\n  border: 1px solid ${p => p.theme.colors.border.main};\r\n`;\r\n\r\nconst TopRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst CreatedAt = styled.div`\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n  color: ${p => p.theme.colors.text.hint};\r\n  border-bottom: 1px solid ${p => p.theme.colors.text.secondary};\r\n  border: 0;\r\n  margin-top: 2px;\r\n`;\r\n\r\nconst Author = styled(A)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.span`\r\n  font-size: ${p => p.theme.font.size.xs};\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n  color: ${p => p.theme.colors.primary.main};\r\n`;\r\n\r\nconst Poster = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  max-height: 700px;\r\n  object-fit: cover;\r\n  cursor: pointer;\r\n  margin-bottom: ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst BottomRow = styled.div`\r\n  overflow: hidden;\r\n`;\r\n\r\nconst CountAndIcons = styled.div`\r\n  padding: 0 ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Count = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-bottom: ${p => p.theme.spacing.xs};\r\n  font-size: ${p => p.theme.font.size.xs};\r\n  color: ${p => p.theme.colors.text.secondary};\r\n`;\r\n\r\nconst Icons = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-top: 1px solid ${p => p.theme.colors.border.main};\r\n`;\r\n\r\nconst Comments = styled.div`\r\n  padding: 0 ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0;\r\n  padding-left: 4px;\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n`;\r\n\r\nconst CommentLine = styled.div`\r\n  margin-bottom: 5px;\r\n  border-top: 1px solid ${p => p.theme.colors.border.main};\r\n`;\r\n\r\n/**\r\n * Component for rendering user post\r\n */\r\nconst PostCard = ({\r\n  author,\r\n  imagePublicId,\r\n  comments,\r\n  title,\r\n  createdAt,\r\n  image,\r\n  likes,\r\n  postId,\r\n  openModal,\r\n  client,\r\n}) => {\r\n  const [{ auth }] = useStore();\r\n  const [isCommentOpen, setIsCommentOpen] = useState(false);\r\n  const [isOptionOpen, setIsOptionOpen] = useState(false);\r\n\r\n  const toggleCreateComment = () => {\r\n    setIsCommentOpen(true);\r\n  };\r\n\r\n  const toggleComment = () => {\r\n    setIsCommentOpen(!isCommentOpen);\r\n  };\r\n\r\n  const closeOption = () => setIsOptionOpen(false);\r\n\r\n  const openOption = () => setIsOptionOpen(true);\r\n\r\n  const deletePost = async () => {\r\n    try {\r\n      await client.mutate({\r\n        mutation: DELETE_POST,\r\n        variables: { input: { id: postId, imagePublicId } },\r\n        refetchQueries: () => [\r\n          {\r\n            query: GET_FOLLOWED_POSTS,\r\n            variables: {\r\n              userId: auth.user.id,\r\n              skip: 0,\r\n              limit: HOME_PAGE_POSTS_LIMIT,\r\n            },\r\n          },\r\n          { query: GET_AUTH_USER },\r\n          {\r\n            query: GET_USER_POSTS,\r\n            variables: {\r\n              username: auth.user.username,\r\n              skip: 0,\r\n              limit: PROFILE_PAGE_POSTS_LIMIT,\r\n            },\r\n          },\r\n        ],\r\n      });\r\n    } catch (err) {}\r\n\r\n    setIsOptionOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Root>\r\n        <Modal onClose={closeOption} open={isOptionOpen}>\r\n          <PostCardOption\r\n            postId={postId}\r\n            closeOption={closeOption}\r\n            author={author}\r\n            deletePost={deletePost}\r\n          />\r\n        </Modal>\r\n\r\n        <TopRow>\r\n          <Author\r\n            to={generatePath(Routes.USER_PROFILE, {\r\n              username: author.username,\r\n            })}\r\n          >\r\n            <Avatar image={author.image} />\r\n\r\n            <Spacing left=\"xs\">\r\n              <Name>{author.fullName}</Name>\r\n              <CreatedAt>{timeAgo(createdAt)}</CreatedAt>\r\n            </Spacing>\r\n          </Author>\r\n\r\n          <Button ghost onClick={openOption}>\r\n            <DotsIcon />\r\n          </Button>\r\n        </TopRow>\r\n\r\n        <Spacing left=\"sm\" bottom=\"sm\" top=\"xs\">\r\n          <H3>{title}</H3>\r\n        </Spacing>\r\n\r\n        {image && <Poster src={image} onClick={openModal} />}\r\n\r\n        <BottomRow>\r\n          <CountAndIcons>\r\n            <Count>\r\n              {likes.length} likes\r\n              <Spacing />\r\n              <StyledButton onClick={toggleComment} text>\r\n                {comments.length} comments\r\n              </StyledButton>\r\n            </Count>\r\n\r\n            <Icons>\r\n              <Like\r\n                fullWidth\r\n                withText\r\n                user={author}\r\n                postId={postId}\r\n                likes={likes}\r\n              />\r\n\r\n              <Button fullWidth text onClick={toggleCreateComment}>\r\n                <PostCommentIcon /> <Spacing inline left=\"xxs\" /> <b>Comment</b>\r\n              </Button>\r\n            </Icons>\r\n          </CountAndIcons>\r\n\r\n          {isCommentOpen && (\r\n            <>\r\n              <Spacing top=\"xs\">\r\n                <CommentLine />\r\n                <CreateComment\r\n                  post={{ id: postId, author }}\r\n                  focus={isCommentOpen}\r\n                />\r\n              </Spacing>\r\n\r\n              {comments.length > 0 && <CommentLine />}\r\n\r\n              <Comments>\r\n                {comments.map(comment => (\r\n                  <Comment\r\n                    key={comment.id}\r\n                    comment={comment}\r\n                    postId={postId}\r\n                    postAuthor={author}\r\n                  />\r\n                ))}\r\n              </Comments>\r\n            </>\r\n          )}\r\n        </BottomRow>\r\n      </Root>\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  author: PropTypes.object.isRequired,\r\n  imagePublicId: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  image: PropTypes.string,\r\n  likes: PropTypes.array.isRequired,\r\n  comments: PropTypes.array,\r\n  createdAt: PropTypes.string.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withApollo(PostCard);\r\n","import { useEffect, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { set, get, uniqBy } from 'lodash';\r\n\r\n/**\r\n * Component that adds Infinite scroll functionality to UI\r\n */\r\nconst InfiniteScroll = ({\r\n  data,\r\n  dataKey,\r\n  fetchMore,\r\n  variables,\r\n  count,\r\n  children,\r\n}) => {\r\n  const handleScroll = useMemo(\r\n    () => async () => {\r\n      const loadMore = () => {\r\n        return fetchMore({\r\n          variables: { ...variables, skip: data.length },\r\n          updateQuery: (prev, { fetchMoreResult }) => {\r\n            const previousData = get(prev, dataKey);\r\n            const fetchMoreData = get(fetchMoreResult, dataKey);\r\n            return set(\r\n              prev,\r\n              dataKey,\r\n              uniqBy([...previousData, ...fetchMoreData], 'id')\r\n            );\r\n          },\r\n        });\r\n      };\r\n\r\n      const windowHeight = window.innerHeight;\r\n      const scrollTop = document.documentElement.scrollTop;\r\n      const offsetHeight = document.documentElement.offsetHeight;\r\n      const scrolled =\r\n        windowHeight + scrollTop > offsetHeight - offsetHeight / 3;\r\n\r\n      // Stop event listener if all the data has been loaded\r\n      if (data.length >= count) {\r\n        window.removeEventListener('scroll', handleScroll);\r\n        return;\r\n      }\r\n\r\n      // Load more data if user has scrolled to bottom and if there's still data in db to display\r\n      if (scrolled) {\r\n        window.removeEventListener('scroll', handleScroll);\r\n        loadMore();\r\n      }\r\n    },\r\n    [count, data.length, dataKey, fetchMore, variables]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      window.addEventListener('scroll', handleScroll);\r\n\r\n      return () => window.removeEventListener('scroll', handleScroll);\r\n    },\r\n    [handleScroll]\r\n  );\r\n\r\n  return children(data);\r\n};\r\n\r\nInfiniteScroll.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  dataKey: PropTypes.string.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  fetchMore: PropTypes.func.isRequired,\r\n  variables: PropTypes.object.isRequired,\r\n  children: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InfiniteScroll;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: ${p => p.width && `${p.width}px`};\r\n  height: ${p => p.height && `${p.height}px`};\r\n  display: ${p => p.inline && `inline-block`};\r\n  margin-top: ${p => p.theme.spacing[p.top]};\r\n  margin-left: ${p => p.theme.spacing[p.left]};\r\n  margin-right: ${p => p.theme.spacing[p.right]};\r\n  margin-bottom: ${p => p.theme.spacing[p.bottom]};\r\n  background-color: ${p => p.theme.colors.grey[200]};\r\n  border-radius: ${p =>\r\n    p.radius ? p.theme.radius[p.radius] : p.theme.radius.sm};\r\n`;\r\n\r\n/**\r\n * Renders an UI block to inform a user, that content will be shown here after loading\r\n */\r\nconst Skeleton = ({\r\n  count,\r\n  width,\r\n  height,\r\n  inline,\r\n  top,\r\n  right,\r\n  bottom,\r\n  left,\r\n  radius,\r\n}) => {\r\n  const loopSkeleton = () => {\r\n    let skeleton = [];\r\n    for (let i = 0; i < count; i++) {\r\n      skeleton.push(\r\n        <Container\r\n          key={i}\r\n          top={top}\r\n          left={left}\r\n          right={right}\r\n          width={width}\r\n          height={height}\r\n          inline={inline}\r\n          bottom={bottom}\r\n          radius={radius}\r\n        />\r\n      );\r\n    }\r\n    return skeleton;\r\n  };\r\n\r\n  return loopSkeleton();\r\n};\r\n\r\nSkeleton.propTypes = {\r\n  inline: PropTypes.bool,\r\n  count: PropTypes.number,\r\n  width: PropTypes.number,\r\n  left: PropTypes.string,\r\n  top: PropTypes.string,\r\n  right: PropTypes.string,\r\n  bottom: PropTypes.string,\r\n  height: PropTypes.number,\r\n};\r\n\r\nSkeleton.defaultProps = {\r\n  count: 1,\r\n};\r\n\r\nexport default Skeleton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport { UploadImageIcon } from 'components/icons';\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 9px 14px;\r\n  cursor: pointer;\r\n  transition: background-color 0.1s;\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n  border-radius: ${p => p.theme.radius.lg};\r\n  background-color: ${p => p.theme.colors.grey[100]};\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n\r\n  &:hover {\r\n    background-color: ${p => p.theme.colors.grey[300]};\r\n  }\r\n`;\r\n\r\n/**\r\n * Component for uploading post image\r\n */\r\nconst PostImageUpload = ({ handleChange, label }) => (\r\n  <>\r\n    <Input\r\n      name=\"image\"\r\n      onChange={handleChange}\r\n      type=\"file\"\r\n      id=\"post-image\"\r\n      accept=\"image/x-png,image/jpeg\"\r\n    />\r\n\r\n    <Label htmlFor=\"post-image\">\r\n      <UploadImageIcon />\r\n\r\n      {label && <Spacing left=\"xs\">{label}</Spacing>}\r\n    </Label>\r\n  </>\r\n);\r\n\r\nPostImageUpload.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string,\r\n};\r\n\r\nexport default PostImageUpload;\r\n","/**\r\n * Maximum image size constants when uploading\r\n */\r\n\r\nexport const MAX_POST_IMAGE_SIZE = 3000000;\r\n\r\nexport const MAX_USER_COVER_IMAGE_SIZE = 5000000;\r\n\r\nexport const MAX_USER_PROFILE_IMAGE_SIZE = 2000000;\r\n","import { useStore } from 'store';\r\nimport { SET_MESSAGE } from 'store/message';\r\nimport { MessageType } from 'constants/MessageType';\r\n\r\n/**\r\n * React hook for dispatching global messages\r\n */\r\nexport const useGlobalMessage = () => {\r\n  const [, dispatch] = useStore();\r\n\r\n  const dispatchAction = (text, messageType, autoClose) => {\r\n    dispatch({\r\n      type: SET_MESSAGE,\r\n      payload: {\r\n        type: messageType,\r\n        text: text,\r\n        autoClose,\r\n      },\r\n    });\r\n  };\r\n\r\n  const success = (text, autoClose) =>\r\n    dispatchAction(text, MessageType.SUCCESS, autoClose);\r\n\r\n  const info = (text, autoClose) =>\r\n    dispatchAction(text, MessageType.INFO, autoClose);\r\n\r\n  const warning = (text, autoClose) =>\r\n    dispatchAction(text, MessageType.WARNING, autoClose);\r\n\r\n  const error = (text, autoClose) =>\r\n    dispatchAction(text, MessageType.ERROR, autoClose);\r\n\r\n  return { success, info, warning, error };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spacing, Overlay, Container } from 'components/Layout';\r\nimport { Error } from 'components/Text';\r\nimport { Button } from 'components/Form';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport PostImageUpload from 'pages/Home/PostImageUpload';\r\n\r\nimport { GET_FOLLOWED_POSTS, CREATE_POST } from 'graphql/post';\r\nimport { GET_AUTH_USER, GET_USER_POSTS } from 'graphql/user';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { PROFILE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\nimport { MAX_POST_IMAGE_SIZE } from 'constants/ImageSize';\r\n\r\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\r\n\r\nconst Root = styled(Container)`\r\n  border: 0;\r\n  border: 1px solid ${p => p.theme.colors.border.main};\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding: ${p => p.theme.spacing.sm} 0;\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100%;\r\n  margin: 0 ${p => p.theme.spacing.xs};\r\n  padding-left: ${p => p.theme.spacing.sm};\r\n  padding-top: ${p => p.theme.spacing.xs};\r\n  border: 0;\r\n  outline: none;\r\n  resize: none;\r\n  transition: 0.1s ease-out;\r\n  height: ${p => (p.focus ? '80px' : '40px')};\r\n  font-size: ${p => p.theme.font.size.xs};\r\n  background-color: ${p => p.theme.colors.grey[100]};\r\n  border-radius: ${p => p.theme.radius.md};\r\n`;\r\n\r\nconst ImagePreviewContainer = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n  box-shadow: ${p => p.theme.shadows.sm};\r\n`;\r\n\r\nconst ImagePreview = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst Options = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  border-top: 1px solid ${p => p.theme.colors.border.main};\r\n  padding: ${p => p.theme.spacing.sm} 0;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\n/**\r\n * Component for creating a post\r\n */\r\nconst CreatePost = () => {\r\n  const [{ auth }] = useStore();\r\n  const [title, setTitle] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const message = useGlobalMessage();\r\n\r\n  const handleReset = () => {\r\n    setTitle('');\r\n    setImage('');\r\n    setIsFocused(false);\r\n    setError('');\r\n  };\r\n\r\n  const handleOnFocus = () => setIsFocused(true);\r\n\r\n  const handlePostImageUpload = e => {\r\n    const file = e.target.files[0];\r\n\r\n    if (!file) return;\r\n\r\n    if (file.size >= MAX_POST_IMAGE_SIZE) {\r\n      message.error(\r\n        `File size should be less then ${MAX_POST_IMAGE_SIZE / 1000000}MB`\r\n      );\r\n      return;\r\n    }\r\n\r\n    setImage(file);\r\n\r\n    setIsFocused(true);\r\n    e.target.value = null;\r\n  };\r\n\r\n  const handleTitleChange = e => setTitle(e.target.value);\r\n\r\n  const handleSubmit = async (e, createPost) => {\r\n    e.preventDefault();\r\n    createPost();\r\n    handleReset();\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={CREATE_POST}\r\n      variables={{ input: { title, image, authorId: auth.user.id } }}\r\n      refetchQueries={() => [\r\n        {\r\n          query: GET_FOLLOWED_POSTS,\r\n          variables: {\r\n            userId: auth.user.id,\r\n            skip: 0,\r\n            limit: HOME_PAGE_POSTS_LIMIT,\r\n          },\r\n        },\r\n        { query: GET_AUTH_USER },\r\n        {\r\n          query: GET_USER_POSTS,\r\n          variables: {\r\n            username: auth.user.username,\r\n            skip: 0,\r\n            limit: PROFILE_PAGE_POSTS_LIMIT,\r\n          },\r\n        },\r\n      ]}\r\n    >\r\n      {(createPost, { loading, error: apiError }) => {\r\n        const isShareDisabled = loading || (!loading && !image && !title);\r\n\r\n        return (\r\n          <>\r\n            {isFocused && <Overlay onClick={handleReset} />}\r\n\r\n            <Root\r\n              zIndex={isFocused ? 'md' : 'xs'}\r\n              color=\"white\"\r\n              radius=\"sm\"\r\n              padding=\"sm\"\r\n            >\r\n              <form onSubmit={e => handleSubmit(e, createPost)}>\r\n                <Wrapper>\r\n                  <Avatar image={auth.user.image} size={40} />\r\n\r\n                  <Textarea\r\n                    type=\"textarea\"\r\n                    name=\"title\"\r\n                    focus={isFocused}\r\n                    value={title}\r\n                    onFocus={handleOnFocus}\r\n                    onChange={handleTitleChange}\r\n                    placeholder=\"Ajouter un article\"\r\n                  />\r\n\r\n                  {!isFocused && (\r\n                    <PostImageUpload handleChange={handlePostImageUpload} />\r\n                  )}\r\n                </Wrapper>\r\n\r\n                {image && (\r\n                  <Spacing bottom=\"sm\">\r\n                    <ImagePreviewContainer>\r\n                      <ImagePreview src={URL.createObjectURL(image)} />\r\n                    </ImagePreviewContainer>\r\n                  </Spacing>\r\n                )}\r\n\r\n                {isFocused && (\r\n                  <Options>\r\n                    <PostImageUpload\r\n                      label=\"Photo\"\r\n                      handleChange={handlePostImageUpload}\r\n                    />\r\n\r\n                    <Buttons>\r\n                      <Button text type=\"button\" onClick={handleReset}>\r\n                        Annuler\r\n                      </Button>\r\n                      <Button disabled={isShareDisabled} type=\"submit\">\r\n                        Partager\r\n                      </Button>\r\n                    </Buttons>\r\n                  </Options>\r\n                )}\r\n\r\n                {apiError ||\r\n                  (error && (\r\n                    <Spacing top=\"xs\" bottom=\"sm\">\r\n                      <Error size=\"xs\">\r\n                        {apiError\r\n                          ? 'Une erreur c\\'est produite. Veuillez réessayer.'\r\n                          : error}\r\n                      </Error>\r\n                    </Spacing>\r\n                  ))}\r\n              </form>\r\n            </Root>\r\n          </>\r\n        );\r\n      }}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React, { useState, Fragment } from 'react';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\nimport { Query } from 'react-apollo';\r\n\r\nimport { A } from 'components/Text';\r\nimport PostPopup from 'components/PostPopup';\r\nimport Modal from 'components/Modal';\r\nimport PostCard from 'components/PostCard';\r\nimport { Spacing, Container } from 'components/Layout';\r\nimport { Loading } from 'components/Loading';\r\nimport InfiniteScroll from 'components/InfiniteScroll';\r\nimport Skeleton from 'components/Skeleton';\r\nimport CreatePost from 'components/CreatePost';\r\nimport Head from 'components/Head';\r\n\r\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Empty = styled.div`\r\n  padding: ${p => p.theme.spacing.sm};\r\n  border: 1px solid ${p => p.theme.colors.border.main};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  margin-top: ${p => p.theme.spacing.lg};\r\n  background-color: ${p => p.theme.colors.white};\r\n`;\r\n\r\nconst StyledA = styled(A)`\r\n  text-decoration: underline;\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n`;\r\n\r\n/**\r\n * Home page of the app\r\n */\r\nconst Home = () => {\r\n  const [{ auth }] = useStore();\r\n  const [modalPostId, setModalPostId] = useState(null);\r\n\r\n  const closeModal = () => {\r\n    window.history.pushState('', '', '/');\r\n    setModalPostId(null);\r\n  };\r\n\r\n  const openModal = postId => {\r\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\r\n    setModalPostId(postId);\r\n  };\r\n\r\n  const variables = {\r\n    userId: auth.user.id,\r\n    skip: 0,\r\n    limit: HOME_PAGE_POSTS_LIMIT,\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Head />\r\n\r\n      <Spacing top=\"lg\" />\r\n\r\n      <CreatePost />\r\n\r\n      <Query\r\n        query={GET_FOLLOWED_POSTS}\r\n        variables={variables}\r\n        notifyOnNetworkStatusChange\r\n      >\r\n        {({ data, loading, fetchMore, networkStatus }) => {\r\n          if (loading && networkStatus === 1) {\r\n            return (\r\n              <Skeleton\r\n                height={500}\r\n                bottom=\"lg\"\r\n                top=\"lg\"\r\n                count={HOME_PAGE_POSTS_LIMIT}\r\n              />\r\n            );\r\n          }\r\n\r\n          const { posts, count } = data.getFollowedPosts;\r\n\r\n          if (!posts.length) {\r\n            return (\r\n              <Empty>\r\n                <StyledA to={generatePath(Routes.EXPLORE)}>\r\n                  Explorer de nouveaux messages\r\n                </StyledA>{' '}\r\n                ou{' '}\r\n                <StyledA to={generatePath(Routes.PEOPLE)}>\r\n                Trouver de nouvelles personnes\r\n                </StyledA>\r\n              </Empty>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <InfiniteScroll\r\n              data={posts}\r\n              dataKey=\"getFollowedPosts.posts\"\r\n              count={parseInt(count)}\r\n              variables={variables}\r\n              fetchMore={fetchMore}\r\n            >\r\n              {data => {\r\n                const showNextLoading =\r\n                  loading && networkStatus === 3 && count !== data.length;\r\n\r\n                return (\r\n                  <Fragment>\r\n                    {data.map(post => (\r\n                      <Fragment key={post.id}>\r\n                        <Modal\r\n                          open={modalPostId === post.id}\r\n                          onClose={closeModal}\r\n                        >\r\n                          <PostPopup id={post.id} closeModal={closeModal} />\r\n                        </Modal>\r\n\r\n                        <Spacing bottom=\"lg\" top=\"lg\">\r\n                          <PostCard\r\n                            author={post.author}\r\n                            imagePublicId={post.imagePublicId}\r\n                            postId={post.id}\r\n                            comments={post.comments}\r\n                            createdAt={post.createdAt}\r\n                            title={post.title}\r\n                            image={post.image}\r\n                            likes={post.likes}\r\n                            openModal={() => openModal(post.id)}\r\n                          />\r\n                        </Spacing>\r\n                      </Fragment>\r\n                    ))}\r\n\r\n                    {showNextLoading && <Loading top=\"lg\" />}\r\n                  </Fragment>\r\n                );\r\n              }}\r\n            </InfiniteScroll>\r\n          );\r\n        }}\r\n      </Query>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { withApollo } from 'react-apollo';\r\n\r\nimport { Loading } from 'components/Loading';\r\nimport { UserIcon } from 'components/icons';\r\n\r\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\r\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\r\n\r\nimport { MAX_USER_PROFILE_IMAGE_SIZE } from 'constants/ImageSize';\r\n\r\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  visibility: hidden;\r\n  border-radius: 50%;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: ${p => p.theme.colors.white};\r\n  opacity: 0;\r\n  transition: visibility 0.2s linear, opacity 0.2s linear;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: relative;\r\n  width: 180px;\r\n  height: 180px;\r\n  display: block;\r\n  overflow: hidden;\r\n  cursor: ${p => p.authUser && 'pointer'};\r\n  border-radius: 50%;\r\n  border: 4px solid ${p => p.theme.colors.border.main};\r\n  background-color: ${p => p.theme.colors.white};\r\n\r\n  &:hover ${Overlay} {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\n/**\r\n * Displays and Updates user profile image\r\n */\r\nconst ProfileImageUpload = ({\r\n  userId,\r\n  image,\r\n  imagePublicId,\r\n  username,\r\n  client,\r\n}) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const message = useGlobalMessage();\r\n\r\n  const handleImageChange = async e => {\r\n    setLoading(true);\r\n\r\n    const file = e.target.files[0];\r\n    e.target.value = '';\r\n\r\n    if (!file) return;\r\n\r\n    if (file.size >= MAX_USER_PROFILE_IMAGE_SIZE) {\r\n      setLoading(false);\r\n      message.error(\r\n        `File size should be less then ${MAX_USER_PROFILE_IMAGE_SIZE /\r\n          1000000}MB`\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await client.mutate({\r\n        mutation: UPLOAD_PHOTO,\r\n        variables: { input: { id: auth.user.id, image: file, imagePublicId } },\r\n        refetchQueries: () => [\r\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n          { query: GET_AUTH_USER },\r\n          { query: GET_USER, variables: { username: auth.user.username } },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      message.error(err.graphQLErrors[0].message);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const renderProfileImage = () => {\r\n    if (loading) {\r\n      return <Loading top=\"xl\" />;\r\n    }\r\n\r\n    return image ? (\r\n      <Image src={image} alt=\"profile\" accept=\"image/x-png,image/jpeg\" />\r\n    ) : (\r\n      <UserIcon width=\"172\" />\r\n    );\r\n  };\r\n\r\n  const authUser = auth.user.id === userId;\r\n\r\n  return (\r\n    <>\r\n      {authUser && (\r\n        <Input\r\n          name=\"image\"\r\n          type=\"file\"\r\n          id=\"image\"\r\n          accept=\"image/x-png,image/jpeg\"\r\n          onChange={handleImageChange}\r\n        />\r\n      )}\r\n\r\n      <Label authUser={authUser} htmlFor=\"image\">\r\n        {authUser && <Overlay>{image ? 'Update' : 'Upload'}</Overlay>}\r\n\r\n        {renderProfileImage()}\r\n      </Label>\r\n    </>\r\n  );\r\n};\r\n\r\nProfileImageUpload.propTypes = {\r\n  image: PropTypes.string,\r\n  imagePublicId: PropTypes.string,\r\n  userId: PropTypes.string.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withApollo(ProfileImageUpload);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { withApollo } from 'react-apollo';\r\n\r\nimport { UploadImageIcon } from 'components/icons';\r\nimport { Loading } from 'components/Loading';\r\n\r\nimport { MAX_USER_COVER_IMAGE_SIZE } from 'constants/ImageSize';\r\n\r\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\r\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\r\n\r\nimport defaultBackgroundImage from './background.jpg';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  height: 350px;\r\n  position: relative;\r\n  background-image: url(${p => (p.image ? p.image : defaultBackgroundImage)});\r\n  background-size: cover;\r\n  background-position: center;\r\n  border-bottom-left-radius: ${p => p.theme.radius.md};\r\n  border-bottom-right-radius: ${p => p.theme.radius.md};\r\n  box-shadow: ${p => p.theme.shadows.sm};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: absolute;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  left: ${p => p.theme.spacing.sm};\r\n  top: ${p => p.theme.spacing.sm};\r\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xs};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  transition: background-color 0.4s;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\n/**\r\n * Displays and Updates user Cover image\r\n */\r\nconst ProfileCoverUpload = ({\r\n  client,\r\n  coverImagePublicId,\r\n  coverImage,\r\n  userId,\r\n}) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const message = useGlobalMessage();\r\n\r\n  const handleImageChange = async e => {\r\n    setLoading(true);\r\n\r\n    const file = e.target.files[0];\r\n    e.target.value = '';\r\n\r\n    if (!file) return;\r\n\r\n    if (file.size >= MAX_USER_COVER_IMAGE_SIZE) {\r\n      message.error(\r\n        `File size should be less then ${MAX_USER_COVER_IMAGE_SIZE / 1000000}MB`\r\n      );\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await client.mutate({\r\n        mutation: UPLOAD_PHOTO,\r\n        variables: {\r\n          input: {\r\n            id: auth.user.id,\r\n            image: file,\r\n            imagePublicId: coverImagePublicId,\r\n            isCover: true,\r\n          },\r\n        },\r\n        refetchQueries: () => [\r\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n          { query: GET_AUTH_USER },\r\n          { query: GET_USER, variables: { username: auth.user.username } },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      message.error(err.graphQLErrors[0].message);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Root image={coverImage}>\r\n      <Input\r\n        name=\"coverImage\"\r\n        type=\"file\"\r\n        id=\"coverImage\"\r\n        onChange={handleImageChange}\r\n        accept=\"image/x-png,image/jpeg\"\r\n      />\r\n\r\n      {loading && <Loading top=\"xl\" size=\"xl\" />}\r\n\r\n      {auth.user.id === userId && (\r\n        <Label htmlFor=\"coverImage\">\r\n          <UploadImageIcon width=\"14\" color=\"white\" />\r\n        </Label>\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nProfileCoverUpload.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n  coverImagePublicId: PropTypes.string,\r\n  coverImage: PropTypes.string,\r\n};\r\n\r\nexport default withApollo(ProfileCoverUpload);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Link, generatePath } from 'react-router-dom';\r\nimport { useSubscription } from '@apollo/react-hooks';\r\n\r\nimport { IS_USER_ONLINE_SUBSCRIPTION } from 'graphql/user';\r\n\r\nimport { H1 } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport Follow from 'components/Follow';\r\nimport ProfileImageUpload from './ProfileImageUpload';\r\nimport ProfileCoverUpload from './ProfileCoverUpload';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProfileImage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: -140px;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-top: ${p => p.theme.spacing.sm};\r\n  position: relative;\r\n\r\n  ${H1} {\r\n    font-size: ${p => p.theme.font.size.lg};\r\n  }\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    ${H1} {\r\n      font-size: ${p => p.theme.font.size.xl};\r\n    }\r\n  }\r\n`;\r\n\r\nconst FollowAndMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-left: ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst Message = styled(Link)`\r\n  text-decoration: none;\r\n  font-size: ${p => p.theme.font.size.xs};\r\n`;\r\n\r\nconst Online = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: ${p => p.theme.colors.success};\r\n  margin-left: ${p => p.theme.spacing.sm};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  font-size: ${p => p.theme.font.size.xs};\r\n  margin-top: ${p => p.theme.spacing.sm};\r\n`;\r\n\r\nconst List = styled.div`\r\n  padding: 0 ${p => p.theme.spacing.xs};\r\n  color: ${p => p.theme.colors.grey[800]};\r\n  white-space: nowrap;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    padding: 0 ${p => p.theme.spacing.lg};\r\n  }\r\n`;\r\n\r\n/**\r\n * Renders user information in profile page\r\n */\r\nconst ProfileInfo = ({ user }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\r\n    variables: { authUserId: auth.user.id, userId: user.id },\r\n  });\r\n\r\n  let isUserOnline = user.isOnline;\r\n  if (!loading && data) {\r\n    isUserOnline = data.isUserOnline.isOnline;\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <ProfileCoverUpload\r\n        userId={user.id}\r\n        coverImage={user.coverImage}\r\n        coverImagePublicId={user.coverImagePublicId}\r\n      />\r\n\r\n      <ProfileImage>\r\n        <ProfileImageUpload\r\n          userId={user.id}\r\n          image={user.image}\r\n          imagePublicId={user.imagePublicId}\r\n          username={user.username}\r\n        />\r\n\r\n        <FullName>\r\n          <H1>{user.fullName}</H1>\r\n\r\n          {isUserOnline && auth.user.id !== user.id && <Online />}\r\n\r\n          {auth.user.id !== user.id && (\r\n            <FollowAndMessage>\r\n              <Follow user={user} />\r\n\r\n              <Spacing left=\"sm\" />\r\n              <Message to={generatePath(Routes.MESSAGES, { userId: user.id })}>\r\n                Message\r\n              </Message>\r\n            </FollowAndMessage>\r\n          )}\r\n        </FullName>\r\n      </ProfileImage>\r\n\r\n      <Info>\r\n        <List>\r\n          <b>{user.posts.length} </b> posts\r\n        </List>\r\n        <List>\r\n          <b>{user.followers.length} </b> followers\r\n        </List>\r\n        <List>\r\n          <b>{user.following.length} </b> following\r\n        </List>\r\n      </Info>\r\n    </Root>\r\n  );\r\n};\r\n\r\nProfileInfo.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { EmptyIcon } from 'components/icons';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\n/**\r\n * Component for displaying when there is no data provided\r\n */\r\nconst Empty = ({ text }) => (\r\n  <Container>\r\n    <EmptyIcon />\r\n\r\n    {text}\r\n  </Container>\r\n);\r\n\r\nEmpty.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Empty;\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Query } from 'react-apollo';\r\nimport { generatePath } from 'react-router-dom';\r\n\r\nimport Skeleton from 'components/Skeleton';\r\nimport Modal from 'components/Modal';\r\nimport PostPopup from 'components/PostPopup';\r\nimport PostCard from 'components/PostCard';\r\nimport { Spacing } from 'components/Layout';\r\nimport InfiniteScroll from 'components/InfiniteScroll';\r\nimport { Loading } from 'components/Loading';\r\nimport Empty from 'components/Empty';\r\n\r\nimport { PROFILE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\n\r\nimport { GET_USER_POSTS } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\n/**\r\n * Renders posts in profile page\r\n */\r\nconst ProfilePosts = ({ username }) => {\r\n  const [isPostPopupOpen, setIsPostPopupOpen] = useState(false);\r\n  const [modalPostId, setModalPostId] = useState('');\r\n\r\n  const openModal = postId => {\r\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\r\n    setModalPostId(postId);\r\n    setIsPostPopupOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    window.history.pushState(\r\n      '',\r\n      '',\r\n      generatePath(Routes.USER_PROFILE, { username })\r\n    );\r\n    setIsPostPopupOpen(false);\r\n  };\r\n\r\n  const variables = { username, skip: 0, limit: PROFILE_PAGE_POSTS_LIMIT };\r\n\r\n  return (\r\n    <Query\r\n      query={GET_USER_POSTS}\r\n      variables={variables}\r\n      notifyOnNetworkStatusChange\r\n    >\r\n      {({ data, loading, fetchMore, networkStatus }) => {\r\n        if (loading && networkStatus === 1) {\r\n          return (\r\n            <Skeleton\r\n              height={500}\r\n              bottom=\"lg\"\r\n              top=\"lg\"\r\n              count={PROFILE_PAGE_POSTS_LIMIT}\r\n            />\r\n          );\r\n        }\r\n\r\n        const { posts, count } = data.getUserPosts;\r\n\r\n        if (!posts.length > 0) {\r\n          return (\r\n            <Spacing bottom=\"lg\">\r\n              <Empty text=\"Pas encore de messages.\" />\r\n            </Spacing>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <InfiniteScroll\r\n            data={posts}\r\n            dataKey=\"getUserPosts.posts\"\r\n            count={parseInt(count)}\r\n            variables={variables}\r\n            fetchMore={fetchMore}\r\n          >\r\n            {data => {\r\n              return data.map((post, i) => {\r\n                const showNextLoading =\r\n                  loading && networkStatus === 3 && data.length - 1 === i;\r\n\r\n                return (\r\n                  <Fragment key={post.id}>\r\n                    {modalPostId === post.id && (\r\n                      <Modal open={isPostPopupOpen} onClose={closeModal}>\r\n                        <PostPopup id={post.id} closeModal={closeModal} />\r\n                      </Modal>\r\n                    )}\r\n\r\n                    <Spacing bottom=\"lg\">\r\n                      <PostCard\r\n                        author={post.author}\r\n                        postId={post.id}\r\n                        imagePublicId={post.imagePublicId}\r\n                        comments={post.comments}\r\n                        title={post.title}\r\n                        image={post.image}\r\n                        likes={post.likes}\r\n                        createdAt={post.createdAt}\r\n                        openModal={() => openModal(post.id)}\r\n                      />\r\n                    </Spacing>\r\n\r\n                    {showNextLoading && <Loading top=\"lg\" />}\r\n                  </Fragment>\r\n                );\r\n              });\r\n            }}\r\n          </InfiniteScroll>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nProfilePosts.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProfilePosts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Query } from 'react-apollo';\r\nimport styled from 'styled-components';\r\n\r\nimport Skeleton from 'components/Skeleton';\r\nimport { Container, Spacing } from 'components/Layout';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport CreatePost from 'components/CreatePost';\r\nimport ProfilePosts from './ProfilePosts';\r\nimport NotFound from 'components/NotFound';\r\nimport Head from 'components/Head';\r\n\r\nimport { GET_USER } from 'graphql/user';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n\r\n  @media (min-width: ${p => p.theme.screen.lg}) {\r\n    margin-left: ${p => p.theme.spacing.lg};\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\n/**\r\n * User Profile Page\r\n */\r\nconst Profile = ({ match }) => {\r\n  const [{ auth }] = useStore();\r\n  const { username } = match.params;\r\n\r\n  return (\r\n    <Root>\r\n      <Head title={username} />\r\n\r\n      <Query query={GET_USER} variables={{ username }}>\r\n        {({ data, loading, error }) => {\r\n          if (loading) {\r\n            return (\r\n              <Container padding=\"xxs\">\r\n                <Skeleton height={350} />\r\n                <Container maxWidth=\"sm\">\r\n                  <Spacing top=\"lg\" bottom=\"lg\">\r\n                    <Skeleton height={82} />\r\n                  </Spacing>\r\n                </Container>\r\n              </Container>\r\n            );\r\n          }\r\n\r\n          if (error || !data.getUser) return <NotFound />;\r\n\r\n          return (\r\n            <Container padding=\"xxs\">\r\n              <ProfileInfo user={data.getUser} />\r\n\r\n              <Container maxWidth=\"sm\">\r\n                <Spacing top=\"lg\" bottom=\"lg\">\r\n                  {username === auth.user.username && <CreatePost />}\r\n                </Spacing>\r\n\r\n                <ProfilePosts username={username} />\r\n              </Container>\r\n            </Container>\r\n          );\r\n        }}\r\n      </Query>\r\n    </Root>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(Profile);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { Spacing } from 'components/Layout';\r\nimport { LikeIcon, PostCommentIcon } from 'components/icons';\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  opacity: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: opacity 0.3s, visibility 0.3s;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  color: ${p => p.theme.colors.white};\r\n`;\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  cursor: pointer;\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  overflow: hidden;\r\n\r\n  &:hover ${Overlay} {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Photo = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-color: ${p => p.theme.colors.grey[300]};\r\n`;\r\n\r\n/**\r\n * Card component, meant to be used in Explore page\r\n */\r\nconst ExploreCard = ({ openPostPopup, image, countLikes, countComments }) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const img = new Image();\r\n    img.src = image;\r\n\r\n    img.onload = () => {\r\n      setImageLoaded(true);\r\n    };\r\n\r\n    return () => {\r\n      img.onload = null;\r\n    };\r\n  }, [image]);\r\n\r\n  return (\r\n    <Root>\r\n      <Photo style={imageLoaded ? { backgroundImage: `url(${image})` } : {}} />\r\n\r\n      <Overlay onClick={openPostPopup}>\r\n        <LikeIcon color=\"white\" />\r\n\r\n        <Spacing left=\"xs\" right=\"lg\">\r\n          {countLikes}\r\n        </Spacing>\r\n\r\n        <PostCommentIcon color=\"white\" />\r\n\r\n        <Spacing left=\"xs\">{countComments}</Spacing>\r\n      </Overlay>\r\n    </Root>\r\n  );\r\n};\r\n\r\nExploreCard.propTypes = {\r\n  openPostPopup: PropTypes.func.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  countLikes: PropTypes.number.isRequired,\r\n  countComments: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ExploreCard;\r\n","import React, { useState, Fragment } from 'react';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\nimport { Query } from 'react-apollo';\r\n\r\nimport { Container } from 'components/Layout';\r\nimport ExploreCard from './ExploreCard';\r\nimport Skeleton from 'components/Skeleton';\r\nimport PostPopup from 'components/PostPopup';\r\nimport Modal from 'components/Modal';\r\nimport InfiniteScroll from 'components/InfiniteScroll';\r\nimport Empty from 'components/Empty';\r\nimport { Loading } from 'components/Loading';\r\nimport Head from 'components/Head';\r\n\r\nimport { GET_POSTS } from 'graphql/post';\r\n\r\nimport { EXPLORE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled(Container)`\r\n  margin-top: ${p => p.theme.spacing.lg};\r\n  margin-bottom: ${p => p.theme.spacing.sm};\r\n\r\n  @media (min-width: ${p => p.theme.screen.lg}) {\r\n    margin-left: ${p => p.theme.spacing.lg};\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst PostsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(260px, 3fr));\r\n  grid-auto-rows: auto;\r\n  grid-gap: 20px;\r\n`;\r\n\r\n/**\r\n * Explore page\r\n */\r\nconst Explore = () => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const [modalPostId, setModalPostId] = useState(null);\r\n\r\n  const closeModal = () => {\r\n    window.history.pushState('', '', '/explore');\r\n    setModalPostId(null);\r\n  };\r\n\r\n  const openModal = postId => {\r\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\r\n    setModalPostId(postId);\r\n  };\r\n\r\n  const variables = {\r\n    authUserId: auth.user.id,\r\n    skip: 0,\r\n    limit: EXPLORE_PAGE_POSTS_LIMIT,\r\n  };\r\n\r\n  return (\r\n    <Root maxWidth=\"md\">\r\n      <Head title=\"Explorer de nouveaux messages et utilisateurs\" />\r\n\r\n      <Query\r\n        query={GET_POSTS}\r\n        variables={variables}\r\n        notifyOnNetworkStatusChange\r\n      >\r\n        {({ data, loading, fetchMore, networkStatus }) => {\r\n          if (loading && networkStatus === 1) {\r\n            return (\r\n              <PostsContainer>\r\n                <Skeleton height={300} count={EXPLORE_PAGE_POSTS_LIMIT} />\r\n              </PostsContainer>\r\n            );\r\n          }\r\n\r\n          const { posts, count } = data.getPosts;\r\n\r\n          if (!posts.length > 0) return <Empty text=\"No posts yet.\" />;\r\n\r\n          return (\r\n            <InfiniteScroll\r\n              data={posts}\r\n              dataKey=\"getPosts.posts\"\r\n              count={parseInt(count)}\r\n              variables={variables}\r\n              fetchMore={fetchMore}\r\n            >\r\n              {data => {\r\n                const showNextLoading =\r\n                  loading && networkStatus === 3 && count !== data.length;\r\n\r\n                return (\r\n                  <Fragment>\r\n                    <PostsContainer>\r\n                      {data.map(post => (\r\n                        <Fragment key={post.id}>\r\n                          <Modal\r\n                            open={modalPostId === post.id}\r\n                            onClose={closeModal}\r\n                          >\r\n                            <PostPopup id={post.id} closeModal={closeModal} />\r\n                          </Modal>\r\n\r\n                          <ExploreCard\r\n                            image={post.image}\r\n                            countLikes={post.likes.length}\r\n                            countComments={post.comments.length}\r\n                            openPostPopup={() => openModal(post.id)}\r\n                          />\r\n                        </Fragment>\r\n                      ))}\r\n                    </PostsContainer>\r\n\r\n                    {showNextLoading && <Loading top=\"lg\" />}\r\n                  </Fragment>\r\n                );\r\n              }}\r\n            </InfiniteScroll>\r\n          );\r\n        }}\r\n      </Query>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Explore;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { generatePath } from 'react-router-dom';\r\n\r\nimport { A } from 'components/Text';\r\nimport { Spacing } from 'components/Layout';\r\nimport Follow from 'components/Follow';\r\nimport theme from 'theme';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 280px;\r\n  background-color: white;\r\n  padding: ${p => p.theme.spacing.sm};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  border: 1px solid ${p => p.theme.colors.border.main};\r\n  transition: border-color 0.1s;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst InitialLetters = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-transform: uppercase;\r\n  color: ${p => p.theme.colors.white};\r\n  font-size: ${p => p.theme.font.size.lg};\r\n  background-color: ${p => p.color};\r\n`;\r\n\r\nconst FullName = styled.span`\r\n  max-width: 200px;\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst UserName = styled.span`\r\n  font-size: ${p => p.theme.font.size.xs};\r\n`;\r\n\r\n/**\r\n * Card component for rendering user info, meant to be used in Peoples page\r\n */\r\nconst PeopleCard = ({ user }) => {\r\n  const [color, setColor] = useState('');\r\n\r\n  const { fullName, username, image } = user;\r\n\r\n  useEffect(() => {\r\n    const { primary, secondary, success, error } = theme.colors;\r\n    const colors = [primary.main, secondary.main, success, error.main];\r\n    const randomColor = Math.floor(Math.random() * colors.length);\r\n    setColor(colors[randomColor]);\r\n  }, []);\r\n\r\n  const splitFullName = () => {\r\n    // If a fullName contains more word than two, take first two word\r\n    const splitWords = fullName\r\n      .split(' ')\r\n      .slice(0, 2)\r\n      .join(' ');\r\n\r\n    // Take only first letters from split words\r\n    const firstLetters = splitWords\r\n      .split(' ')\r\n      .map(a => a.charAt(0))\r\n      .join(' ');\r\n\r\n    return firstLetters;\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <A to={generatePath(Routes.USER_PROFILE, { username })}>\r\n        <ImageContainer>\r\n          {image ? (\r\n            <Image src={image} />\r\n          ) : (\r\n            <InitialLetters color={color}>{splitFullName()}</InitialLetters>\r\n          )}\r\n        </ImageContainer>\r\n      </A>\r\n\r\n      <Spacing top=\"sm\" bottom=\"xs\">\r\n        <A to={generatePath(Routes.USER_PROFILE, { username })}>\r\n          <FullName>{fullName}</FullName>\r\n        </A>\r\n      </Spacing>\r\n\r\n      <UserName>@{username}</UserName>\r\n\r\n      <Spacing top=\"lg\" />\r\n\r\n      <Follow user={user} />\r\n    </Root>\r\n  );\r\n};\r\n\r\nPeopleCard.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PeopleCard;\r\n","import React, { Fragment } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Container } from 'components/Layout';\r\nimport Skeleton from 'components/Skeleton';\r\nimport { Loading } from 'components/Loading';\r\nimport Empty from 'components/Empty';\r\nimport InfiniteScroll from 'components/InfiniteScroll';\r\nimport Head from 'components/Head';\r\nimport PeopleCard from './PeopleCard';\r\n\r\nimport { GET_USERS } from 'graphql/user';\r\n\r\nimport { PEOPLE_PAGE_USERS_LIMIT } from 'constants/DataLimit';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { Query } from 'react-apollo';\r\n\r\nconst Root = styled(Container)`\r\n  margin-top: ${p => p.theme.spacing.lg};\r\n\r\n  @media (min-width: ${p => p.theme.screen.lg}) {\r\n    margin-left: ${p => p.theme.spacing.lg};\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst PeopleContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(180px, 3fr));\r\n  grid-auto-rows: auto;\r\n  grid-gap: 20px;\r\n  margin-bottom: ${p => p.theme.spacing.lg};\r\n`;\r\n\r\n/**\r\n * People page\r\n */\r\nconst People = () => {\r\n  const [{ auth }] = useStore();\r\n  const variables = {\r\n    userId: auth.user.id,\r\n    skip: 0,\r\n    limit: PEOPLE_PAGE_USERS_LIMIT,\r\n  };\r\n\r\n  return (\r\n    <Root maxWidth=\"md\">\r\n      <Head title=\"Find new People\" />\r\n\r\n      <Query\r\n        query={GET_USERS}\r\n        variables={variables}\r\n        notifyOnNetworkStatusChange\r\n      >\r\n        {({ data, loading, fetchMore, networkStatus }) => {\r\n          if (loading && networkStatus === 1) {\r\n            return (\r\n              <PeopleContainer>\r\n                <Skeleton height={280} count={PEOPLE_PAGE_USERS_LIMIT} />\r\n              </PeopleContainer>\r\n            );\r\n          }\r\n\r\n          const { users, count } = data.getUsers;\r\n\r\n          if (!users.length > 0) return <Empty text=\"No people yet.\" />;\r\n\r\n          return (\r\n            <InfiniteScroll\r\n              data={users}\r\n              dataKey=\"getUsers.users\"\r\n              count={parseInt(count)}\r\n              variables={variables}\r\n              fetchMore={fetchMore}\r\n            >\r\n              {data => {\r\n                const showNextLoading =\r\n                  loading && networkStatus === 3 && count !== data.length;\r\n\r\n                return (\r\n                  <Fragment>\r\n                    <PeopleContainer>\r\n                      {data.map(user => (\r\n                        <PeopleCard key={user.id} user={user} />\r\n                      ))}\r\n                    </PeopleContainer>\r\n\r\n                    {showNextLoading && <Loading top=\"lg\" />}\r\n                  </Fragment>\r\n                );\r\n              }}\r\n            </InfiniteScroll>\r\n          );\r\n        }}\r\n      </Query>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Query } from 'react-apollo';\r\n\r\nimport { Container, Content } from 'components/Layout';\r\nimport { Loading } from 'components/Loading';\r\nimport Skeleton from 'components/Skeleton';\r\nimport Notification from 'components/App/Notification';\r\nimport InfiniteScroll from 'components/InfiniteScroll';\r\nimport Empty from 'components/Empty';\r\nimport Head from 'components/Head';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { GET_USER_NOTIFICATION } from 'graphql/notification';\r\n\r\nimport { NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT } from 'constants/DataLimit';\r\n\r\nconst Root = styled(Container)`\r\n  margin-top: ${p => p.theme.spacing.lg};\r\n`;\r\n\r\nconst List = styled.div`\r\n  overflow: hidden;\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  border: 1px solid ${p => p.theme.colors.border.main};\r\n`;\r\n\r\n/**\r\n * Notifications page\r\n */\r\nconst Notifications = () => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const variables = {\r\n    userId: auth.user.id,\r\n    skip: 0,\r\n    limit: NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT,\r\n  };\r\n\r\n  return (\r\n    <Content>\r\n      <Root maxWidth=\"md\">\r\n        <Head title={`${auth.user.username}'s Notifications`} />\r\n\r\n        <Query\r\n          query={GET_USER_NOTIFICATION}\r\n          variables={variables}\r\n          notifyOnNetworkStatusChange\r\n        >\r\n          {({ data, loading, fetchMore, networkStatus }) => {\r\n            if (loading && networkStatus === 1) {\r\n              return (\r\n                <Skeleton\r\n                  height={56}\r\n                  bottom=\"xxs\"\r\n                  count={NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT}\r\n                />\r\n              );\r\n            }\r\n\r\n            const { notifications, count } = data.getUserNotifications;\r\n\r\n            if (!notifications.length) {\r\n              return <Empty text=\"No notifications yet.\" />;\r\n            }\r\n\r\n            return (\r\n              <InfiniteScroll\r\n                data={notifications}\r\n                dataKey=\"getUserNotifications.notifications\"\r\n                count={parseInt(count)}\r\n                variables={variables}\r\n                fetchMore={fetchMore}\r\n              >\r\n                {data => {\r\n                  const showNextLoading =\r\n                    loading && networkStatus === 3 && count !== data.length;\r\n\r\n                  return (\r\n                    <>\r\n                      <List>\r\n                        {data.map(notification => (\r\n                          <Notification\r\n                            key={notification.id}\r\n                            notification={notification}\r\n                            close={() => false}\r\n                          />\r\n                        ))}\r\n                      </List>\r\n\r\n                      {showNextLoading && <Loading top=\"lg\" />}\r\n                    </>\r\n                  );\r\n                }}\r\n              </InfiniteScroll>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Root>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Content } from 'components/Layout';\r\nimport PostPopup from 'components/PostPopup';\r\n\r\n/**\r\n * Post detail page\r\n */\r\nconst Post = ({ match }) => {\r\n  return (\r\n    <Content>\r\n      <PostPopup usedInModal={false} id={match.params.id} />\r\n    </Content>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(Post);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { NavLink, generatePath, withRouter } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nimport { GET_CONVERSATIONS } from 'graphql/user';\r\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from 'graphql/messages';\r\n\r\nimport Search from 'components/Search';\r\nimport { PencilIcon } from 'components/icons';\r\nimport { LoadingDots } from 'components/Loading';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  width: 80px;\r\n  height: 100%;\r\n  border-right: 1px solid ${p => p.theme.colors.border.main};\r\n\r\n  @media (min-width: ${p => p.theme.screen.lg}) {\r\n    width: 330px;\r\n  }\r\n`;\r\n\r\nconst HeadingContainer = styled.div`\r\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\r\n  height: 60px;\r\n  padding: 0 ${p => p.theme.spacing.xs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: ${p => p.theme.screen.lg}) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h3`\r\n  display: none;\r\n  color: ${p => p.theme.colors.text.primary};\r\n  margin: 0;\r\n\r\n  @media (min-width: ${p => p.theme.screen.lg}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst NewMessage = styled(NavLink)`\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: ${p => p.theme.colors.grey[200]};\r\n  border-radius: 50%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  display: none;\r\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\r\n\r\n  @media (min-width: ${p => p.theme.screen.lg}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  margin-top: ${p => p.theme.spacing.sm};\r\n  padding: 0 ${p => p.theme.spacing.xxs};\r\n`;\r\n\r\nconst User = styled(NavLink)`\r\n  width: 100%;\r\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xxs};\r\n  margin-bottom: ${p => p.theme.spacing.xxs};\r\n  border-radius: ${p => p.theme.radius.md};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: ${p => p.theme.colors.text.primary};\r\n\r\n  @media (max-width: ${p => p.theme.screen.lg}) {\r\n    ${p =>\r\n      !p.seen &&\r\n      `\r\n        background-color: ${p.theme.colors.primary.light};\r\n      `};\r\n  }\r\n\r\n  &.selected {\r\n    background-color: ${p => p.theme.colors.grey[100]};\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  width: 100%;\r\n  display: none;\r\n  padding: 0 ${p => p.theme.spacing.xs};\r\n\r\n  @media (min-width: ${p => p.theme.screen.lg}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst FullNameUnSeen = styled.div`\r\n  width: 100%;\r\n  font-size: ${p => p.theme.font.size.sm};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  text-overflow: ellipsis;\r\n  width: 100%;\r\n`;\r\n\r\nconst UnSeen = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: ${p => p.theme.colors.primary.light};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst LastMessage = styled.div`\r\n  margin-top: ${p => p.theme.spacing.xxs};\r\n  font-size: ${p => p.theme.font.size.xxs};\r\n  color: ${p => p.theme.colors.grey[500]};\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\n/**\r\n * Component that renders users, with whom auth user had a chat\r\n */\r\nconst MessagesUsers = ({ location, authUser }) => {\r\n  const { subscribeToMore, data, loading } = useQuery(GET_CONVERSATIONS, {\r\n    variables: { authUserId: authUser.id },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const { newConversation } = subscriptionData.data;\r\n        const oldConversations = prev.getConversations;\r\n\r\n        if (oldConversations.some(u => u.id === newConversation.id)) {\r\n          return prev;\r\n        }\r\n\r\n        // Merge conversations\r\n        const conversations = newConversation;\r\n        delete conversations['receiverId'];\r\n        const mergedConversations = [newConversation, ...oldConversations];\r\n\r\n        return { getConversations: mergedConversations };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [subscribeToMore]);\r\n\r\n  return (\r\n    <Root>\r\n      <HeadingContainer>\r\n        <Heading>Chats</Heading>\r\n\r\n        <NewMessage\r\n          exact\r\n          activeClassName=\"selected\"\r\n          to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\r\n        >\r\n          <PencilIcon />\r\n        </NewMessage>\r\n      </HeadingContainer>\r\n\r\n      <SearchContainer>\r\n        <Search\r\n          location={location}\r\n          backgroundColor=\"white\"\r\n          forMessage\r\n          placeholder=\"Recherche message\"\r\n        />\r\n      </SearchContainer>\r\n\r\n      {loading && <LoadingDots top=\"xl\" />}\r\n\r\n      {!loading && (\r\n        <UserContainer>\r\n          {data.getConversations.map(user => {\r\n            const unseen = !user.lastMessageSender && !user.seen;\r\n\r\n            return (\r\n              <User\r\n                key={user.id}\r\n                activeClassName=\"selected\"\r\n                to={`/messages/${user.id}`}\r\n                seen={unseen ? 0 : 1}\r\n              >\r\n                <span>\r\n                  <Avatar image={user.image} size={50} />\r\n                </span>\r\n\r\n                <Info>\r\n                  <FullNameUnSeen>\r\n                    <FullName>{user.fullName}</FullName>\r\n\r\n                    {unseen && <UnSeen />}\r\n                  </FullNameUnSeen>\r\n\r\n                  <LastMessage>\r\n                    {user.lastMessageSender && 'You:'} {user.lastMessage}\r\n                  </LastMessage>\r\n                </Info>\r\n              </User>\r\n            );\r\n          })}\r\n        </UserContainer>\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessagesUsers.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(MessagesUsers);\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nimport { Button, Textarea } from 'components/Form';\r\nimport { SendIcon } from 'components/icons';\r\nimport Avatar from 'components/Avatar';\r\nimport { Spacing } from 'components/Layout';\r\n\r\nimport { CREATE_MESSAGE } from 'graphql/messages';\r\nimport { GET_CONVERSATIONS } from 'graphql/user';\r\n\r\nimport { currentDate } from 'utils/date';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  padding: 0 ${p => p.theme.spacing.sm};\r\n  overflow-y: auto;\r\n  height: 100vh;\r\n  margin-top: -120px;\r\n  padding-top: 120px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: ${p => p.theme.colors.grey[500]};\r\n    border-radius: ${p => p.theme.radius.lg};\r\n    visibility: hidden;\r\n\r\n    &:hover {\r\n      background-color: ${p => p.theme.colors.grey[600]};\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    ::-webkit-scrollbar-thumb {\r\n      visibility: visible;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Conversation = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst MessageDate = styled.span`\r\n  position: absolute;\r\n  bottom: -${p => p.theme.spacing.sm};\r\n  left: ${p => !p.userMessage && p.theme.spacing.lg};\r\n  right: -${p => p.userMessage && 0};\r\n  display: none;\r\n  font-size: ${p => p.theme.font.size.tiny};\r\n  color: ${p => p.theme.colors.text.secondary};\r\n`;\r\n\r\nconst MessageWrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  justify-content: ${p => p.userMessage && 'flex-end'};\r\n  margin: ${p => p.theme.spacing.md} 0;\r\n\r\n  &:hover ${MessageDate} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Message = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  position: relative;\r\n  max-width: 300px;\r\n  line-height: 21px;\r\n  font-size: ${p => p.theme.font.size.xs};\r\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xs};\r\n  border-radius: ${p => p.theme.radius.lg};\r\n  color: ${p => p.userMessage && p.theme.colors.white};\r\n  background-color: ${p =>\r\n    p.userMessage ? p.theme.colors.primary.light : p.theme.colors.grey[200]};\r\n`;\r\n\r\nconst Form = styled.form`\r\n  background-color: ${p => p.theme.colors.white};\r\n  position: sticky;\r\n  bottom: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  padding: ${p => p.theme.spacing.xxs};\r\n`;\r\n\r\nconst StyledTextarea = styled(Textarea)`\r\n  height: 38px;\r\n  border-radius: ${p => p.theme.radius.lg};\r\n  background-color: ${p => p.theme.colors.grey[200]};\r\n`;\r\n\r\nconst SendButton = styled(Button)`\r\n  margin-left: ${p => p.theme.spacing.sm};\r\n  align-self: center;\r\n`;\r\n\r\n/**\r\n * Component that renders messages conversations UI\r\n */\r\nconst MessagesChatConversation = ({\r\n  messages,\r\n  authUser,\r\n  chatUser,\r\n  data,\r\n  match,\r\n}) => {\r\n  const bottomRef = useRef(null);\r\n\r\n  const [messageText, setMessageText] = useState('');\r\n\r\n  const [createMessage] = useMutation(CREATE_MESSAGE);\r\n\r\n  useEffect(() => {\r\n    if (bottomRef.current) {\r\n      bottomRef.current.scrollIntoView();\r\n    }\r\n  }, [bottomRef, data]);\r\n\r\n  const sendMessage = e => {\r\n    e.preventDefault();\r\n\r\n    if (!messageText) return;\r\n\r\n    setMessageText('');\r\n    createMessage({\r\n      variables: {\r\n        input: {\r\n          sender: authUser.id,\r\n          receiver: chatUser ? chatUser.id : null,\r\n          message: messageText,\r\n        },\r\n      },\r\n      refetchQueries: ({ data }) => {\r\n        if (data && data.createMessage && data.createMessage.isFirstMessage) {\r\n          return [\r\n            {\r\n              query: GET_CONVERSATIONS,\r\n              variables: { authUserId: authUser.id },\r\n            },\r\n          ];\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const onEnterPress = e => {\r\n    if (e.keyCode === 13 && e.shiftKey === false) {\r\n      sendMessage(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <Conversation>\r\n        {messages.map(message => {\r\n          const isAuthUserReceiver = authUser.id === message.sender.id;\r\n\r\n          return (\r\n            <MessageWrapper userMessage={isAuthUserReceiver} key={message.id}>\r\n              {!isAuthUserReceiver && (\r\n                <Spacing right=\"xs\">\r\n                  <Avatar image={message.sender.image} />\r\n                </Spacing>\r\n              )}\r\n\r\n              <Message userMessage={isAuthUserReceiver}>\r\n                {message.message}\r\n              </Message>\r\n\r\n              <MessageDate userMessage={isAuthUserReceiver}>\r\n                {currentDate(message.createdAt)}\r\n              </MessageDate>\r\n            </MessageWrapper>\r\n          );\r\n        })}\r\n        <div ref={bottomRef} />\r\n      </Conversation>\r\n\r\n      {match.params.userId !== Routes.NEW_ID_VALUE && chatUser && (\r\n        <Form onSubmit={sendMessage}>\r\n          <StyledTextarea\r\n            placeholder=\"Type a message\"\r\n            value={messageText}\r\n            onChange={e => setMessageText(e.target.value)}\r\n            onKeyDown={onEnterPress}\r\n          />\r\n\r\n          <SendButton type=\"submit\" ghost>\r\n            <SendIcon width=\"28\" />\r\n          </SendButton>\r\n        </Form>\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessagesChatConversation.propTypes = {\r\n  messages: PropTypes.array.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n  chatUser: PropTypes.object,\r\n  data: PropTypes.any,\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MessagesChatConversation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { generatePath, withRouter, Link } from 'react-router-dom';\r\nimport { useSubscription } from '@apollo/react-hooks';\r\n\r\nimport Search from 'components/Search';\r\nimport Avatar from 'components/Avatar';\r\n\r\nimport { IS_USER_ONLINE_SUBSCRIPTION } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Root = styled.div`\r\n  position: relative;\r\n  background-color: ${p => p.theme.colors.white};\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 60px;\r\n  border-bottom: 1px solid ${p => p.theme.colors.border.main};\r\n  z-index: 1;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 0 ${p => p.theme.spacing.sm};\r\n  color: ${p => p.theme.colors.text.secondary};\r\n  font-size: ${p => p.theme.font.size.xs};\r\n`;\r\n\r\nconst To = styled.div`\r\n  margin-top: 1px;\r\n`;\r\n\r\nconst User = styled(Link)`\r\n  margin: 0 ${p => p.theme.spacing.xxs};\r\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xxs};\r\n  border-radius: ${p => p.theme.radius.md};\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  padding-left: ${p => p.theme.spacing.xs};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst FullName = styled.div`\r\n  font-size: ${p => p.theme.font.size.sm};\r\n  color: ${p => p.theme.colors.text.primary};\r\n  font-weight: ${p => p.theme.font.weight.bold};\r\n`;\r\n\r\nconst Online = styled.div`\r\n  display: inline-block;\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: ${p => p.theme.colors.success};\r\n  margin-left: ${p => p.theme.spacing.xs};\r\n  border-radius: 50%;\r\n`;\r\n\r\n/**\r\n * Heading component for messages chat\r\n */\r\nconst MessagesChatHeading = ({ location, match, chatUser }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\r\n    variables: {\r\n      authUserId: auth.user.id,\r\n      userId: chatUser ? chatUser.id : null,\r\n    },\r\n    skip: !chatUser,\r\n  });\r\n\r\n  // Update user's isOnline field in real time\r\n  if (!loading && data && chatUser) {\r\n    chatUser.isOnline = data.isUserOnline.isOnline;\r\n  }\r\n\r\n  if (match.params.userId === Routes.NEW_ID_VALUE || !chatUser) {\r\n    return (\r\n      <Root>\r\n        <InputContainer>\r\n          <To>To:</To>\r\n          <Search\r\n            location={location}\r\n            backgroundColor=\"white\"\r\n            hideIcon\r\n            forMessage\r\n            placeholder=\"Tapez le nom d'une personne\"\r\n            autoFocus\r\n          />\r\n        </InputContainer>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  if (chatUser) {\r\n    return (\r\n      <Root>\r\n        <User\r\n          to={generatePath(Routes.USER_PROFILE, {\r\n            username: chatUser.username,\r\n          })}\r\n        >\r\n          <Avatar image={chatUser.image} size={40} />\r\n\r\n          <Info>\r\n            <FullName>{chatUser.fullName}</FullName>\r\n\r\n            {chatUser.isOnline && <Online />}\r\n          </Info>\r\n        </User>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nMessagesChatHeading.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  chatUser: PropTypes.object,\r\n};\r\n\r\nexport default withRouter(MessagesChatHeading);\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\r\n\r\nimport { LoadingDots } from 'components/Loading';\r\nimport MessagesChatConversation from './MessagesChatConversation';\r\nimport MessagesChatHeading from './MessagesChatHeading';\r\n\r\nimport {\r\n  GET_MESSAGES,\r\n  GET_MESSAGES_SUBSCRIPTION,\r\n  UPDATE_MESSAGE_SEEN,\r\n} from 'graphql/messages';\r\nimport { GET_USER, GET_CONVERSATIONS, GET_AUTH_USER } from 'graphql/user';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\n/**\r\n * Messages chat wrapper\r\n */\r\nconst MessagesChat = ({ match, authUser }) => {\r\n  const { userId } = match.params;\r\n\r\n  const client = useApolloClient();\r\n\r\n  const { data, loading } = useQuery(GET_USER, {\r\n    variables: { id: userId },\r\n    skip: userId === Routes.NEW_ID_VALUE,\r\n  });\r\n\r\n  const {\r\n    subscribeToMore,\r\n    data: messages,\r\n    loading: messagesLoading,\r\n  } = useQuery(GET_MESSAGES, {\r\n    variables: { authUserId: authUser.id, userId },\r\n    skip: userId === Routes.NEW_ID_VALUE,\r\n    fetchPolicy: 'network-only',\r\n  });\r\n\r\n  const updateMessageSeen = useCallback(async () => {\r\n    try {\r\n      await client.mutate({\r\n        mutation: UPDATE_MESSAGE_SEEN,\r\n        variables: {\r\n          input: {\r\n            receiver: authUser.id,\r\n            sender: userId,\r\n          },\r\n        },\r\n        refetchQueries: () => [\r\n          {\r\n            query: GET_CONVERSATIONS,\r\n            variables: { authUserId: authUser.id },\r\n          },\r\n          { query: GET_AUTH_USER },\r\n        ],\r\n      });\r\n    } catch (err) {}\r\n  }, [authUser.id, client, userId]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: GET_MESSAGES_SUBSCRIPTION,\r\n      variables: { authUserId: authUser.id, userId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        updateMessageSeen();\r\n\r\n        const newMessage = subscriptionData.data.messageCreated;\r\n        const mergedMessages = [...prev.getMessages, newMessage];\r\n\r\n        return { getMessages: mergedMessages };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [authUser.id, userId, subscribeToMore, updateMessageSeen]);\r\n\r\n  useEffect(() => {\r\n    if (userId !== Routes.NEW_ID_VALUE) {\r\n      updateMessageSeen();\r\n    }\r\n  }, [userId, updateMessageSeen]);\r\n\r\n  if (loading || messagesLoading) {\r\n    return (\r\n      <Root>\r\n        <LoadingDots />\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  let chatUser = null;\r\n  if (data && data.getUser) {\r\n    chatUser = data.getUser;\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <MessagesChatHeading match={match} chatUser={chatUser} />\r\n\r\n      <MessagesChatConversation\r\n        authUser={authUser}\r\n        messages={messages ? messages.getMessages : []}\r\n        chatUser={chatUser}\r\n        data={messages}\r\n        match={match}\r\n      />\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessagesChat.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MessagesChat;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { HEADER_HEIGHT } from 'constants/Layout';\r\n\r\nimport MessagesUsers from './MessagesUsers';\r\nimport MessagesChat from './MessagesChat';\r\n\r\nconst Root = styled.div`\r\n  background-color: ${p => p.theme.colors.white};\r\n  position: relative;\r\n  margin-top: -${HEADER_HEIGHT}px;\r\n  padding-top: ${HEADER_HEIGHT}px;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    margin-left: ${p => p.theme.spacing.lg};\r\n    border-left: 1px solid ${p => p.theme.colors.border.main};\r\n    border-right: 1px solid ${p => p.theme.colors.border.main};\r\n  }\r\n`;\r\n\r\n/**\r\n * Messages page\r\n */\r\nconst Messages = ({ match }) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  return (\r\n    <Root>\r\n      <MessagesUsers authUser={auth.user} match={match} />\r\n\r\n      <MessagesChat match={match} authUser={auth.user} />\r\n    </Root>\r\n  );\r\n};\r\n\r\nMessages.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport Header from 'components/App/Header';\r\nimport NotFound from 'components/NotFound';\r\nimport SideBar from './SideBar';\r\nimport UserSuggestions from './UserSuggestions';\r\n\r\nimport Home from 'pages/Home';\r\nimport Profile from 'pages/Profile';\r\nimport Explore from 'pages/Explore';\r\nimport People from 'pages/People';\r\nimport Notifications from 'pages/Notifications';\r\nimport Post from 'pages/Post';\r\nimport Messages from 'pages/Messages';\r\n\r\nimport { useWindowSize } from 'hooks/useWindowSize';\r\nimport { useClickOutside } from 'hooks/useClickOutside';\r\n\r\nimport * as Routes from 'routes';\r\n\r\nimport theme from 'theme';\r\n\r\nimport { useStore } from 'store';\r\nimport { SET_AUTH_USER } from 'store/auth';\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  position: relative;\r\n\r\n  @media (min-width: ${p => p.theme.screen.md}) {\r\n    width: ${p => p.theme.screen.md};\r\n  }\r\n\r\n  @media (min-width: ${p => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\r\n    width: ${p => p.theme.screen.lg};\r\n  }\r\n`;\r\n\r\n/**\r\n * Main layout of the app, when user is authenticated\r\n */\r\nconst AppLayout = ({ location, authUser }) => {\r\n  const [{ auth }, dispatch] = useStore();\r\n\r\n  const windowSize = useWindowSize();\r\n  const isDesktop = windowSize.width >= parseInt(theme.screen.md, 10);\r\n  const [isSideBarOpen, setIsSidebarOpen] = useState(isDesktop);\r\n\r\n  const sideBarRef = useRef('');\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_AUTH_USER, payload: authUser });\r\n  }, [dispatch, authUser]);\r\n\r\n  useClickOutside(sideBarRef, () => {\r\n    if (!isDesktop && isSideBarOpen) {\r\n      setIsSidebarOpen(false);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsSidebarOpen(isDesktop);\r\n  }, [isDesktop]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!isDesktop) {\r\n        setIsSidebarOpen(false);\r\n      }\r\n    };\r\n  }, [location.pathname, isDesktop]);\r\n\r\n  if (!auth.user) return null;\r\n\r\n  return (\r\n    <>\r\n      <Header toggleSideBar={() => setIsSidebarOpen(!isSideBarOpen)} />\r\n\r\n      <Root>\r\n        <SideBar isOpen={isSideBarOpen} sideBarRef={sideBarRef} />\r\n\r\n        <Switch>\r\n          <Route exact path={Routes.HOME} component={Home} />\r\n\r\n          <Route exact path={Routes.EXPLORE} component={Explore} />\r\n\r\n          <Route exact path={Routes.PEOPLE} component={People} />\r\n\r\n          <Route exact path={Routes.NOTIFICATIONS} component={Notifications} />\r\n\r\n          <Route exact path={Routes.MESSAGES} component={Messages} />\r\n\r\n          <Route exact path={Routes.USER_PROFILE} component={Profile} />\r\n\r\n          <Route exact path={Routes.POST} component={Post} />\r\n\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n\r\n        <UserSuggestions pathname={location.pathname} />\r\n      </Root>\r\n    </>\r\n  );\r\n};\r\n\r\nAppLayout.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(AppLayout);\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\n/**\r\n * React hook for detecting window resizing\r\n */\r\nexport const useWindowSize = () => {\r\n  const isClient = typeof window === 'object';\r\n\r\n  const getSize = useCallback(\r\n    () => {\r\n      return {\r\n        width: isClient ? window.innerWidth : undefined,\r\n        height: isClient ? window.innerHeight : undefined,\r\n      };\r\n    },\r\n    [isClient]\r\n  );\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!isClient) {\r\n        return false;\r\n      }\r\n\r\n      function handleResize() {\r\n        setWindowSize(getSize());\r\n      }\r\n\r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    },\r\n    [getSize, isClient]\r\n  );\r\n\r\n  return windowSize;\r\n};\r\n","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n/**\r\n * Scrolls to top on route change\r\n */\r\nconst ScrollToTop = ({ children, location: { pathname } }) => {\r\n  useEffect(\r\n    () => {\r\n      window.scrollTo(0, 0);\r\n    },\r\n    [pathname]\r\n  );\r\n\r\n  return children || null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { GlobalStyle } from './GlobalStyles';\r\n\r\nimport { GET_AUTH_USER } from 'graphql/user';\r\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from 'graphql/messages';\r\nimport { NOTIFICATION_CREATED_OR_DELETED } from 'graphql/notification';\r\n\r\nimport Message from 'components/Message';\r\nimport { Loading } from 'components/Loading';\r\nimport AuthLayout from 'pages/Auth/AuthLayout';\r\nimport AppLayout from './AppLayout';\r\nimport ScrollToTop from './ScrollToTop';\r\n\r\nimport { useStore } from 'store';\r\n\r\n/**\r\n * Root component of the app\r\n */\r\nconst App = () => {\r\n  const [{ message }] = useStore();\r\n\r\n  const { loading, subscribeToMore, data, refetch } = useQuery(GET_AUTH_USER);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: NOTIFICATION_CREATED_OR_DELETED,\r\n      updateQuery: async (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const oldNotifications = prev.getAuthUser.newNotifications;\r\n        const {\r\n          operation,\r\n          notification,\r\n        } = subscriptionData.data.notificationCreatedOrDeleted;\r\n\r\n        let newNotifications;\r\n\r\n        if (operation === 'CREATE') {\r\n          // Don't show message notification in Header if user already is on notifications page\r\n          if (window.location.href.split('/')[3] === 'notifications') {\r\n            return prev;\r\n          }\r\n\r\n          // Add new notification\r\n          newNotifications = [notification, ...oldNotifications];\r\n        } else {\r\n          // Remove from notifications\r\n          const notifications = oldNotifications;\r\n          const index = notifications.findIndex(n => n.id === notification.id);\r\n          if (index > -1) {\r\n            notifications.splice(index, 1);\r\n          }\r\n\r\n          newNotifications = notifications;\r\n        }\r\n\r\n        // Attach new notifications to authUser\r\n        const authUser = prev.getAuthUser;\r\n        authUser.newNotifications = newNotifications;\r\n\r\n        return { getAuthUser: authUser };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [subscribeToMore]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = subscribeToMore({\r\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const oldConversations = prev.getAuthUser.newConversations;\r\n        const { newConversation } = subscriptionData.data;\r\n\r\n        // Don't show message notification in Header if user already is on messages page\r\n        if (window.location.href.split('/')[3] === 'messages') {\r\n          return prev;\r\n        }\r\n\r\n        // If authUser already has unseen message from that user,\r\n        // remove old message, so we can show the new one\r\n        const index = oldConversations.findIndex(\r\n          u => u.id === newConversation.id\r\n        );\r\n        if (index > -1) {\r\n          oldConversations.splice(index, 1);\r\n        }\r\n\r\n        // Merge conversations\r\n        const mergeConversations = [newConversation, ...oldConversations];\r\n\r\n        // Attach new conversation to authUser\r\n        const authUser = prev.getAuthUser;\r\n        authUser.newConversations = mergeConversations;\r\n\r\n        return { getAuthUser: authUser };\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [subscribeToMore]);\r\n\r\n  if (loading) return <Loading top=\"xl\" />;\r\n\r\n  return (\r\n    <Router>\r\n      <GlobalStyle />\r\n\r\n      <ScrollToTop>\r\n        <Switch>\r\n          {data.getAuthUser ? (\r\n            <Route\r\n              exact\r\n              render={() => <AppLayout authUser={data.getAuthUser} />}\r\n            />\r\n          ) : (\r\n            <Route exact render={() => <AuthLayout refetch={refetch} />} />\r\n          )}\r\n        </Switch>\r\n      </ScrollToTop>\r\n\r\n      {message.content.text && (\r\n        <Message\r\n          type={message.content.type}\r\n          autoClose={message.content.autoClose}\r\n        >\r\n          {message.content.text}\r\n        </Message>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { ApolloProvider as ApolloHooksProvider } from '@apollo/react-hooks';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { createApolloClient } from 'utils/apollo-client';\r\nimport { StoreProvider } from 'store';\r\n\r\nimport 'normalize.css';\r\nimport theme from 'theme';\r\n\r\nimport App from 'components/App/App';\r\n\r\n// GraphQL HTTP URL\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// GraphQL WebSocket (subscriptions) URL.\r\n// If its url is not set in .env then it has same url, host and pathname\r\nconst WEBSOCKET_API_URL = process.env.REACT_APP_WEBSOCKET_API_URL;\r\nconst websocketApiUrl = WEBSOCKET_API_URL\r\n  ? WEBSOCKET_API_URL\r\n  : API_URL.replace('https://', 'ws://').replace('http://', 'ws://');\r\n\r\n// Create a Apollo client\r\nconst apolloClient = createApolloClient(API_URL, websocketApiUrl);\r\n\r\nrender(\r\n  <ApolloProvider client={apolloClient}>\r\n    <ApolloHooksProvider client={apolloClient}>\r\n      <ThemeProvider theme={theme}>\r\n        <StoreProvider>\r\n          <App />\r\n        </StoreProvider>\r\n      </ThemeProvider>\r\n    </ApolloHooksProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}